DEBUG:anaconda.modules.common:The configuration is loaded from: ['/run/anaconda/anaconda.conf']
DEBUG:blivet:registered device format class DeviceFormat as None
DEBUG:blivet:registered device format class BIOSBoot as biosboot
DEBUG:blivet:registered device format class DiskLabel as disklabel
DEBUG:blivet:registered device format class DMRaidMember as dmraidmember
INFO:program:Running [1] mkdosfs --help ...
INFO:program:stdout[1]: mkfs.fat 4.2 (2021-01-31)

INFO:program:stderr[1]: Usage: mkdosfs [OPTIONS] TARGET [BLOCKS]
Create FAT filesystem in TARGET, which can be a block device or file. Use only
up to BLOCKS 1024 byte blocks if specified. With the -C option, file TARGET will be
created with a size of 1024 bytes times BLOCKS, which must be specified.

Options:
  -a              Disable alignment of data structures
  -A              Toggle Atari variant of the filesystem
  -b SECTOR       Select SECTOR as location of the FAT32 backup boot sector
  -c              Check device for bad blocks before creating the filesystem
  -C              Create file TARGET then create filesystem in it
  -D NUMBER       Write BIOS drive number NUMBER to boot sector
  -f COUNT        Create COUNT file allocation tables
  -F SIZE         Select FAT size SIZE (12, 16 or 32)
  -g GEOM         Select disk geometry: heads/sectors_per_track
  -h NUMBER       Write hidden sectors NUMBER to boot sector
  -i VOLID        Set volume ID to VOLID (a 32 bit hexadecimal number)
  -I              Ignore and disable safety checks
  -l FILENAME     Read bad blocks list from FILENAME
  -m FILENAME     Replace default error message in boot block with contents of FILENAME
  -M TYPE         Set media type in boot sector to TYPE
  --mbr[=y|n|a]   Fill (fake) MBR table with one partition which spans whole disk
  -n LABEL        Set volume name to LABEL (up to 11 characters long)
  --codepage=N    use DOS codepage N to encode label (default: 850)
  -r COUNT        Make room for at least COUNT entries in the root directory
  -R COUNT        Set minimal number of reserved sectors to COUNT
  -s COUNT        Set number of sectors per cluster to COUNT
  -S SIZE         Select a sector size of SIZE (a power of two, at least 512)
  -v              Verbose execution
  --variant=TYPE  Select variant TYPE of filesystem (standard or Atari)

  --invariant     Use constants for randomly generated or time based values
  --offset=SECTOR Write the filesystem at a specific sector into the device file.
  --help          Show this help message and exit

INFO:program:...done [1] (exit code: 0)
DEBUG:blivet:registered device format class Ext2FS as ext2
DEBUG:blivet:registered device format class Ext3FS as ext3
DEBUG:blivet:registered device format class Ext4FS as ext4
DEBUG:blivet:registered device format class FATFS as vfat
DEBUG:blivet:registered device format class EFIFS as efi
DEBUG:blivet:registered device format class BTRFS as btrfs
DEBUG:blivet:registered device format class GFS2 as gfs2
DEBUG:blivet:registered device format class JFS as jfs
DEBUG:blivet:registered device format class ReiserFS as reiserfs
DEBUG:blivet:registered device format class XFS as xfs
DEBUG:blivet:registered device format class StratisXFS as stratis xfs
DEBUG:blivet:registered device format class HFS as hfs
DEBUG:blivet:registered device format class AppleBootstrapFS as appleboot
DEBUG:blivet:registered device format class HFSPlus as hfs+
DEBUG:blivet:registered device format class MacEFIFS as macefi
DEBUG:blivet:registered device format class NTFS as ntfs
DEBUG:blivet:registered device format class ExFATFS as exfat
DEBUG:blivet:registered device format class F2FS as f2fs
DEBUG:blivet:registered device format class NFS as nfs
DEBUG:blivet:registered device format class NFSv4 as nfs4
DEBUG:blivet:registered device format class Iso9660FS as iso9660
DEBUG:blivet:registered device format class NoDevFS as nodev
DEBUG:blivet:registered device format class DevPtsFS as devpts
DEBUG:blivet:registered device format class ProcFS as proc
DEBUG:blivet:registered device format class SysFS as sysfs
DEBUG:blivet:registered device format class TmpFS as tmpfs
DEBUG:blivet:registered device format class BindFS as bind
DEBUG:blivet:registered device format class SELinuxFS as selinuxfs
DEBUG:blivet:registered device format class USBFS as usbfs
DEBUG:blivet:registered device format class EFIVarFS as efivarfs
INFO:program:Running [2] lvm version ...
INFO:program:stdout[2]:   LVM version:     2.03.17(2) (2022-11-10)
  Library version: 1.02.187 (2022-11-10)
  Driver version:  4.47.0
  Configuration:   ./configure --build=x86_64-redhat-linux-gnu --host=x86_64-redhat-linux-gnu --program-prefix= --disable-dependency-tracking --prefix=/usr --exec-prefix=/usr --bindir=/usr/bin --sbindir=/usr/sbin --sysconfdir=/etc --datadir=/usr/share --includedir=/usr/include --libdir=/usr/lib64 --libexecdir=/usr/libexec --localstatedir=/var --sharedstatedir=/var/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-default-dm-run-dir=/run --with-default-run-dir=/run/lvm --with-default-pid-dir=/run --with-default-locking-dir=/run/lock/lvm --with-usrlibdir=/usr/lib64 --enable-fsadm --enable-write_install --with-user= --with-group= --with-device-uid=0 --with-device-gid=6 --with-device-mode=0660 --enable-pkgconfig --enable-cmdlib --enable-dmeventd --enable-blkid_wiping --with-cluster=internal --with-udevdir=/usr/lib/udev/rules.d --enable-udev_sync --with-thin=internal --with-cache=internal --enable-lvmpolld --enable-lvmlockd-dlm --enable-lvmlockd-dlmcontrol --enable-lvmlockd-sanlock --enable-dbus-service --enable-notify-dbus --enable-dmfilemapd --with-writecache=internal --with-vdo=internal --with-vdo-format=/usr/bin/vdoformat --with-integrity=internal --with-default-use-devices-file=1 --disable-silent-rules --enable-app-machineid --enable-editline --disable-readline

INFO:program:stderr[2]: 
INFO:program:...done [2] (exit code: 0)
DEBUG:blivet:registered device format class LUKS as luks
DEBUG:blivet:registered device format class Integrity as integrity

INFO:anaconda.threading:Thread Done: AnaTaskThread-InstallBootloaderTask-1 (140579065665088)
INFO:anaconda.threading:Running Thread: AnaTaskThread-CreateBLSEntriesTask-1 (140579065665088)
DEBUG:anaconda.modules.storage.bootloader.installation:Only live payloads require this fix.
INFO:anaconda.threading:Thread Done: AnaTaskThread-CreateBLSEntriesTask-1 (140579065665088)
DEBUG:dasbus.connection:Publishing an object at /org/fedoraproject/Anaconda/Modules/Storage/Task/12.
DEBUG:dasbus.connection:Publishing an object at /org/fedoraproject/Anaconda/Modules/Storage/Task/13.
INFO:anaconda.threading:Running Thread: AnaTaskThread-RecreateInitrdsTask-1 (140579065665088)
DEBUG:anaconda.modules.storage.bootloader.utils:new-kernel-pkg does not exist, using dracut instead
INFO:anaconda.modules.storage.bootloader.utils:Recreating initrd for 5.14.0-299.el9.x86_64
INFO:program:Running in chroot '/mnt/sysroot'... depmod -a 5.14.0-299.el9.x86_64
DEBUG:program:Return code: 0
INFO:program:Running in chroot '/mnt/sysroot'... dracut -f /boot/initramfs-5.14.0-299.el9.x86_64.img 5.14.0-299.el9.x86_64
DEBUG:program:Return code: 0
INFO:anaconda.threading:Thread Done: AnaTaskThread-RecreateInitrdsTask-1 (140579065665088)
INFO:anaconda.threading:Running Thread: AnaTaskThread-FixBTRFSBootloaderTask-1 (140579065665088)
DEBUG:anaconda.modules.storage.bootloader.installation:Only live payloads require this fix.
INFO:anaconda.threading:Thread Done: AnaTaskThread-FixBTRFSBootloaderTask-1 (140579065665088)
INFO:anaconda.threading:Running Thread: AnaTaskThread-FixZIPLBootloaderTask-1 (140579065665088)
DEBUG:anaconda.modules.storage.bootloader.installation:ZIPL can be run only on s390x.
INFO:anaconda.threading:Thread Done: AnaTaskThread-FixZIPLBootloaderTask-1 (140579065665088)
DEBUG:anaconda.modules.common.base.base:Generating kickstart...
DEBUG:anaconda.modules.storage.nvdimm.nvdimm:Setting namespaces to use to: []
