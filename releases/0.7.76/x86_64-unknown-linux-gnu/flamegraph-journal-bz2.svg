<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno" version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678">
  <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
  <!--NOTES: foo&lt;br/&gt;bar&lt;br/&gt;super_speedy_syslog_searcher 0.7.76; git: eee7032c; -freq 8000; created 20241208T173440-0800; flamegraph-flamegraph 0.6.5; rust 1.73.0 x86_64-unknown-linux-gnu-->
  <defs>
    <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
      <stop stop-color="#eeeeee" offset="5%"/>
      <stop stop-color="#eeeeb0" offset="95%"/>
    </linearGradient>
  </defs>
  <style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
  <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    "use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
  <rect x="0" y="0" width="100%" height="678" fill="url(#background)"/>
  <text id="title" style="font-size:xx-small" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph: super_speedy_syslog_searcher 0.7.76; git: eee7032c; -freq 8000; created 20241208T173440-0800; flamegraph-flamegraph 0.6.5; rust 1.73.0 x86_64-unknown-linux-gnu<br/>; command: s4 ./logs/programs/journal/RHE_91_system.journal.bz2</text>
  <text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text>
  <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text>
  <text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text>
  <text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text>
  <svg id="frames" x="10" width="1180" total_samples="400">
    <g>
      <title>syscall_exit_to_user_mode (1 samples, 0.25%)</title>
      <rect x="0.0000%" y="581" width="0.2500%" height="15" fill="rgb(215,101,28)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="591.50"/>
    </g>
    <g>
      <title>exit_to_user_mode_prepare (1 samples, 0.25%)</title>
      <rect x="0.0000%" y="565" width="0.2500%" height="15" fill="rgb(240,77,26)" fg:x="0" fg:w="1"/>
      <text x="0.2500%" y="575.50"/>
    </g>
    <g>
      <title>__raw_callee_save___pv_queued_spin_unlock (11 samples, 2.75%)</title>
      <rect x="0.2500%" y="533" width="2.7500%" height="15" fill="rgb(236,100,45)" fg:x="1" fg:w="11"/>
      <text x="0.5000%" y="543.50">__..</text>
    </g>
    <g>
      <title>ret_from_fork (25 samples, 6.25%)</title>
      <rect x="0.0000%" y="597" width="6.2500%" height="15" fill="rgb(249,149,44)" fg:x="0" fg:w="25"/>
      <text x="0.2500%" y="607.50">ret_from..</text>
    </g>
    <g>
      <title>schedule_tail (24 samples, 6.00%)</title>
      <rect x="0.2500%" y="581" width="6.0000%" height="15" fill="rgb(215,144,34)" fg:x="1" fg:w="24"/>
      <text x="0.5000%" y="591.50">schedule..</text>
    </g>
    <g>
      <title>finish_task_switch.isra.0 (24 samples, 6.00%)</title>
      <rect x="0.2500%" y="565" width="6.0000%" height="15" fill="rgb(249,184,27)" fg:x="1" fg:w="24"/>
      <text x="0.5000%" y="575.50">finish_t..</text>
    </g>
    <g>
      <title>__perf_event_task_sched_in (24 samples, 6.00%)</title>
      <rect x="0.2500%" y="549" width="6.0000%" height="15" fill="rgb(253,170,3)" fg:x="1" fg:w="24"/>
      <text x="0.5000%" y="559.50">__perf_e..</text>
    </g>
    <g>
      <title>kmem_cache_free.part.0 (1 samples, 0.25%)</title>
      <rect x="6.2500%" y="373" width="0.2500%" height="15" fill="rgb(227,24,38)" fg:x="25" fg:w="1"/>
      <text x="6.5000%" y="383.50"/>
    </g>
    <g>
      <title>__slab_free.constprop.0 (1 samples, 0.25%)</title>
      <rect x="6.2500%" y="357" width="0.2500%" height="15" fill="rgb(225,166,35)" fg:x="25" fg:w="1"/>
      <text x="6.5000%" y="367.50"/>
    </g>
    <g>
      <title>try_to_free_buffers (2 samples, 0.50%)</title>
      <rect x="6.2500%" y="389" width="0.5000%" height="15" fill="rgb(250,34,27)" fg:x="25" fg:w="2"/>
      <text x="6.5000%" y="399.50"/>
    </g>
    <g>
      <title>__cancel_dirty_page (1 samples, 0.25%)</title>
      <rect x="6.5000%" y="373" width="0.2500%" height="15" fill="rgb(225,111,40)" fg:x="26" fg:w="1"/>
      <text x="6.7500%" y="383.50"/>
    </g>
    <g>
      <title>account_page_cleaned (1 samples, 0.25%)</title>
      <rect x="6.5000%" y="357" width="0.2500%" height="15" fill="rgb(243,74,16)" fg:x="26" fg:w="1"/>
      <text x="6.7500%" y="367.50"/>
    </g>
    <g>
      <title>percpu_counter_add_batch (1 samples, 0.25%)</title>
      <rect x="6.5000%" y="341" width="0.2500%" height="15" fill="rgb(219,106,45)" fg:x="26" fg:w="1"/>
      <text x="6.7500%" y="351.50"/>
    </g>
    <g>
      <title>truncate_cleanup_page (3 samples, 0.75%)</title>
      <rect x="6.2500%" y="405" width="0.7500%" height="15" fill="rgb(211,95,19)" fg:x="25" fg:w="3"/>
      <text x="6.5000%" y="415.50"/>
    </g>
    <g>
      <title>block_invalidatepage (1 samples, 0.25%)</title>
      <rect x="6.7500%" y="389" width="0.2500%" height="15" fill="rgb(208,16,47)" fg:x="27" fg:w="1"/>
      <text x="7.0000%" y="399.50"/>
    </g>
    <g>
      <title>task_work_run (4 samples, 1.00%)</title>
      <rect x="6.2500%" y="517" width="1.0000%" height="15" fill="rgb(206,18,50)" fg:x="25" fg:w="4"/>
      <text x="6.5000%" y="527.50"/>
    </g>
    <g>
      <title>__fput (4 samples, 1.00%)</title>
      <rect x="6.2500%" y="501" width="1.0000%" height="15" fill="rgb(210,120,45)" fg:x="25" fg:w="4"/>
      <text x="6.5000%" y="511.50"/>
    </g>
    <g>
      <title>dput (4 samples, 1.00%)</title>
      <rect x="6.2500%" y="485" width="1.0000%" height="15" fill="rgb(252,3,5)" fg:x="25" fg:w="4"/>
      <text x="6.5000%" y="495.50"/>
    </g>
    <g>
      <title>__dentry_kill (4 samples, 1.00%)</title>
      <rect x="6.2500%" y="469" width="1.0000%" height="15" fill="rgb(216,135,0)" fg:x="25" fg:w="4"/>
      <text x="6.5000%" y="479.50"/>
    </g>
    <g>
      <title>evict (4 samples, 1.00%)</title>
      <rect x="6.2500%" y="453" width="1.0000%" height="15" fill="rgb(232,48,28)" fg:x="25" fg:w="4"/>
      <text x="6.5000%" y="463.50"/>
    </g>
    <g>
      <title>ext4_evict_inode (4 samples, 1.00%)</title>
      <rect x="6.2500%" y="437" width="1.0000%" height="15" fill="rgb(225,179,4)" fg:x="25" fg:w="4"/>
      <text x="6.5000%" y="447.50"/>
    </g>
    <g>
      <title>truncate_inode_pages_range (4 samples, 1.00%)</title>
      <rect x="6.2500%" y="421" width="1.0000%" height="15" fill="rgb(228,2,6)" fg:x="25" fg:w="4"/>
      <text x="6.5000%" y="431.50"/>
    </g>
    <g>
      <title>delete_from_page_cache_batch (1 samples, 0.25%)</title>
      <rect x="7.0000%" y="405" width="0.2500%" height="15" fill="rgb(205,34,0)" fg:x="28" fg:w="1"/>
      <text x="7.2500%" y="415.50"/>
    </g>
    <g>
      <title>xas_store (1 samples, 0.25%)</title>
      <rect x="7.0000%" y="389" width="0.2500%" height="15" fill="rgb(212,131,5)" fg:x="28" fg:w="1"/>
      <text x="7.2500%" y="399.50"/>
    </g>
    <g>
      <title>vm_normal_page (1 samples, 0.25%)</title>
      <rect x="7.2500%" y="453" width="0.2500%" height="15" fill="rgb(249,10,14)" fg:x="29" fg:w="1"/>
      <text x="7.5000%" y="463.50"/>
    </g>
    <g>
      <title>__x64_sys_exit_group (6 samples, 1.50%)</title>
      <rect x="6.2500%" y="565" width="1.5000%" height="15" fill="rgb(219,187,49)" fg:x="25" fg:w="6"/>
      <text x="6.5000%" y="575.50"/>
    </g>
    <g>
      <title>do_group_exit (6 samples, 1.50%)</title>
      <rect x="6.2500%" y="549" width="1.5000%" height="15" fill="rgb(241,5,8)" fg:x="25" fg:w="6"/>
      <text x="6.5000%" y="559.50"/>
    </g>
    <g>
      <title>do_exit (6 samples, 1.50%)</title>
      <rect x="6.2500%" y="533" width="1.5000%" height="15" fill="rgb(238,144,25)" fg:x="25" fg:w="6"/>
      <text x="6.5000%" y="543.50"/>
    </g>
    <g>
      <title>mmput (2 samples, 0.50%)</title>
      <rect x="7.2500%" y="517" width="0.5000%" height="15" fill="rgb(228,125,30)" fg:x="29" fg:w="2"/>
      <text x="7.5000%" y="527.50"/>
    </g>
    <g>
      <title>exit_mmap (2 samples, 0.50%)</title>
      <rect x="7.2500%" y="501" width="0.5000%" height="15" fill="rgb(221,135,18)" fg:x="29" fg:w="2"/>
      <text x="7.5000%" y="511.50"/>
    </g>
    <g>
      <title>unmap_vmas (2 samples, 0.50%)</title>
      <rect x="7.2500%" y="485" width="0.5000%" height="15" fill="rgb(216,135,47)" fg:x="29" fg:w="2"/>
      <text x="7.5000%" y="495.50"/>
    </g>
    <g>
      <title>unmap_page_range (2 samples, 0.50%)</title>
      <rect x="7.2500%" y="469" width="0.5000%" height="15" fill="rgb(216,127,1)" fg:x="29" fg:w="2"/>
      <text x="7.5000%" y="479.50"/>
    </g>
    <g>
      <title>elf_map (1 samples, 0.25%)</title>
      <rect x="7.7500%" y="501" width="0.2500%" height="15" fill="rgb(223,187,36)" fg:x="31" fg:w="1"/>
      <text x="8.0000%" y="511.50"/>
    </g>
    <g>
      <title>__vm_munmap (1 samples, 0.25%)</title>
      <rect x="7.7500%" y="485" width="0.2500%" height="15" fill="rgb(247,197,25)" fg:x="31" fg:w="1"/>
      <text x="8.0000%" y="495.50"/>
    </g>
    <g>
      <title>__do_munmap (1 samples, 0.25%)</title>
      <rect x="7.7500%" y="469" width="0.2500%" height="15" fill="rgb(225,34,24)" fg:x="31" fg:w="1"/>
      <text x="8.0000%" y="479.50"/>
    </g>
    <g>
      <title>find_vma (1 samples, 0.25%)</title>
      <rect x="7.7500%" y="453" width="0.2500%" height="15" fill="rgb(227,147,34)" fg:x="31" fg:w="1"/>
      <text x="8.0000%" y="463.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (8 samples, 2.00%)</title>
      <rect x="6.2500%" y="597" width="2.0000%" height="15" fill="rgb(205,226,15)" fg:x="25" fg:w="8"/>
      <text x="6.5000%" y="607.50">e..</text>
    </g>
    <g>
      <title>do_syscall_64 (8 samples, 2.00%)</title>
      <rect x="6.2500%" y="581" width="2.0000%" height="15" fill="rgb(220,74,14)" fg:x="25" fg:w="8"/>
      <text x="6.5000%" y="591.50">d..</text>
    </g>
    <g>
      <title>__x64_sys_execve (2 samples, 0.50%)</title>
      <rect x="7.7500%" y="565" width="0.5000%" height="15" fill="rgb(237,59,15)" fg:x="31" fg:w="2"/>
      <text x="8.0000%" y="575.50"/>
    </g>
    <g>
      <title>do_execveat_common.isra.0 (2 samples, 0.50%)</title>
      <rect x="7.7500%" y="549" width="0.5000%" height="15" fill="rgb(248,134,53)" fg:x="31" fg:w="2"/>
      <text x="8.0000%" y="559.50"/>
    </g>
    <g>
      <title>bprm_execve (2 samples, 0.50%)</title>
      <rect x="7.7500%" y="533" width="0.5000%" height="15" fill="rgb(232,147,16)" fg:x="31" fg:w="2"/>
      <text x="8.0000%" y="543.50"/>
    </g>
    <g>
      <title>load_elf_binary (2 samples, 0.50%)</title>
      <rect x="7.7500%" y="517" width="0.5000%" height="15" fill="rgb(246,102,21)" fg:x="31" fg:w="2"/>
      <text x="8.0000%" y="527.50"/>
    </g>
    <g>
      <title>_copy_to_user (1 samples, 0.25%)</title>
      <rect x="8.0000%" y="501" width="0.2500%" height="15" fill="rgb(249,33,11)" fg:x="32" fg:w="1"/>
      <text x="8.2500%" y="511.50"/>
    </g>
    <g>
      <title>copy_user_generic_unrolled (1 samples, 0.25%)</title>
      <rect x="8.0000%" y="485" width="0.2500%" height="15" fill="rgb(232,168,48)" fg:x="32" fg:w="1"/>
      <text x="8.2500%" y="495.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.25%)</title>
      <rect x="8.0000%" y="469" width="0.2500%" height="15" fill="rgb(208,26,13)" fg:x="32" fg:w="1"/>
      <text x="8.2500%" y="479.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.25%)</title>
      <rect x="8.0000%" y="453" width="0.2500%" height="15" fill="rgb(216,51,29)" fg:x="32" fg:w="1"/>
      <text x="8.2500%" y="463.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.25%)</title>
      <rect x="8.0000%" y="437" width="0.2500%" height="15" fill="rgb(253,37,52)" fg:x="32" fg:w="1"/>
      <text x="8.2500%" y="447.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="8.0000%" y="421" width="0.2500%" height="15" fill="rgb(247,31,49)" fg:x="32" fg:w="1"/>
      <text x="8.2500%" y="431.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="8.0000%" y="405" width="0.2500%" height="15" fill="rgb(254,123,40)" fg:x="32" fg:w="1"/>
      <text x="8.2500%" y="415.50"/>
    </g>
    <g>
      <title>start_thread (1 samples, 0.25%)</title>
      <rect x="8.2500%" y="581" width="0.2500%" height="15" fill="rgb(209,148,13)" fg:x="33" fg:w="1"/>
      <text x="8.5000%" y="591.50"/>
    </g>
    <g>
      <title>__ctype_init (1 samples, 0.25%)</title>
      <rect x="8.2500%" y="565" width="0.2500%" height="15" fill="rgb(235,169,44)" fg:x="33" fg:w="1"/>
      <text x="8.5000%" y="575.50"/>
    </g>
    <g>
      <title>clone3 (2 samples, 0.50%)</title>
      <rect x="8.2500%" y="597" width="0.5000%" height="15" fill="rgb(208,138,34)" fg:x="33" fg:w="2"/>
      <text x="8.5000%" y="607.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.25%)</title>
      <rect x="8.5000%" y="581" width="0.2500%" height="15" fill="rgb(205,226,15)" fg:x="34" fg:w="1"/>
      <text x="8.7500%" y="591.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.25%)</title>
      <rect x="8.5000%" y="565" width="0.2500%" height="15" fill="rgb(220,74,14)" fg:x="34" fg:w="1"/>
      <text x="8.7500%" y="575.50"/>
    </g>
    <g>
      <title>__do_sys_clone3 (1 samples, 0.25%)</title>
      <rect x="8.5000%" y="549" width="0.2500%" height="15" fill="rgb(226,75,10)" fg:x="34" fg:w="1"/>
      <text x="8.7500%" y="559.50"/>
    </g>
    <g>
      <title>kernel_clone (1 samples, 0.25%)</title>
      <rect x="8.5000%" y="533" width="0.2500%" height="15" fill="rgb(225,70,27)" fg:x="34" fg:w="1"/>
      <text x="8.7500%" y="543.50"/>
    </g>
    <g>
      <title>copy_process (1 samples, 0.25%)</title>
      <rect x="8.5000%" y="517" width="0.2500%" height="15" fill="rgb(210,101,2)" fg:x="34" fg:w="1"/>
      <text x="8.7500%" y="527.50"/>
    </g>
    <g>
      <title>perf_event_init_task (1 samples, 0.25%)</title>
      <rect x="8.5000%" y="501" width="0.2500%" height="15" fill="rgb(215,189,39)" fg:x="34" fg:w="1"/>
      <text x="8.7500%" y="511.50"/>
    </g>
    <g>
      <title>inherit_task_group.isra.0 (1 samples, 0.25%)</title>
      <rect x="8.5000%" y="485" width="0.2500%" height="15" fill="rgb(234,227,7)" fg:x="34" fg:w="1"/>
      <text x="8.7500%" y="495.50"/>
    </g>
    <g>
      <title>inherit_event.constprop.0 (1 samples, 0.25%)</title>
      <rect x="8.5000%" y="469" width="0.2500%" height="15" fill="rgb(250,34,25)" fg:x="34" fg:w="1"/>
      <text x="8.7500%" y="479.50"/>
    </g>
    <g>
      <title>mutex_lock (1 samples, 0.25%)</title>
      <rect x="8.5000%" y="453" width="0.2500%" height="15" fill="rgb(218,205,15)" fg:x="34" fg:w="1"/>
      <text x="8.7500%" y="463.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.25%)</title>
      <rect x="8.7500%" y="597" width="0.2500%" height="15" fill="rgb(208,26,13)" fg:x="35" fg:w="1"/>
      <text x="9.0000%" y="607.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.25%)</title>
      <rect x="8.7500%" y="581" width="0.2500%" height="15" fill="rgb(216,51,29)" fg:x="35" fg:w="1"/>
      <text x="9.0000%" y="591.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.25%)</title>
      <rect x="8.7500%" y="565" width="0.2500%" height="15" fill="rgb(253,37,52)" fg:x="35" fg:w="1"/>
      <text x="9.0000%" y="575.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="8.7500%" y="549" width="0.2500%" height="15" fill="rgb(247,31,49)" fg:x="35" fg:w="1"/>
      <text x="9.0000%" y="559.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="8.7500%" y="533" width="0.2500%" height="15" fill="rgb(254,123,40)" fg:x="35" fg:w="1"/>
      <text x="9.0000%" y="543.50"/>
    </g>
    <g>
      <title>_dl_unload_cache (1 samples, 0.25%)</title>
      <rect x="9.0000%" y="533" width="0.2500%" height="15" fill="rgb(247,146,21)" fg:x="36" fg:w="1"/>
      <text x="9.2500%" y="543.50"/>
    </g>
    <g>
      <title>munmap (1 samples, 0.25%)</title>
      <rect x="9.0000%" y="517" width="0.2500%" height="15" fill="rgb(209,162,22)" fg:x="36" fg:w="1"/>
      <text x="9.2500%" y="527.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.25%)</title>
      <rect x="9.0000%" y="501" width="0.2500%" height="15" fill="rgb(205,226,15)" fg:x="36" fg:w="1"/>
      <text x="9.2500%" y="511.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.25%)</title>
      <rect x="9.0000%" y="485" width="0.2500%" height="15" fill="rgb(220,74,14)" fg:x="36" fg:w="1"/>
      <text x="9.2500%" y="495.50"/>
    </g>
    <g>
      <title>__x64_sys_munmap (1 samples, 0.25%)</title>
      <rect x="9.0000%" y="469" width="0.2500%" height="15" fill="rgb(218,184,12)" fg:x="36" fg:w="1"/>
      <text x="9.2500%" y="479.50"/>
    </g>
    <g>
      <title>__vm_munmap (1 samples, 0.25%)</title>
      <rect x="9.0000%" y="453" width="0.2500%" height="15" fill="rgb(247,197,25)" fg:x="36" fg:w="1"/>
      <text x="9.2500%" y="463.50"/>
    </g>
    <g>
      <title>__do_munmap (1 samples, 0.25%)</title>
      <rect x="9.0000%" y="437" width="0.2500%" height="15" fill="rgb(225,34,24)" fg:x="36" fg:w="1"/>
      <text x="9.2500%" y="447.50"/>
    </g>
    <g>
      <title>unmap_region (1 samples, 0.25%)</title>
      <rect x="9.0000%" y="421" width="0.2500%" height="15" fill="rgb(215,221,10)" fg:x="36" fg:w="1"/>
      <text x="9.2500%" y="431.50"/>
    </g>
    <g>
      <title>lru_add_drain (1 samples, 0.25%)</title>
      <rect x="9.0000%" y="405" width="0.2500%" height="15" fill="rgb(252,215,2)" fg:x="36" fg:w="1"/>
      <text x="9.2500%" y="415.50"/>
    </g>
    <g>
      <title>lru_add_drain_cpu (1 samples, 0.25%)</title>
      <rect x="9.0000%" y="389" width="0.2500%" height="15" fill="rgb(207,80,1)" fg:x="36" fg:w="1"/>
      <text x="9.2500%" y="399.50"/>
    </g>
    <g>
      <title>__pagevec_lru_add (1 samples, 0.25%)</title>
      <rect x="9.0000%" y="373" width="0.2500%" height="15" fill="rgb(207,69,45)" fg:x="36" fg:w="1"/>
      <text x="9.2500%" y="383.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.25%)</title>
      <rect x="9.2500%" y="485" width="0.2500%" height="15" fill="rgb(253,37,52)" fg:x="37" fg:w="1"/>
      <text x="9.5000%" y="495.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="9.2500%" y="469" width="0.2500%" height="15" fill="rgb(247,31,49)" fg:x="37" fg:w="1"/>
      <text x="9.5000%" y="479.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="9.2500%" y="453" width="0.2500%" height="15" fill="rgb(254,123,40)" fg:x="37" fg:w="1"/>
      <text x="9.5000%" y="463.50"/>
    </g>
    <g>
      <title>__mem_cgroup_charge (1 samples, 0.25%)</title>
      <rect x="9.2500%" y="437" width="0.2500%" height="15" fill="rgb(222,56,28)" fg:x="37" fg:w="1"/>
      <text x="9.5000%" y="447.50"/>
    </g>
    <g>
      <title>charge_memcg (1 samples, 0.25%)</title>
      <rect x="9.2500%" y="421" width="0.2500%" height="15" fill="rgb(240,39,15)" fg:x="37" fg:w="1"/>
      <text x="9.5000%" y="431.50"/>
    </g>
    <g>
      <title>memcg_check_events.isra.0 (1 samples, 0.25%)</title>
      <rect x="9.2500%" y="405" width="0.2500%" height="15" fill="rgb(251,15,39)" fg:x="37" fg:w="1"/>
      <text x="9.5000%" y="415.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (2 samples, 0.50%)</title>
      <rect x="9.2500%" y="517" width="0.5000%" height="15" fill="rgb(208,26,13)" fg:x="37" fg:w="2"/>
      <text x="9.5000%" y="527.50"/>
    </g>
    <g>
      <title>exc_page_fault (2 samples, 0.50%)</title>
      <rect x="9.2500%" y="501" width="0.5000%" height="15" fill="rgb(216,51,29)" fg:x="37" fg:w="2"/>
      <text x="9.5000%" y="511.50"/>
    </g>
    <g>
      <title>_dl_relocate_object (3 samples, 0.75%)</title>
      <rect x="9.2500%" y="533" width="0.7500%" height="15" fill="rgb(244,75,35)" fg:x="37" fg:w="3"/>
      <text x="9.5000%" y="543.50"/>
    </g>
    <g>
      <title>_dl_start (5 samples, 1.25%)</title>
      <rect x="9.0000%" y="581" width="1.2500%" height="15" fill="rgb(214,13,30)" fg:x="36" fg:w="5"/>
      <text x="9.2500%" y="591.50"/>
    </g>
    <g>
      <title>_dl_sysdep_start (5 samples, 1.25%)</title>
      <rect x="9.0000%" y="565" width="1.2500%" height="15" fill="rgb(238,104,49)" fg:x="36" fg:w="5"/>
      <text x="9.2500%" y="575.50"/>
    </g>
    <g>
      <title>dl_main (5 samples, 1.25%)</title>
      <rect x="9.0000%" y="549" width="1.2500%" height="15" fill="rgb(253,59,10)" fg:x="36" fg:w="5"/>
      <text x="9.2500%" y="559.50"/>
    </g>
    <g>
      <title>_dl_map_object_deps (1 samples, 0.25%)</title>
      <rect x="10.0000%" y="533" width="0.2500%" height="15" fill="rgb(208,68,2)" fg:x="40" fg:w="1"/>
      <text x="10.2500%" y="543.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (1 samples, 0.25%)</title>
      <rect x="10.0000%" y="517" width="0.2500%" height="15" fill="rgb(238,71,42)" fg:x="40" fg:w="1"/>
      <text x="10.2500%" y="527.50"/>
    </g>
    <g>
      <title>openaux (1 samples, 0.25%)</title>
      <rect x="10.0000%" y="501" width="0.2500%" height="15" fill="rgb(215,55,1)" fg:x="40" fg:w="1"/>
      <text x="10.2500%" y="511.50"/>
    </g>
    <g>
      <title>_dl_map_object (1 samples, 0.25%)</title>
      <rect x="10.0000%" y="485" width="0.2500%" height="15" fill="rgb(247,77,9)" fg:x="40" fg:w="1"/>
      <text x="10.2500%" y="495.50"/>
    </g>
    <g>
      <title>_dl_map_object_from_fd (1 samples, 0.25%)</title>
      <rect x="10.0000%" y="469" width="0.2500%" height="15" fill="rgb(253,121,32)" fg:x="40" fg:w="1"/>
      <text x="10.2500%" y="479.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.25%)</title>
      <rect x="10.0000%" y="453" width="0.2500%" height="15" fill="rgb(208,26,13)" fg:x="40" fg:w="1"/>
      <text x="10.2500%" y="463.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.25%)</title>
      <rect x="10.0000%" y="437" width="0.2500%" height="15" fill="rgb(216,51,29)" fg:x="40" fg:w="1"/>
      <text x="10.2500%" y="447.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.25%)</title>
      <rect x="10.0000%" y="421" width="0.2500%" height="15" fill="rgb(253,37,52)" fg:x="40" fg:w="1"/>
      <text x="10.2500%" y="431.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="10.0000%" y="405" width="0.2500%" height="15" fill="rgb(247,31,49)" fg:x="40" fg:w="1"/>
      <text x="10.2500%" y="415.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="10.0000%" y="389" width="0.2500%" height="15" fill="rgb(254,123,40)" fg:x="40" fg:w="1"/>
      <text x="10.2500%" y="399.50"/>
    </g>
    <g>
      <title>wp_page_copy (1 samples, 0.25%)</title>
      <rect x="10.0000%" y="373" width="0.2500%" height="15" fill="rgb(231,223,9)" fg:x="40" fg:w="1"/>
      <text x="10.2500%" y="383.50"/>
    </g>
    <g>
      <title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.25%)</title>
      <rect x="10.2500%" y="437" width="0.2500%" height="15" fill="rgb(243,52,34)" fg:x="41" fg:w="1"/>
      <text x="10.5000%" y="447.50"/>
    </g>
    <g>
      <title>termcolor::Ansi&lt;W&gt;::write_color (1 samples, 0.25%)</title>
      <rect x="10.5000%" y="421" width="0.2500%" height="15" fill="rgb(250,61,20)" fg:x="42" fg:w="1"/>
      <text x="10.7500%" y="431.50"/>
    </g>
    <g>
      <title>std::io::Write::write_all (1 samples, 0.25%)</title>
      <rect x="10.5000%" y="405" width="0.2500%" height="15" fill="rgb(251,145,9)" fg:x="42" fg:w="1"/>
      <text x="10.7500%" y="415.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.25%)</title>
      <rect x="10.5000%" y="389" width="0.2500%" height="15" fill="rgb(215,142,33)" fg:x="42" fg:w="1"/>
      <text x="10.7500%" y="399.50"/>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.25%)</title>
      <rect x="10.5000%" y="373" width="0.2500%" height="15" fill="rgb(232,39,45)" fg:x="42" fg:w="1"/>
      <text x="10.7500%" y="383.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.25%)</title>
      <rect x="10.5000%" y="357" width="0.2500%" height="15" fill="rgb(216,85,2)" fg:x="42" fg:w="1"/>
      <text x="10.7500%" y="367.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.25%)</title>
      <rect x="10.7500%" y="373" width="0.2500%" height="15" fill="rgb(216,85,2)" fg:x="43" fg:w="1"/>
      <text x="11.0000%" y="383.50"/>
    </g>
    <g>
      <title>__memrchr_evex (1 samples, 0.25%)</title>
      <rect x="10.7500%" y="357" width="0.2500%" height="15" fill="rgb(249,31,17)" fg:x="43" fg:w="1"/>
      <text x="11.0000%" y="367.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (3 samples, 0.75%)</title>
      <rect x="10.7500%" y="405" width="0.7500%" height="15" fill="rgb(215,142,33)" fg:x="43" fg:w="3"/>
      <text x="11.0000%" y="415.50"/>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (3 samples, 0.75%)</title>
      <rect x="10.7500%" y="389" width="0.7500%" height="15" fill="rgb(232,39,45)" fg:x="43" fg:w="3"/>
      <text x="11.0000%" y="399.50"/>
    </g>
    <g>
      <title>&lt;termcolor::WriterInner&lt;W&gt; as termcolor::WriteColor&gt;::set_color (5 samples, 1.25%)</title>
      <rect x="10.5000%" y="437" width="1.2500%" height="15" fill="rgb(234,182,7)" fg:x="42" fg:w="5"/>
      <text x="10.7500%" y="447.50"/>
    </g>
    <g>
      <title>std::io::Write::write_all (4 samples, 1.00%)</title>
      <rect x="10.7500%" y="421" width="1.0000%" height="15" fill="rgb(251,145,9)" fg:x="43" fg:w="4"/>
      <text x="11.0000%" y="431.50"/>
    </g>
    <g>
      <title>syscall_return_via_sysret (1 samples, 0.25%)</title>
      <rect x="11.7500%" y="373" width="0.2500%" height="15" fill="rgb(230,222,6)" fg:x="47" fg:w="1"/>
      <text x="12.0000%" y="383.50"/>
    </g>
    <g>
      <title>syscall_exit_to_user_mode (1 samples, 0.25%)</title>
      <rect x="12.0000%" y="341" width="0.2500%" height="15" fill="rgb(215,101,28)" fg:x="48" fg:w="1"/>
      <text x="12.2500%" y="351.50"/>
    </g>
    <g>
      <title>dput (1 samples, 0.25%)</title>
      <rect x="12.2500%" y="293" width="0.2500%" height="15" fill="rgb(252,3,5)" fg:x="49" fg:w="1"/>
      <text x="12.5000%" y="303.50"/>
    </g>
    <g>
      <title>__fsnotify_parent (3 samples, 0.75%)</title>
      <rect x="12.2500%" y="309" width="0.7500%" height="15" fill="rgb(232,3,50)" fg:x="49" fg:w="3"/>
      <text x="12.5000%" y="319.50"/>
    </g>
    <g>
      <title>vfs_write (6 samples, 1.50%)</title>
      <rect x="12.2500%" y="325" width="1.5000%" height="15" fill="rgb(216,184,13)" fg:x="49" fg:w="6"/>
      <text x="12.5000%" y="335.50"/>
    </g>
    <g>
      <title>fput_many (1 samples, 0.25%)</title>
      <rect x="13.7500%" y="325" width="0.2500%" height="15" fill="rgb(223,66,3)" fg:x="55" fg:w="1"/>
      <text x="14.0000%" y="335.50"/>
    </g>
    <g>
      <title>rcu_read_unlock_strict (2 samples, 0.50%)</title>
      <rect x="14.0000%" y="277" width="0.5000%" height="15" fill="rgb(251,95,14)" fg:x="56" fg:w="2"/>
      <text x="14.2500%" y="287.50"/>
    </g>
    <g>
      <title>__fget_files (3 samples, 0.75%)</title>
      <rect x="14.0000%" y="293" width="0.7500%" height="15" fill="rgb(209,124,29)" fg:x="56" fg:w="3"/>
      <text x="14.2500%" y="303.50"/>
    </g>
    <g>
      <title>__fdget_pos (4 samples, 1.00%)</title>
      <rect x="14.0000%" y="325" width="1.0000%" height="15" fill="rgb(205,61,45)" fg:x="56" fg:w="4"/>
      <text x="14.2500%" y="335.50"/>
    </g>
    <g>
      <title>__fget_light (4 samples, 1.00%)</title>
      <rect x="14.0000%" y="309" width="1.0000%" height="15" fill="rgb(243,103,32)" fg:x="56" fg:w="4"/>
      <text x="14.2500%" y="319.50"/>
    </g>
    <g>
      <title>do_syscall_64 (14 samples, 3.50%)</title>
      <rect x="12.0000%" y="357" width="3.5000%" height="15" fill="rgb(220,74,14)" fg:x="48" fg:w="14"/>
      <text x="12.2500%" y="367.50">do_..</text>
    </g>
    <g>
      <title>ksys_write (13 samples, 3.25%)</title>
      <rect x="12.2500%" y="341" width="3.2500%" height="15" fill="rgb(223,155,43)" fg:x="49" fg:w="13"/>
      <text x="12.5000%" y="351.50">ksy..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (15 samples, 3.75%)</title>
      <rect x="12.0000%" y="373" width="3.7500%" height="15" fill="rgb(205,226,15)" fg:x="48" fg:w="15"/>
      <text x="12.2500%" y="383.50">entr..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64 (1 samples, 0.25%)</title>
      <rect x="15.7500%" y="373" width="0.2500%" height="15" fill="rgb(234,224,53)" fg:x="63" fg:w="1"/>
      <text x="16.0000%" y="383.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::flush (19 samples, 4.75%)</title>
      <rect x="11.7500%" y="437" width="4.7500%" height="15" fill="rgb(244,108,51)" fg:x="47" fg:w="19"/>
      <text x="12.0000%" y="447.50">&lt;std::..</text>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (19 samples, 4.75%)</title>
      <rect x="11.7500%" y="421" width="4.7500%" height="15" fill="rgb(224,207,51)" fg:x="47" fg:w="19"/>
      <text x="12.0000%" y="431.50">&lt;&amp;std:..</text>
    </g>
    <g>
      <title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (19 samples, 4.75%)</title>
      <rect x="11.7500%" y="405" width="4.7500%" height="15" fill="rgb(240,178,54)" fg:x="47" fg:w="19"/>
      <text x="12.0000%" y="415.50">std::i..</text>
    </g>
    <g>
      <title>__GI___libc_write (19 samples, 4.75%)</title>
      <rect x="11.7500%" y="389" width="4.7500%" height="15" fill="rgb(232,197,30)" fg:x="47" fg:w="19"/>
      <text x="12.0000%" y="399.50">__GI__..</text>
    </g>
    <g>
      <title>__GI___pthread_disable_asynccancel (2 samples, 0.50%)</title>
      <rect x="16.0000%" y="373" width="0.5000%" height="15" fill="rgb(234,197,42)" fg:x="64" fg:w="2"/>
      <text x="16.2500%" y="383.50"/>
    </g>
    <g>
      <title>s4lib::printer::printers::PrinterLogMessage::print_journalentry_color (26 samples, 6.50%)</title>
      <rect x="10.2500%" y="453" width="6.5000%" height="15" fill="rgb(248,209,52)" fg:x="41" fg:w="26"/>
      <text x="10.5000%" y="463.50">s4lib::pr..</text>
    </g>
    <g>
      <title>_dl_relocate_object (2 samples, 0.50%)</title>
      <rect x="16.7500%" y="245" width="0.5000%" height="15" fill="rgb(244,75,35)" fg:x="67" fg:w="2"/>
      <text x="17.0000%" y="255.50"/>
    </g>
    <g>
      <title>_dl_lookup_symbol_x (2 samples, 0.50%)</title>
      <rect x="16.7500%" y="229" width="0.5000%" height="15" fill="rgb(229,85,42)" fg:x="67" fg:w="2"/>
      <text x="17.0000%" y="239.50"/>
    </g>
    <g>
      <title>do_lookup_x (2 samples, 0.50%)</title>
      <rect x="16.7500%" y="213" width="0.5000%" height="15" fill="rgb(240,183,18)" fg:x="67" fg:w="2"/>
      <text x="17.0000%" y="223.50"/>
    </g>
    <g>
      <title>dlopen@GLIBC_2.2.5 (3 samples, 0.75%)</title>
      <rect x="16.7500%" y="405" width="0.7500%" height="15" fill="rgb(248,147,24)" fg:x="67" fg:w="3"/>
      <text x="17.0000%" y="415.50"/>
    </g>
    <g>
      <title>_dlerror_run (3 samples, 0.75%)</title>
      <rect x="16.7500%" y="389" width="0.7500%" height="15" fill="rgb(208,58,37)" fg:x="67" fg:w="3"/>
      <text x="17.0000%" y="399.50"/>
    </g>
    <g>
      <title>_dl_catch_error (3 samples, 0.75%)</title>
      <rect x="16.7500%" y="373" width="0.7500%" height="15" fill="rgb(251,190,30)" fg:x="67" fg:w="3"/>
      <text x="17.0000%" y="383.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (3 samples, 0.75%)</title>
      <rect x="16.7500%" y="357" width="0.7500%" height="15" fill="rgb(238,71,42)" fg:x="67" fg:w="3"/>
      <text x="17.0000%" y="367.50"/>
    </g>
    <g>
      <title>dlopen_doit (3 samples, 0.75%)</title>
      <rect x="16.7500%" y="341" width="0.7500%" height="15" fill="rgb(227,103,25)" fg:x="67" fg:w="3"/>
      <text x="17.0000%" y="351.50"/>
    </g>
    <g>
      <title>_dl_open (3 samples, 0.75%)</title>
      <rect x="16.7500%" y="325" width="0.7500%" height="15" fill="rgb(246,203,24)" fg:x="67" fg:w="3"/>
      <text x="17.0000%" y="335.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (3 samples, 0.75%)</title>
      <rect x="16.7500%" y="309" width="0.7500%" height="15" fill="rgb(238,71,42)" fg:x="67" fg:w="3"/>
      <text x="17.0000%" y="319.50"/>
    </g>
    <g>
      <title>dl_open_worker (3 samples, 0.75%)</title>
      <rect x="16.7500%" y="293" width="0.7500%" height="15" fill="rgb(248,64,50)" fg:x="67" fg:w="3"/>
      <text x="17.0000%" y="303.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (3 samples, 0.75%)</title>
      <rect x="16.7500%" y="277" width="0.7500%" height="15" fill="rgb(238,71,42)" fg:x="67" fg:w="3"/>
      <text x="17.0000%" y="287.50"/>
    </g>
    <g>
      <title>dl_open_worker_begin (3 samples, 0.75%)</title>
      <rect x="16.7500%" y="261" width="0.7500%" height="15" fill="rgb(243,153,31)" fg:x="67" fg:w="3"/>
      <text x="17.0000%" y="271.50"/>
    </g>
    <g>
      <title>_dl_map_object_deps (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="245" width="0.2500%" height="15" fill="rgb(208,68,2)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="255.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="229" width="0.2500%" height="15" fill="rgb(238,71,42)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="239.50"/>
    </g>
    <g>
      <title>openaux (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="213" width="0.2500%" height="15" fill="rgb(215,55,1)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="223.50"/>
    </g>
    <g>
      <title>_dl_map_object (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="197" width="0.2500%" height="15" fill="rgb(247,77,9)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="207.50"/>
    </g>
    <g>
      <title>_dl_map_object_from_fd (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="181" width="0.2500%" height="15" fill="rgb(253,121,32)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="191.50"/>
    </g>
    <g>
      <title>mprotect (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="165" width="0.2500%" height="15" fill="rgb(228,68,36)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="175.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="149" width="0.2500%" height="15" fill="rgb(205,226,15)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="159.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="133" width="0.2500%" height="15" fill="rgb(220,74,14)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="143.50"/>
    </g>
    <g>
      <title>__x64_sys_mprotect (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="117" width="0.2500%" height="15" fill="rgb(254,23,50)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="127.50"/>
    </g>
    <g>
      <title>do_mprotect_pkey (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="101" width="0.2500%" height="15" fill="rgb(224,41,39)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="111.50"/>
    </g>
    <g>
      <title>mprotect_fixup (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="85" width="0.2500%" height="15" fill="rgb(232,46,46)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="95.50"/>
    </g>
    <g>
      <title>__split_vma (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="69" width="0.2500%" height="15" fill="rgb(231,148,17)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="79.50"/>
    </g>
    <g>
      <title>__vma_adjust (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="53" width="0.2500%" height="15" fill="rgb(224,210,22)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="63.50"/>
    </g>
    <g>
      <title>__rb_insert_augmented (1 samples, 0.25%)</title>
      <rect x="17.2500%" y="37" width="0.2500%" height="15" fill="rgb(226,229,49)" fg:x="69" fg:w="1"/>
      <text x="17.5000%" y="47.50"/>
    </g>
    <g>
      <title>s4lib::libload::systemd_dlopen2::load_library_systemd (4 samples, 1.00%)</title>
      <rect x="16.7500%" y="453" width="1.0000%" height="15" fill="rgb(209,147,6)" fg:x="67" fg:w="4"/>
      <text x="17.0000%" y="463.50"/>
    </g>
    <g>
      <title>dlopen2::wrapper::container::Container&lt;T&gt;::load (4 samples, 1.00%)</title>
      <rect x="16.7500%" y="437" width="1.0000%" height="15" fill="rgb(205,124,22)" fg:x="67" fg:w="4"/>
      <text x="17.0000%" y="447.50"/>
    </g>
    <g>
      <title>dlopen2::raw::common::Library::open (4 samples, 1.00%)</title>
      <rect x="16.7500%" y="421" width="1.0000%" height="15" fill="rgb(215,66,11)" fg:x="67" fg:w="4"/>
      <text x="17.0000%" y="431.50"/>
    </g>
    <g>
      <title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title>
      <rect x="17.5000%" y="405" width="0.2500%" height="15" fill="rgb(249,2,22)" fg:x="70" fg:w="1"/>
      <text x="17.7500%" y="415.50"/>
    </g>
    <g>
      <title>alloc::raw_vec::finish_grow (1 samples, 0.25%)</title>
      <rect x="17.5000%" y="389" width="0.2500%" height="15" fill="rgb(237,133,22)" fg:x="70" fg:w="1"/>
      <text x="17.7500%" y="399.50"/>
    </g>
    <g>
      <title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (2 samples, 0.50%)</title>
      <rect x="17.7500%" y="453" width="0.5000%" height="15" fill="rgb(230,19,42)" fg:x="71" fg:w="2"/>
      <text x="18.0000%" y="463.50"/>
    </g>
    <g>
      <title>crossbeam_channel::select::SelectedOperation::recv (2 samples, 0.50%)</title>
      <rect x="18.2500%" y="453" width="0.5000%" height="15" fill="rgb(206,140,19)" fg:x="73" fg:w="2"/>
      <text x="18.5000%" y="463.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (2 samples, 0.50%)</title>
      <rect x="18.2500%" y="437" width="0.5000%" height="15" fill="rgb(217,126,36)" fg:x="73" fg:w="2"/>
      <text x="18.5000%" y="447.50"/>
    </g>
    <g>
      <title>__sched_yield (1 samples, 0.25%)</title>
      <rect x="18.7500%" y="389" width="0.2500%" height="15" fill="rgb(254,100,22)" fg:x="75" fg:w="1"/>
      <text x="19.0000%" y="399.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.25%)</title>
      <rect x="18.7500%" y="373" width="0.2500%" height="15" fill="rgb(205,226,15)" fg:x="75" fg:w="1"/>
      <text x="19.0000%" y="383.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.25%)</title>
      <rect x="18.7500%" y="357" width="0.2500%" height="15" fill="rgb(220,74,14)" fg:x="75" fg:w="1"/>
      <text x="19.0000%" y="367.50"/>
    </g>
    <g>
      <title>syscall_enter_from_user_mode (1 samples, 0.25%)</title>
      <rect x="18.7500%" y="341" width="0.2500%" height="15" fill="rgb(224,163,22)" fg:x="75" fg:w="1"/>
      <text x="19.0000%" y="351.50"/>
    </g>
    <g>
      <title>crossbeam_channel::context::Context::wait_until (6 samples, 1.50%)</title>
      <rect x="18.7500%" y="405" width="1.5000%" height="15" fill="rgb(218,28,27)" fg:x="75" fg:w="6"/>
      <text x="19.0000%" y="415.50"/>
    </g>
    <g>
      <title>crossbeam_channel::select::Select::select (7 samples, 1.75%)</title>
      <rect x="18.7500%" y="453" width="1.7500%" height="15" fill="rgb(218,151,27)" fg:x="75" fg:w="7"/>
      <text x="19.0000%" y="463.50"/>
    </g>
    <g>
      <title>crossbeam_channel::select::run_select (7 samples, 1.75%)</title>
      <rect x="18.7500%" y="437" width="1.7500%" height="15" fill="rgb(238,41,29)" fg:x="75" fg:w="7"/>
      <text x="19.0000%" y="447.50"/>
    </g>
    <g>
      <title>crossbeam_channel::context::Context::with::{{closure}} (7 samples, 1.75%)</title>
      <rect x="18.7500%" y="421" width="1.7500%" height="15" fill="rgb(251,136,16)" fg:x="75" fg:w="7"/>
      <text x="19.0000%" y="431.50"/>
    </g>
    <g>
      <title>cfree@GLIBC_2.2.5 (1 samples, 0.25%)</title>
      <rect x="20.5000%" y="453" width="0.2500%" height="15" fill="rgb(240,159,37)" fg:x="82" fg:w="1"/>
      <text x="20.7500%" y="463.50"/>
    </g>
    <g>
      <title>_int_free (1 samples, 0.25%)</title>
      <rect x="20.5000%" y="437" width="0.2500%" height="15" fill="rgb(221,113,48)" fg:x="82" fg:w="1"/>
      <text x="20.7500%" y="447.50"/>
    </g>
    <g>
      <title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (1 samples, 0.25%)</title>
      <rect x="20.7500%" y="453" width="0.2500%" height="15" fill="rgb(224,108,5)" fg:x="83" fg:w="1"/>
      <text x="21.0000%" y="463.50"/>
    </g>
    <g>
      <title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (1 samples, 0.25%)</title>
      <rect x="20.7500%" y="437" width="0.2500%" height="15" fill="rgb(211,181,27)" fg:x="83" fg:w="1"/>
      <text x="21.0000%" y="447.50"/>
    </g>
    <g>
      <title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (1 samples, 0.25%)</title>
      <rect x="20.7500%" y="421" width="0.2500%" height="15" fill="rgb(223,155,52)" fg:x="83" fg:w="1"/>
      <text x="21.0000%" y="431.50"/>
    </g>
    <g>
      <title>s4::processing_loop (44 samples, 11.00%)</title>
      <rect x="10.2500%" y="469" width="11.0000%" height="15" fill="rgb(233,182,14)" fg:x="41" fg:w="44"/>
      <text x="10.5000%" y="479.50">s4::processing_l..</text>
    </g>
    <g>
      <title>std::rt::lang_start::_{{closure}} (45 samples, 11.25%)</title>
      <rect x="10.2500%" y="517" width="11.2500%" height="15" fill="rgb(225,45,7)" fg:x="41" fg:w="45"/>
      <text x="10.5000%" y="527.50">std::rt::lang_sta..</text>
    </g>
    <g>
      <title>std::sys_common::backtrace::__rust_begin_short_backtrace (45 samples, 11.25%)</title>
      <rect x="10.2500%" y="501" width="11.2500%" height="15" fill="rgb(210,88,34)" fg:x="41" fg:w="45"/>
      <text x="10.5000%" y="511.50">std::sys_common::..</text>
    </g>
    <g>
      <title>s4::main (45 samples, 11.25%)</title>
      <rect x="10.2500%" y="485" width="11.2500%" height="15" fill="rgb(221,151,31)" fg:x="41" fg:w="45"/>
      <text x="10.5000%" y="495.50">s4::main</text>
    </g>
    <g>
      <title>s4::cli_process_args (1 samples, 0.25%)</title>
      <rect x="21.2500%" y="469" width="0.2500%" height="15" fill="rgb(217,50,44)" fg:x="85" fg:w="1"/>
      <text x="21.5000%" y="479.50"/>
    </g>
    <g>
      <title>&lt;s4::CLI_Args as clap_builder::derive::Args&gt;::augment_args (1 samples, 0.25%)</title>
      <rect x="21.2500%" y="453" width="0.2500%" height="15" fill="rgb(230,145,47)" fg:x="85" fg:w="1"/>
      <text x="21.5000%" y="463.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (1 samples, 0.25%)</title>
      <rect x="21.2500%" y="437" width="0.2500%" height="15" fill="rgb(217,126,36)" fg:x="85" fg:w="1"/>
      <text x="21.5000%" y="447.50"/>
    </g>
    <g>
      <title>_start (51 samples, 12.75%)</title>
      <rect x="9.0000%" y="597" width="12.7500%" height="15" fill="rgb(210,219,27)" fg:x="36" fg:w="51"/>
      <text x="9.2500%" y="607.50">_start</text>
    </g>
    <g>
      <title>__libc_start_main@@GLIBC_2.34 (46 samples, 11.50%)</title>
      <rect x="10.2500%" y="581" width="11.5000%" height="15" fill="rgb(217,176,50)" fg:x="41" fg:w="46"/>
      <text x="10.5000%" y="591.50">__libc_start_main..</text>
    </g>
    <g>
      <title>__libc_start_call_main (46 samples, 11.50%)</title>
      <rect x="10.2500%" y="565" width="11.5000%" height="15" fill="rgb(249,173,1)" fg:x="41" fg:w="46"/>
      <text x="10.5000%" y="575.50">__libc_start_call..</text>
    </g>
    <g>
      <title>main (46 samples, 11.50%)</title>
      <rect x="10.2500%" y="549" width="11.5000%" height="15" fill="rgb(238,28,47)" fg:x="41" fg:w="46"/>
      <text x="10.5000%" y="559.50">main</text>
    </g>
    <g>
      <title>std::rt::lang_start_internal (46 samples, 11.50%)</title>
      <rect x="10.2500%" y="533" width="11.5000%" height="15" fill="rgb(240,177,54)" fg:x="41" fg:w="46"/>
      <text x="10.5000%" y="543.50">std::rt::lang_sta..</text>
    </g>
    <g>
      <title>pthread_getattr_np@@GLIBC_2.32 (1 samples, 0.25%)</title>
      <rect x="21.5000%" y="517" width="0.2500%" height="15" fill="rgb(219,192,28)" fg:x="86" fg:w="1"/>
      <text x="21.7500%" y="527.50"/>
    </g>
    <g>
      <title>__isoc99_sscanf (1 samples, 0.25%)</title>
      <rect x="21.5000%" y="501" width="0.2500%" height="15" fill="rgb(235,210,11)" fg:x="86" fg:w="1"/>
      <text x="21.7500%" y="511.50"/>
    </g>
    <g>
      <title>__vfscanf_internal (1 samples, 0.25%)</title>
      <rect x="21.5000%" y="485" width="0.2500%" height="15" fill="rgb(242,100,28)" fg:x="86" fg:w="1"/>
      <text x="21.7500%" y="495.50"/>
    </g>
    <g>
      <title>s4 (88 samples, 22.00%)</title>
      <rect x="0.0000%" y="613" width="22.0000%" height="15" fill="rgb(230,7,27)" fg:x="0" fg:w="88"/>
      <text x="0.2500%" y="623.50">s4</text>
    </g>
    <g>
      <title>[[heap]] (1 samples, 0.25%)</title>
      <rect x="21.7500%" y="597" width="0.2500%" height="15" fill="rgb(221,205,47)" fg:x="87" fg:w="1"/>
      <text x="22.0000%" y="607.50"/>
    </g>
    <g>
      <title>__GI___libc_write (1 samples, 0.25%)</title>
      <rect x="21.7500%" y="581" width="0.2500%" height="15" fill="rgb(232,197,30)" fg:x="87" fg:w="1"/>
      <text x="22.0000%" y="591.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64 (1 samples, 0.25%)</title>
      <rect x="21.7500%" y="565" width="0.2500%" height="15" fill="rgb(234,224,53)" fg:x="87" fg:w="1"/>
      <text x="22.0000%" y="575.50"/>
    </g>
    <g>
      <title>perf-exec (14 samples, 3.50%)</title>
      <rect x="22.0000%" y="613" width="3.5000%" height="15" fill="rgb(250,111,27)" fg:x="88" fg:w="14"/>
      <text x="22.2500%" y="623.50">per..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (14 samples, 3.50%)</title>
      <rect x="22.0000%" y="597" width="3.5000%" height="15" fill="rgb(205,226,15)" fg:x="88" fg:w="14"/>
      <text x="22.2500%" y="607.50">ent..</text>
    </g>
    <g>
      <title>do_syscall_64 (14 samples, 3.50%)</title>
      <rect x="22.0000%" y="581" width="3.5000%" height="15" fill="rgb(220,74,14)" fg:x="88" fg:w="14"/>
      <text x="22.2500%" y="591.50">do_..</text>
    </g>
    <g>
      <title>__x64_sys_execve (14 samples, 3.50%)</title>
      <rect x="22.0000%" y="565" width="3.5000%" height="15" fill="rgb(237,59,15)" fg:x="88" fg:w="14"/>
      <text x="22.2500%" y="575.50">__x..</text>
    </g>
    <g>
      <title>do_execveat_common.isra.0 (14 samples, 3.50%)</title>
      <rect x="22.0000%" y="549" width="3.5000%" height="15" fill="rgb(248,134,53)" fg:x="88" fg:w="14"/>
      <text x="22.2500%" y="559.50">do_..</text>
    </g>
    <g>
      <title>bprm_execve (14 samples, 3.50%)</title>
      <rect x="22.0000%" y="533" width="3.5000%" height="15" fill="rgb(232,147,16)" fg:x="88" fg:w="14"/>
      <text x="22.2500%" y="543.50">bpr..</text>
    </g>
    <g>
      <title>load_elf_binary (14 samples, 3.50%)</title>
      <rect x="22.0000%" y="517" width="3.5000%" height="15" fill="rgb(246,102,21)" fg:x="88" fg:w="14"/>
      <text x="22.2500%" y="527.50">loa..</text>
    </g>
    <g>
      <title>begin_new_exec (14 samples, 3.50%)</title>
      <rect x="22.0000%" y="501" width="3.5000%" height="15" fill="rgb(219,195,31)" fg:x="88" fg:w="14"/>
      <text x="22.2500%" y="511.50">beg..</text>
    </g>
    <g>
      <title>perf_event_exec (14 samples, 3.50%)</title>
      <rect x="22.0000%" y="485" width="3.5000%" height="15" fill="rgb(225,89,21)" fg:x="88" fg:w="14"/>
      <text x="22.2500%" y="495.50">per..</text>
    </g>
    <g>
      <title>__raw_callee_save___pv_queued_spin_unlock (14 samples, 3.50%)</title>
      <rect x="22.0000%" y="469" width="3.5000%" height="15" fill="rgb(236,100,45)" fg:x="88" fg:w="14"/>
      <text x="22.2500%" y="479.50">__r..</text>
    </g>
    <g>
      <title>ctrl-c (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="613" width="0.2500%" height="15" fill="rgb(217,0,15)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="623.50"/>
    </g>
    <g>
      <title>clone3 (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="597" width="0.2500%" height="15" fill="rgb(208,138,34)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="607.50"/>
    </g>
    <g>
      <title>start_thread (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="581" width="0.2500%" height="15" fill="rgb(209,148,13)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="591.50"/>
    </g>
    <g>
      <title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="565" width="0.2500%" height="15" fill="rgb(215,36,0)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="575.50"/>
    </g>
    <g>
      <title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="549" width="0.2500%" height="15" fill="rgb(218,104,40)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="559.50"/>
    </g>
    <g>
      <title>std::sys::unix::thread::guard::current (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="533" width="0.2500%" height="15" fill="rgb(225,215,43)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="543.50"/>
    </g>
    <g>
      <title>pthread_getattr_np@@GLIBC_2.32 (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="517" width="0.2500%" height="15" fill="rgb(219,192,28)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="527.50"/>
    </g>
    <g>
      <title>malloc (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="501" width="0.2500%" height="15" fill="rgb(250,195,53)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="511.50"/>
    </g>
    <g>
      <title>tcache_init.part.0 (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="485" width="0.2500%" height="15" fill="rgb(205,153,6)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="495.50"/>
    </g>
    <g>
      <title>arena_get2.part.0 (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="469" width="0.2500%" height="15" fill="rgb(209,63,40)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="479.50"/>
    </g>
    <g>
      <title>alloc_new_heap (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="453" width="0.2500%" height="15" fill="rgb(234,86,40)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="463.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="437" width="0.2500%" height="15" fill="rgb(208,26,13)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="447.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="421" width="0.2500%" height="15" fill="rgb(216,51,29)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="431.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="405" width="0.2500%" height="15" fill="rgb(253,37,52)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="415.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="389" width="0.2500%" height="15" fill="rgb(247,31,49)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="399.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="373" width="0.2500%" height="15" fill="rgb(254,123,40)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="383.50"/>
    </g>
    <g>
      <title>__anon_vma_prepare (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="357" width="0.2500%" height="15" fill="rgb(233,216,34)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="367.50"/>
    </g>
    <g>
      <title>kmem_cache_alloc (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="341" width="0.2500%" height="15" fill="rgb(223,51,51)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="351.50"/>
    </g>
    <g>
      <title>get_obj_cgroup_from_current (1 samples, 0.25%)</title>
      <rect x="25.5000%" y="325" width="0.2500%" height="15" fill="rgb(224,141,13)" fg:x="102" fg:w="1"/>
      <text x="25.7500%" y="335.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.25%)</title>
      <rect x="25.7500%" y="421" width="0.2500%" height="15" fill="rgb(211,164,11)" fg:x="103" fg:w="1"/>
      <text x="26.0000%" y="431.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (4 samples, 1.00%)</title>
      <rect x="25.7500%" y="437" width="1.0000%" height="15" fill="rgb(211,164,11)" fg:x="103" fg:w="4"/>
      <text x="26.0000%" y="447.50"/>
    </g>
    <g>
      <title>sd_journal_enumerate_available_data (11 samples, 2.75%)</title>
      <rect x="25.7500%" y="485" width="2.7500%" height="15" fill="rgb(233,38,20)" fg:x="103" fg:w="11"/>
      <text x="26.0000%" y="495.50">sd..</text>
    </g>
    <g>
      <title>sd_journal_enumerate_data (11 samples, 2.75%)</title>
      <rect x="25.7500%" y="469" width="2.7500%" height="15" fill="rgb(253,48,41)" fg:x="103" fg:w="11"/>
      <text x="26.0000%" y="479.50">sd..</text>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (11 samples, 2.75%)</title>
      <rect x="25.7500%" y="453" width="2.7500%" height="15" fill="rgb(211,164,11)" fg:x="103" fg:w="11"/>
      <text x="26.0000%" y="463.50">[l..</text>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (2 samples, 0.50%)</title>
      <rect x="28.5000%" y="437" width="0.5000%" height="15" fill="rgb(211,164,11)" fg:x="114" fg:w="2"/>
      <text x="28.7500%" y="447.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (2 samples, 0.50%)</title>
      <rect x="28.5000%" y="421" width="0.5000%" height="15" fill="rgb(211,164,11)" fg:x="114" fg:w="2"/>
      <text x="28.7500%" y="431.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (6 samples, 1.50%)</title>
      <rect x="28.5000%" y="453" width="1.5000%" height="15" fill="rgb(211,164,11)" fg:x="114" fg:w="6"/>
      <text x="28.7500%" y="463.50"/>
    </g>
    <g>
      <title>sd_journal_get_data (7 samples, 1.75%)</title>
      <rect x="28.5000%" y="469" width="1.7500%" height="15" fill="rgb(223,156,7)" fg:x="114" fg:w="7"/>
      <text x="28.7500%" y="479.50"/>
    </g>
    <g>
      <title>malloc (1 samples, 0.25%)</title>
      <rect x="30.2500%" y="437" width="0.2500%" height="15" fill="rgb(250,195,53)" fg:x="121" fg:w="1"/>
      <text x="30.5000%" y="447.50"/>
    </g>
    <g>
      <title>_int_malloc (1 samples, 0.25%)</title>
      <rect x="30.2500%" y="421" width="0.2500%" height="15" fill="rgb(222,219,51)" fg:x="121" fg:w="1"/>
      <text x="30.5000%" y="431.50"/>
    </g>
    <g>
      <title>core::unicode::printable::is_printable (1 samples, 0.25%)</title>
      <rect x="30.5000%" y="389" width="0.2500%" height="15" fill="rgb(208,130,50)" fg:x="122" fg:w="1"/>
      <text x="30.7500%" y="399.50"/>
    </g>
    <g>
      <title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (2 samples, 0.50%)</title>
      <rect x="30.5000%" y="405" width="0.5000%" height="15" fill="rgb(208,192,15)" fg:x="122" fg:w="2"/>
      <text x="30.7500%" y="415.50"/>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::Error_from_Errno (4 samples, 1.00%)</title>
      <rect x="30.2500%" y="469" width="1.0000%" height="15" fill="rgb(229,197,29)" fg:x="121" fg:w="4"/>
      <text x="30.5000%" y="479.50"/>
    </g>
    <g>
      <title>alloc::fmt::format::format_inner (4 samples, 1.00%)</title>
      <rect x="30.2500%" y="453" width="1.0000%" height="15" fill="rgb(225,219,39)" fg:x="121" fg:w="4"/>
      <text x="30.5000%" y="463.50"/>
    </g>
    <g>
      <title>core::fmt::write (3 samples, 0.75%)</title>
      <rect x="30.5000%" y="437" width="0.7500%" height="15" fill="rgb(248,210,20)" fg:x="122" fg:w="3"/>
      <text x="30.7500%" y="447.50"/>
    </g>
    <g>
      <title>&lt;str as core::fmt::Debug&gt;::fmt (3 samples, 0.75%)</title>
      <rect x="30.5000%" y="421" width="0.7500%" height="15" fill="rgb(215,221,20)" fg:x="122" fg:w="3"/>
      <text x="30.7500%" y="431.50"/>
    </g>
    <g>
      <title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.25%)</title>
      <rect x="31.0000%" y="405" width="0.2500%" height="15" fill="rgb(250,109,27)" fg:x="124" fg:w="1"/>
      <text x="31.2500%" y="415.50"/>
    </g>
    <g>
      <title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.25%)</title>
      <rect x="31.0000%" y="389" width="0.2500%" height="15" fill="rgb(249,2,22)" fg:x="124" fg:w="1"/>
      <text x="31.2500%" y="399.50"/>
    </g>
    <g>
      <title>alloc::raw_vec::finish_grow (1 samples, 0.25%)</title>
      <rect x="31.0000%" y="373" width="0.2500%" height="15" fill="rgb(237,133,22)" fg:x="124" fg:w="1"/>
      <text x="31.2500%" y="383.50"/>
    </g>
    <g>
      <title>__rdl_realloc (1 samples, 0.25%)</title>
      <rect x="31.0000%" y="357" width="0.2500%" height="15" fill="rgb(218,79,16)" fg:x="124" fg:w="1"/>
      <text x="31.2500%" y="367.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.25%)</title>
      <rect x="31.2500%" y="405" width="0.2500%" height="15" fill="rgb(208,26,13)" fg:x="125" fg:w="1"/>
      <text x="31.5000%" y="415.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.25%)</title>
      <rect x="31.2500%" y="389" width="0.2500%" height="15" fill="rgb(216,51,29)" fg:x="125" fg:w="1"/>
      <text x="31.5000%" y="399.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.25%)</title>
      <rect x="31.2500%" y="373" width="0.2500%" height="15" fill="rgb(253,37,52)" fg:x="125" fg:w="1"/>
      <text x="31.5000%" y="383.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="31.2500%" y="357" width="0.2500%" height="15" fill="rgb(247,31,49)" fg:x="125" fg:w="1"/>
      <text x="31.5000%" y="367.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="31.2500%" y="341" width="0.2500%" height="15" fill="rgb(254,123,40)" fg:x="125" fg:w="1"/>
      <text x="31.5000%" y="351.50"/>
    </g>
    <g>
      <title>filemap_map_pages (1 samples, 0.25%)</title>
      <rect x="31.2500%" y="325" width="0.2500%" height="15" fill="rgb(240,96,12)" fg:x="125" fg:w="1"/>
      <text x="31.5000%" y="335.50"/>
    </g>
    <g>
      <title>next_uptodate_page (1 samples, 0.25%)</title>
      <rect x="31.2500%" y="309" width="0.2500%" height="15" fill="rgb(231,221,15)" fg:x="125" fg:w="1"/>
      <text x="31.5000%" y="319.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (1 samples, 0.25%)</title>
      <rect x="31.5000%" y="373" width="0.2500%" height="15" fill="rgb(211,164,11)" fg:x="126" fg:w="1"/>
      <text x="31.7500%" y="383.50"/>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::next_common (16 samples, 4.00%)</title>
      <rect x="28.5000%" y="485" width="4.0000%" height="15" fill="rgb(253,190,43)" fg:x="114" fg:w="16"/>
      <text x="28.7500%" y="495.50">s4li..</text>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (5 samples, 1.25%)</title>
      <rect x="31.2500%" y="469" width="1.2500%" height="15" fill="rgb(211,164,11)" fg:x="125" fg:w="5"/>
      <text x="31.5000%" y="479.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (5 samples, 1.25%)</title>
      <rect x="31.2500%" y="453" width="1.2500%" height="15" fill="rgb(211,164,11)" fg:x="125" fg:w="5"/>
      <text x="31.5000%" y="463.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (5 samples, 1.25%)</title>
      <rect x="31.2500%" y="437" width="1.2500%" height="15" fill="rgb(211,164,11)" fg:x="125" fg:w="5"/>
      <text x="31.5000%" y="447.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (5 samples, 1.25%)</title>
      <rect x="31.2500%" y="421" width="1.2500%" height="15" fill="rgb(211,164,11)" fg:x="125" fg:w="5"/>
      <text x="31.5000%" y="431.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (4 samples, 1.00%)</title>
      <rect x="31.5000%" y="405" width="1.0000%" height="15" fill="rgb(211,164,11)" fg:x="126" fg:w="4"/>
      <text x="31.7500%" y="415.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (4 samples, 1.00%)</title>
      <rect x="31.5000%" y="389" width="1.0000%" height="15" fill="rgb(211,164,11)" fg:x="126" fg:w="4"/>
      <text x="31.7500%" y="399.50"/>
    </g>
    <g>
      <title>chrono::format::formatting::DelayedFormat&lt;I&gt;::new_with_offset (1 samples, 0.25%)</title>
      <rect x="32.5000%" y="485" width="0.2500%" height="15" fill="rgb(250,9,12)" fg:x="130" fg:w="1"/>
      <text x="32.7500%" y="495.50"/>
    </g>
    <g>
      <title>chrono::format::formatting::DelayedFormat&lt;I&gt;::format_numeric::write_two (1 samples, 0.25%)</title>
      <rect x="32.7500%" y="469" width="0.2500%" height="15" fill="rgb(250,80,31)" fg:x="131" fg:w="1"/>
      <text x="33.0000%" y="479.50"/>
    </g>
    <g>
      <title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.25%)</title>
      <rect x="32.7500%" y="453" width="0.2500%" height="15" fill="rgb(254,103,39)" fg:x="131" fg:w="1"/>
      <text x="33.0000%" y="463.50"/>
    </g>
    <g>
      <title>alloc::raw_vec::finish_grow (1 samples, 0.25%)</title>
      <rect x="32.7500%" y="437" width="0.2500%" height="15" fill="rgb(237,133,22)" fg:x="131" fg:w="1"/>
      <text x="33.0000%" y="447.50"/>
    </g>
    <g>
      <title>realloc (1 samples, 0.25%)</title>
      <rect x="32.7500%" y="421" width="0.2500%" height="15" fill="rgb(213,61,9)" fg:x="131" fg:w="1"/>
      <text x="33.0000%" y="431.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (1 samples, 0.25%)</title>
      <rect x="33.0000%" y="469" width="0.2500%" height="15" fill="rgb(217,126,36)" fg:x="132" fg:w="1"/>
      <text x="33.2500%" y="479.50"/>
    </g>
    <g>
      <title>&lt;chrono::format::formatting::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (8 samples, 2.00%)</title>
      <rect x="32.7500%" y="485" width="2.0000%" height="15" fill="rgb(231,60,11)" fg:x="131" fg:w="8"/>
      <text x="33.0000%" y="495.50">&lt;..</text>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::next_short (37 samples, 9.25%)</title>
      <rect x="25.7500%" y="501" width="9.2500%" height="15" fill="rgb(239,51,26)" fg:x="103" fg:w="37"/>
      <text x="26.0000%" y="511.50">s4lib::reader..</text>
    </g>
    <g>
      <title>crossbeam_channel::waker::SyncWaker::notify (1 samples, 0.25%)</title>
      <rect x="35.0000%" y="469" width="0.2500%" height="15" fill="rgb(222,105,38)" fg:x="140" fg:w="1"/>
      <text x="35.2500%" y="479.50"/>
    </g>
    <g>
      <title>std::sys::unix::futex::futex_wake (1 samples, 0.25%)</title>
      <rect x="35.0000%" y="453" width="0.2500%" height="15" fill="rgb(220,16,22)" fg:x="140" fg:w="1"/>
      <text x="35.2500%" y="463.50"/>
    </g>
    <g>
      <title>syscall (1 samples, 0.25%)</title>
      <rect x="35.0000%" y="437" width="0.2500%" height="15" fill="rgb(207,84,5)" fg:x="140" fg:w="1"/>
      <text x="35.2500%" y="447.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.25%)</title>
      <rect x="35.0000%" y="421" width="0.2500%" height="15" fill="rgb(205,226,15)" fg:x="140" fg:w="1"/>
      <text x="35.2500%" y="431.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.25%)</title>
      <rect x="35.0000%" y="405" width="0.2500%" height="15" fill="rgb(220,74,14)" fg:x="140" fg:w="1"/>
      <text x="35.2500%" y="415.50"/>
    </g>
    <g>
      <title>__x64_sys_futex (1 samples, 0.25%)</title>
      <rect x="35.0000%" y="389" width="0.2500%" height="15" fill="rgb(238,204,33)" fg:x="140" fg:w="1"/>
      <text x="35.2500%" y="399.50"/>
    </g>
    <g>
      <title>do_futex (1 samples, 0.25%)</title>
      <rect x="35.0000%" y="373" width="0.2500%" height="15" fill="rgb(249,126,29)" fg:x="140" fg:w="1"/>
      <text x="35.2500%" y="383.50"/>
    </g>
    <g>
      <title>futex_wake (1 samples, 0.25%)</title>
      <rect x="35.0000%" y="357" width="0.2500%" height="15" fill="rgb(247,80,14)" fg:x="140" fg:w="1"/>
      <text x="35.2500%" y="367.50"/>
    </g>
    <g>
      <title>wake_up_q (1 samples, 0.25%)</title>
      <rect x="35.0000%" y="341" width="0.2500%" height="15" fill="rgb(236,117,44)" fg:x="140" fg:w="1"/>
      <text x="35.2500%" y="351.50"/>
    </g>
    <g>
      <title>try_to_wake_up (1 samples, 0.25%)</title>
      <rect x="35.0000%" y="325" width="0.2500%" height="15" fill="rgb(251,124,39)" fg:x="140" fg:w="1"/>
      <text x="35.2500%" y="335.50"/>
    </g>
    <g>
      <title>__lock_text_start (1 samples, 0.25%)</title>
      <rect x="35.0000%" y="309" width="0.2500%" height="15" fill="rgb(212,146,38)" fg:x="140" fg:w="1"/>
      <text x="35.2500%" y="319.50"/>
    </g>
    <g>
      <title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.25%)</title>
      <rect x="35.0000%" y="293" width="0.2500%" height="15" fill="rgb(236,100,45)" fg:x="140" fg:w="1"/>
      <text x="35.2500%" y="303.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (1 samples, 0.25%)</title>
      <rect x="35.2500%" y="469" width="0.2500%" height="15" fill="rgb(217,126,36)" fg:x="141" fg:w="1"/>
      <text x="35.5000%" y="479.50"/>
    </g>
    <g>
      <title>std::sys_common::backtrace::__rust_begin_short_backtrace (40 samples, 10.00%)</title>
      <rect x="25.7500%" y="533" width="10.0000%" height="15" fill="rgb(210,88,34)" fg:x="103" fg:w="40"/>
      <text x="26.0000%" y="543.50">std::sys_commo..</text>
    </g>
    <g>
      <title>s4::exec_fileprocessor_thread (40 samples, 10.00%)</title>
      <rect x="25.7500%" y="517" width="10.0000%" height="15" fill="rgb(245,49,27)" fg:x="103" fg:w="40"/>
      <text x="26.0000%" y="527.50">s4::exec_filep..</text>
    </g>
    <g>
      <title>crossbeam_channel::channel::Sender&lt;T&gt;::send (3 samples, 0.75%)</title>
      <rect x="35.0000%" y="501" width="0.7500%" height="15" fill="rgb(211,156,23)" fg:x="140" fg:w="3"/>
      <text x="35.2500%" y="511.50"/>
    </g>
    <g>
      <title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::send (3 samples, 0.75%)</title>
      <rect x="35.0000%" y="485" width="0.7500%" height="15" fill="rgb(239,129,18)" fg:x="140" fg:w="3"/>
      <text x="35.2500%" y="495.50"/>
    </g>
    <g>
      <title>std::sys::unix::thread::Thread::new::thread_start (41 samples, 10.25%)</title>
      <rect x="25.7500%" y="565" width="10.2500%" height="15" fill="rgb(215,36,0)" fg:x="103" fg:w="41"/>
      <text x="26.0000%" y="575.50">std::sys::unix:..</text>
    </g>
    <g>
      <title>core::ops::function::FnOnce::call_once{{vtable.shim}} (41 samples, 10.25%)</title>
      <rect x="25.7500%" y="549" width="10.2500%" height="15" fill="rgb(218,104,40)" fg:x="103" fg:w="41"/>
      <text x="26.0000%" y="559.50">core::ops::func..</text>
    </g>
    <g>
      <title>std::sys::unix::thread::Thread::set_name (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="533" width="0.2500%" height="15" fill="rgb(250,171,46)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="543.50"/>
    </g>
    <g>
      <title>pthread_setname_np@@GLIBC_2.34 (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="517" width="0.2500%" height="15" fill="rgb(212,126,19)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="527.50"/>
    </g>
    <g>
      <title>__GI___prctl (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="501" width="0.2500%" height="15" fill="rgb(220,190,11)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="511.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="485" width="0.2500%" height="15" fill="rgb(205,226,15)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="495.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="469" width="0.2500%" height="15" fill="rgb(220,74,14)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="479.50"/>
    </g>
    <g>
      <title>__do_sys_prctl (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="453" width="0.2500%" height="15" fill="rgb(234,162,26)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="463.50"/>
    </g>
    <g>
      <title>proc_comm_connector (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="437" width="0.2500%" height="15" fill="rgb(222,106,5)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="447.50"/>
    </g>
    <g>
      <title>netlink_broadcast (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="421" width="0.2500%" height="15" fill="rgb(219,106,34)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="431.50"/>
    </g>
    <g>
      <title>netlink_broadcast_filtered (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="405" width="0.2500%" height="15" fill="rgb(241,77,14)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="415.50"/>
    </g>
    <g>
      <title>__netlink_sendskb (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="389" width="0.2500%" height="15" fill="rgb(222,57,17)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="399.50"/>
    </g>
    <g>
      <title>sock_def_readable (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="373" width="0.2500%" height="15" fill="rgb(209,192,28)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="383.50"/>
    </g>
    <g>
      <title>__wake_up_common_lock (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="357" width="0.2500%" height="15" fill="rgb(248,80,4)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="367.50"/>
    </g>
    <g>
      <title>__wake_up_common (1 samples, 0.25%)</title>
      <rect x="35.7500%" y="341" width="0.2500%" height="15" fill="rgb(221,104,28)" fg:x="143" fg:w="1"/>
      <text x="36.0000%" y="351.50"/>
    </g>
    <g>
      <title>clone3 (42 samples, 10.50%)</title>
      <rect x="25.7500%" y="597" width="10.5000%" height="15" fill="rgb(208,138,34)" fg:x="103" fg:w="42"/>
      <text x="26.0000%" y="607.50">clone3</text>
    </g>
    <g>
      <title>start_thread (42 samples, 10.50%)</title>
      <rect x="25.7500%" y="581" width="10.5000%" height="15" fill="rgb(209,148,13)" fg:x="103" fg:w="42"/>
      <text x="26.0000%" y="591.50">start_thread</text>
    </g>
    <g>
      <title>__libc_thread_freeres (1 samples, 0.25%)</title>
      <rect x="36.0000%" y="565" width="0.2500%" height="15" fill="rgb(210,90,24)" fg:x="144" fg:w="1"/>
      <text x="36.2500%" y="575.50"/>
    </g>
    <g>
      <title>__res_thread_freeres (1 samples, 0.25%)</title>
      <rect x="36.0000%" y="549" width="0.2500%" height="15" fill="rgb(225,32,3)" fg:x="144" fg:w="1"/>
      <text x="36.2500%" y="559.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.25%)</title>
      <rect x="36.0000%" y="533" width="0.2500%" height="15" fill="rgb(208,26,13)" fg:x="144" fg:w="1"/>
      <text x="36.2500%" y="543.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.25%)</title>
      <rect x="36.0000%" y="517" width="0.2500%" height="15" fill="rgb(216,51,29)" fg:x="144" fg:w="1"/>
      <text x="36.2500%" y="527.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.25%)</title>
      <rect x="36.0000%" y="501" width="0.2500%" height="15" fill="rgb(253,37,52)" fg:x="144" fg:w="1"/>
      <text x="36.2500%" y="511.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="36.0000%" y="485" width="0.2500%" height="15" fill="rgb(247,31,49)" fg:x="144" fg:w="1"/>
      <text x="36.2500%" y="495.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.25%)</title>
      <rect x="36.0000%" y="469" width="0.2500%" height="15" fill="rgb(254,123,40)" fg:x="144" fg:w="1"/>
      <text x="36.2500%" y="479.50"/>
    </g>
    <g>
      <title>tempfile::Builder::tempfile (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="565" width="0.2500%" height="15" fill="rgb(242,200,16)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="575.50"/>
    </g>
    <g>
      <title>tempfile::util::create_helper (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="549" width="0.2500%" height="15" fill="rgb(231,32,46)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="559.50"/>
    </g>
    <g>
      <title>tempfile::file::create_named (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="533" width="0.2500%" height="15" fill="rgb(205,123,7)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="543.50"/>
    </g>
    <g>
      <title>std::fs::OpenOptions::_open (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="517" width="0.2500%" height="15" fill="rgb(226,1,37)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="527.50"/>
    </g>
    <g>
      <title>std::sys::unix::fs::File::open_c (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="501" width="0.2500%" height="15" fill="rgb(253,73,50)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="511.50"/>
    </g>
    <g>
      <title>__GI___libc_open (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="485" width="0.2500%" height="15" fill="rgb(245,146,36)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="495.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="469" width="0.2500%" height="15" fill="rgb(205,226,15)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="479.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="453" width="0.2500%" height="15" fill="rgb(220,74,14)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="463.50"/>
    </g>
    <g>
      <title>__x64_sys_openat (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="437" width="0.2500%" height="15" fill="rgb(236,228,31)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="447.50"/>
    </g>
    <g>
      <title>do_sys_openat2 (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="421" width="0.2500%" height="15" fill="rgb(208,111,23)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="431.50"/>
    </g>
    <g>
      <title>do_filp_open (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="405" width="0.2500%" height="15" fill="rgb(219,26,10)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="415.50"/>
    </g>
    <g>
      <title>path_openat (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="389" width="0.2500%" height="15" fill="rgb(228,25,37)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="399.50"/>
    </g>
    <g>
      <title>link_path_walk.part.0.constprop.0 (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="373" width="0.2500%" height="15" fill="rgb(228,149,52)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="383.50"/>
    </g>
    <g>
      <title>walk_component (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="357" width="0.2500%" height="15" fill="rgb(250,91,19)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="367.50"/>
    </g>
    <g>
      <title>lookup_fast (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="341" width="0.2500%" height="15" fill="rgb(223,109,4)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="351.50"/>
    </g>
    <g>
      <title>__d_lookup_rcu (1 samples, 0.25%)</title>
      <rect x="36.2500%" y="325" width="0.2500%" height="15" fill="rgb(227,66,48)" fg:x="145" fg:w="1"/>
      <text x="36.5000%" y="335.50"/>
    </g>
    <g>
      <title>ext4_reserve_inode_write (1 samples, 0.25%)</title>
      <rect x="36.5000%" y="325" width="0.2500%" height="15" fill="rgb(232,18,0)" fg:x="146" fg:w="1"/>
      <text x="36.7500%" y="335.50"/>
    </g>
    <g>
      <title>ext4_get_inode_loc (1 samples, 0.25%)</title>
      <rect x="36.5000%" y="309" width="0.2500%" height="15" fill="rgb(251,31,11)" fg:x="146" fg:w="1"/>
      <text x="36.7500%" y="319.50"/>
    </g>
    <g>
      <title>__ext4_get_inode_loc (1 samples, 0.25%)</title>
      <rect x="36.5000%" y="293" width="0.2500%" height="15" fill="rgb(231,98,31)" fg:x="146" fg:w="1"/>
      <text x="36.7500%" y="303.50"/>
    </g>
    <g>
      <title>ext4_mark_iloc_dirty (1 samples, 0.25%)</title>
      <rect x="36.7500%" y="325" width="0.2500%" height="15" fill="rgb(236,133,21)" fg:x="147" fg:w="1"/>
      <text x="37.0000%" y="335.50"/>
    </g>
    <g>
      <title>ext4_inode_csum_set (1 samples, 0.25%)</title>
      <rect x="36.7500%" y="309" width="0.2500%" height="15" fill="rgb(229,207,44)" fg:x="147" fg:w="1"/>
      <text x="37.0000%" y="319.50"/>
    </g>
    <g>
      <title>ext4_inode_csum (1 samples, 0.25%)</title>
      <rect x="36.7500%" y="293" width="0.2500%" height="15" fill="rgb(246,100,22)" fg:x="147" fg:w="1"/>
      <text x="37.0000%" y="303.50"/>
    </g>
    <g>
      <title>chksum_update (1 samples, 0.25%)</title>
      <rect x="36.7500%" y="277" width="0.2500%" height="15" fill="rgb(244,9,51)" fg:x="147" fg:w="1"/>
      <text x="37.0000%" y="287.50"/>
    </g>
    <g>
      <title>crc32_body (1 samples, 0.25%)</title>
      <rect x="36.7500%" y="261" width="0.2500%" height="15" fill="rgb(235,34,1)" fg:x="147" fg:w="1"/>
      <text x="37.0000%" y="271.50"/>
    </g>
    <g>
      <title>ext4_dirty_inode (3 samples, 0.75%)</title>
      <rect x="36.5000%" y="357" width="0.7500%" height="15" fill="rgb(235,194,15)" fg:x="146" fg:w="3"/>
      <text x="36.7500%" y="367.50"/>
    </g>
    <g>
      <title>__ext4_mark_inode_dirty (3 samples, 0.75%)</title>
      <rect x="36.5000%" y="341" width="0.7500%" height="15" fill="rgb(250,159,10)" fg:x="146" fg:w="3"/>
      <text x="36.7500%" y="351.50"/>
    </g>
    <g>
      <title>__ext4_journal_stop (1 samples, 0.25%)</title>
      <rect x="37.2500%" y="357" width="0.2500%" height="15" fill="rgb(225,40,54)" fg:x="149" fg:w="1"/>
      <text x="37.5000%" y="367.50"/>
    </g>
    <g>
      <title>jbd2_journal_stop (1 samples, 0.25%)</title>
      <rect x="37.2500%" y="341" width="0.2500%" height="15" fill="rgb(229,91,7)" fg:x="149" fg:w="1"/>
      <text x="37.5000%" y="351.50"/>
    </g>
    <g>
      <title>stop_this_handle (1 samples, 0.25%)</title>
      <rect x="37.2500%" y="325" width="0.2500%" height="15" fill="rgb(240,3,51)" fg:x="149" fg:w="1"/>
      <text x="37.5000%" y="335.50"/>
    </g>
    <g>
      <title>__wake_up_common_lock (1 samples, 0.25%)</title>
      <rect x="37.2500%" y="309" width="0.2500%" height="15" fill="rgb(248,80,4)" fg:x="149" fg:w="1"/>
      <text x="37.5000%" y="319.50"/>
    </g>
    <g>
      <title>__wake_up_common (1 samples, 0.25%)</title>
      <rect x="37.2500%" y="293" width="0.2500%" height="15" fill="rgb(221,104,28)" fg:x="149" fg:w="1"/>
      <text x="37.5000%" y="303.50"/>
    </g>
    <g>
      <title>__mark_inode_dirty (5 samples, 1.25%)</title>
      <rect x="36.5000%" y="373" width="1.2500%" height="15" fill="rgb(212,91,54)" fg:x="146" fg:w="5"/>
      <text x="36.7500%" y="383.50"/>
    </g>
    <g>
      <title>mark_buffer_dirty (1 samples, 0.25%)</title>
      <rect x="37.7500%" y="357" width="0.2500%" height="15" fill="rgb(238,162,48)" fg:x="151" fg:w="1"/>
      <text x="38.0000%" y="367.50"/>
    </g>
    <g>
      <title>__set_page_dirty (1 samples, 0.25%)</title>
      <rect x="37.7500%" y="341" width="0.2500%" height="15" fill="rgb(221,172,50)" fg:x="151" fg:w="1"/>
      <text x="38.0000%" y="351.50"/>
    </g>
    <g>
      <title>__xa_set_mark (1 samples, 0.25%)</title>
      <rect x="37.7500%" y="325" width="0.2500%" height="15" fill="rgb(239,212,30)" fg:x="151" fg:w="1"/>
      <text x="38.0000%" y="335.50"/>
    </g>
    <g>
      <title>xas_set_mark (1 samples, 0.25%)</title>
      <rect x="37.7500%" y="309" width="0.2500%" height="15" fill="rgb(232,122,5)" fg:x="151" fg:w="1"/>
      <text x="38.0000%" y="319.50"/>
    </g>
    <g>
      <title>generic_write_end (8 samples, 2.00%)</title>
      <rect x="36.5000%" y="389" width="2.0000%" height="15" fill="rgb(207,107,21)" fg:x="146" fg:w="8"/>
      <text x="36.7500%" y="399.50">g..</text>
    </g>
    <g>
      <title>__block_commit_write.constprop.0.isra.0 (3 samples, 0.75%)</title>
      <rect x="37.7500%" y="373" width="0.7500%" height="15" fill="rgb(249,65,48)" fg:x="151" fg:w="3"/>
      <text x="38.0000%" y="383.50"/>
    </g>
    <g>
      <title>__mem_cgroup_charge (1 samples, 0.25%)</title>
      <rect x="38.5000%" y="309" width="0.2500%" height="15" fill="rgb(222,56,28)" fg:x="154" fg:w="1"/>
      <text x="38.7500%" y="319.50"/>
    </g>
    <g>
      <title>charge_memcg (1 samples, 0.25%)</title>
      <rect x="38.5000%" y="293" width="0.2500%" height="15" fill="rgb(240,39,15)" fg:x="154" fg:w="1"/>
      <text x="38.7500%" y="303.50"/>
    </g>
    <g>
      <title>add_to_page_cache_lru (2 samples, 0.50%)</title>
      <rect x="38.5000%" y="341" width="0.5000%" height="15" fill="rgb(223,55,45)" fg:x="154" fg:w="2"/>
      <text x="38.7500%" y="351.50"/>
    </g>
    <g>
      <title>__add_to_page_cache_locked (2 samples, 0.50%)</title>
      <rect x="38.5000%" y="325" width="0.5000%" height="15" fill="rgb(229,179,48)" fg:x="154" fg:w="2"/>
      <text x="38.7500%" y="335.50"/>
    </g>
    <g>
      <title>grab_cache_page_write_begin (3 samples, 0.75%)</title>
      <rect x="38.5000%" y="373" width="0.7500%" height="15" fill="rgb(221,143,40)" fg:x="154" fg:w="3"/>
      <text x="38.7500%" y="383.50"/>
    </g>
    <g>
      <title>pagecache_get_page (3 samples, 0.75%)</title>
      <rect x="38.5000%" y="357" width="0.7500%" height="15" fill="rgb(254,146,25)" fg:x="154" fg:w="3"/>
      <text x="38.7500%" y="367.50"/>
    </g>
    <g>
      <title>__alloc_pages (1 samples, 0.25%)</title>
      <rect x="39.0000%" y="341" width="0.2500%" height="15" fill="rgb(244,104,38)" fg:x="156" fg:w="1"/>
      <text x="39.2500%" y="351.50"/>
    </g>
    <g>
      <title>get_page_from_freelist (1 samples, 0.25%)</title>
      <rect x="39.0000%" y="325" width="0.2500%" height="15" fill="rgb(246,35,53)" fg:x="156" fg:w="1"/>
      <text x="39.2500%" y="335.50"/>
    </g>
    <g>
      <title>up_write (1 samples, 0.25%)</title>
      <rect x="39.2500%" y="341" width="0.2500%" height="15" fill="rgb(251,57,11)" fg:x="157" fg:w="1"/>
      <text x="39.5000%" y="351.50"/>
    </g>
    <g>
      <title>ext4_es_lookup_extent (1 samples, 0.25%)</title>
      <rect x="39.5000%" y="341" width="0.2500%" height="15" fill="rgb(215,19,43)" fg:x="158" fg:w="1"/>
      <text x="39.7500%" y="351.50"/>
    </g>
    <g>
      <title>ext4_es_insert_delayed_block (1 samples, 0.25%)</title>
      <rect x="39.7500%" y="341" width="0.2500%" height="15" fill="rgb(214,51,42)" fg:x="159" fg:w="1"/>
      <text x="40.0000%" y="351.50"/>
    </g>
    <g>
      <title>__es_insert_extent (1 samples, 0.25%)</title>
      <rect x="39.7500%" y="325" width="0.2500%" height="15" fill="rgb(219,216,0)" fg:x="159" fg:w="1"/>
      <text x="40.0000%" y="335.50"/>
    </g>
    <g>
      <title>ext4_da_get_block_prep (5 samples, 1.25%)</title>
      <rect x="39.2500%" y="357" width="1.2500%" height="15" fill="rgb(235,98,3)" fg:x="157" fg:w="5"/>
      <text x="39.5000%" y="367.50"/>
    </g>
    <g>
      <title>ext4_da_write_begin (9 samples, 2.25%)</title>
      <rect x="38.5000%" y="389" width="2.2500%" height="15" fill="rgb(235,31,43)" fg:x="154" fg:w="9"/>
      <text x="38.7500%" y="399.50">e..</text>
    </g>
    <g>
      <title>__block_write_begin_int (6 samples, 1.50%)</title>
      <rect x="39.2500%" y="373" width="1.5000%" height="15" fill="rgb(211,15,34)" fg:x="157" fg:w="6"/>
      <text x="39.5000%" y="383.50"/>
    </g>
    <g>
      <title>new_sync_write (21 samples, 5.25%)</title>
      <rect x="36.5000%" y="437" width="5.2500%" height="15" fill="rgb(220,167,51)" fg:x="146" fg:w="21"/>
      <text x="36.7500%" y="447.50">new_sy..</text>
    </g>
    <g>
      <title>ext4_buffered_write_iter (21 samples, 5.25%)</title>
      <rect x="36.5000%" y="421" width="5.2500%" height="15" fill="rgb(214,47,26)" fg:x="146" fg:w="21"/>
      <text x="36.7500%" y="431.50">ext4_b..</text>
    </g>
    <g>
      <title>generic_perform_write (21 samples, 5.25%)</title>
      <rect x="36.5000%" y="405" width="5.2500%" height="15" fill="rgb(218,161,27)" fg:x="146" fg:w="21"/>
      <text x="36.7500%" y="415.50">generi..</text>
    </g>
    <g>
      <title>copy_page_from_iter_atomic (4 samples, 1.00%)</title>
      <rect x="40.7500%" y="389" width="1.0000%" height="15" fill="rgb(247,27,48)" fg:x="163" fg:w="4"/>
      <text x="41.0000%" y="399.50"/>
    </g>
    <g>
      <title>copy_user_enhanced_fast_string (4 samples, 1.00%)</title>
      <rect x="40.7500%" y="373" width="1.0000%" height="15" fill="rgb(254,4,9)" fg:x="163" fg:w="4"/>
      <text x="41.0000%" y="383.50"/>
    </g>
    <g>
      <title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (22 samples, 5.50%)</title>
      <rect x="36.5000%" y="565" width="5.5000%" height="15" fill="rgb(219,202,23)" fg:x="146" fg:w="22"/>
      <text x="36.7500%" y="575.50">std::io..</text>
    </g>
    <g>
      <title>std::io::Write::write_all (22 samples, 5.50%)</title>
      <rect x="36.5000%" y="549" width="5.5000%" height="15" fill="rgb(251,145,9)" fg:x="146" fg:w="22"/>
      <text x="36.7500%" y="559.50">std::io..</text>
    </g>
    <g>
      <title>&lt;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (22 samples, 5.50%)</title>
      <rect x="36.5000%" y="533" width="5.5000%" height="15" fill="rgb(239,91,52)" fg:x="146" fg:w="22"/>
      <text x="36.7500%" y="543.50">&lt;std::o..</text>
    </g>
    <g>
      <title>__GI___libc_write (22 samples, 5.50%)</title>
      <rect x="36.5000%" y="517" width="5.5000%" height="15" fill="rgb(232,197,30)" fg:x="146" fg:w="22"/>
      <text x="36.7500%" y="527.50">__GI___..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (22 samples, 5.50%)</title>
      <rect x="36.5000%" y="501" width="5.5000%" height="15" fill="rgb(205,226,15)" fg:x="146" fg:w="22"/>
      <text x="36.7500%" y="511.50">entry_S..</text>
    </g>
    <g>
      <title>do_syscall_64 (22 samples, 5.50%)</title>
      <rect x="36.5000%" y="485" width="5.5000%" height="15" fill="rgb(220,74,14)" fg:x="146" fg:w="22"/>
      <text x="36.7500%" y="495.50">do_sysc..</text>
    </g>
    <g>
      <title>ksys_write (22 samples, 5.50%)</title>
      <rect x="36.5000%" y="469" width="5.5000%" height="15" fill="rgb(223,155,43)" fg:x="146" fg:w="22"/>
      <text x="36.7500%" y="479.50">ksys_wr..</text>
    </g>
    <g>
      <title>vfs_write (22 samples, 5.50%)</title>
      <rect x="36.5000%" y="453" width="5.5000%" height="15" fill="rgb(216,184,13)" fg:x="146" fg:w="22"/>
      <text x="36.7500%" y="463.50">vfs_wri..</text>
    </g>
    <g>
      <title>__fsnotify_parent (1 samples, 0.25%)</title>
      <rect x="41.7500%" y="437" width="0.2500%" height="15" fill="rgb(232,3,50)" fg:x="167" fg:w="1"/>
      <text x="42.0000%" y="447.50"/>
    </g>
    <g>
      <title>unmap_vmas (1 samples, 0.25%)</title>
      <rect x="42.0000%" y="421" width="0.2500%" height="15" fill="rgb(216,135,47)" fg:x="168" fg:w="1"/>
      <text x="42.2500%" y="431.50"/>
    </g>
    <g>
      <title>unmap_page_range (1 samples, 0.25%)</title>
      <rect x="42.0000%" y="405" width="0.2500%" height="15" fill="rgb(216,127,1)" fg:x="168" fg:w="1"/>
      <text x="42.2500%" y="415.50"/>
    </g>
    <g>
      <title>page_remove_rmap (1 samples, 0.25%)</title>
      <rect x="42.0000%" y="389" width="0.2500%" height="15" fill="rgb(222,17,10)" fg:x="168" fg:w="1"/>
      <text x="42.2500%" y="399.50"/>
    </g>
    <g>
      <title>__mod_lruvec_page_state (1 samples, 0.25%)</title>
      <rect x="42.0000%" y="373" width="0.2500%" height="15" fill="rgb(231,38,23)" fg:x="168" fg:w="1"/>
      <text x="42.2500%" y="383.50"/>
    </g>
    <g>
      <title>__mod_memcg_lruvec_state (1 samples, 0.25%)</title>
      <rect x="42.0000%" y="357" width="0.2500%" height="15" fill="rgb(247,169,19)" fg:x="168" fg:w="1"/>
      <text x="42.2500%" y="367.50"/>
    </g>
    <g>
      <title>core::ptr::drop_in_place&lt;bzip2_rs::decoder::reader::DecoderReader&lt;std::fs::File&gt;&gt; (2 samples, 0.50%)</title>
      <rect x="42.0000%" y="565" width="0.5000%" height="15" fill="rgb(229,59,39)" fg:x="168" fg:w="2"/>
      <text x="42.2500%" y="575.50"/>
    </g>
    <g>
      <title>cfree@GLIBC_2.2.5 (2 samples, 0.50%)</title>
      <rect x="42.0000%" y="549" width="0.5000%" height="15" fill="rgb(240,159,37)" fg:x="168" fg:w="2"/>
      <text x="42.2500%" y="559.50"/>
    </g>
    <g>
      <title>__munmap (2 samples, 0.50%)</title>
      <rect x="42.0000%" y="533" width="0.5000%" height="15" fill="rgb(232,183,39)" fg:x="168" fg:w="2"/>
      <text x="42.2500%" y="543.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (2 samples, 0.50%)</title>
      <rect x="42.0000%" y="517" width="0.5000%" height="15" fill="rgb(205,226,15)" fg:x="168" fg:w="2"/>
      <text x="42.2500%" y="527.50"/>
    </g>
    <g>
      <title>do_syscall_64 (2 samples, 0.50%)</title>
      <rect x="42.0000%" y="501" width="0.5000%" height="15" fill="rgb(220,74,14)" fg:x="168" fg:w="2"/>
      <text x="42.2500%" y="511.50"/>
    </g>
    <g>
      <title>__x64_sys_munmap (2 samples, 0.50%)</title>
      <rect x="42.0000%" y="485" width="0.5000%" height="15" fill="rgb(218,184,12)" fg:x="168" fg:w="2"/>
      <text x="42.2500%" y="495.50"/>
    </g>
    <g>
      <title>__vm_munmap (2 samples, 0.50%)</title>
      <rect x="42.0000%" y="469" width="0.5000%" height="15" fill="rgb(247,197,25)" fg:x="168" fg:w="2"/>
      <text x="42.2500%" y="479.50"/>
    </g>
    <g>
      <title>__do_munmap (2 samples, 0.50%)</title>
      <rect x="42.0000%" y="453" width="0.5000%" height="15" fill="rgb(225,34,24)" fg:x="168" fg:w="2"/>
      <text x="42.2500%" y="463.50"/>
    </g>
    <g>
      <title>unmap_region (2 samples, 0.50%)</title>
      <rect x="42.0000%" y="437" width="0.5000%" height="15" fill="rgb(215,221,10)" fg:x="168" fg:w="2"/>
      <text x="42.2500%" y="447.50"/>
    </g>
    <g>
      <title>tlb_finish_mmu (1 samples, 0.25%)</title>
      <rect x="42.2500%" y="421" width="0.2500%" height="15" fill="rgb(238,90,34)" fg:x="169" fg:w="1"/>
      <text x="42.5000%" y="431.50"/>
    </g>
    <g>
      <title>release_pages (1 samples, 0.25%)</title>
      <rect x="42.2500%" y="405" width="0.2500%" height="15" fill="rgb(247,202,4)" fg:x="169" fg:w="1"/>
      <text x="42.5000%" y="415.50"/>
    </g>
    <g>
      <title>__mod_zone_page_state (1 samples, 0.25%)</title>
      <rect x="42.2500%" y="389" width="0.2500%" height="15" fill="rgb(241,16,32)" fg:x="169" fg:w="1"/>
      <text x="42.5000%" y="399.50"/>
    </g>
    <g>
      <title>__alloc_pages (1 samples, 0.25%)</title>
      <rect x="42.5000%" y="437" width="0.2500%" height="15" fill="rgb(244,104,38)" fg:x="170" fg:w="1"/>
      <text x="42.7500%" y="447.50"/>
    </g>
    <g>
      <title>get_page_from_freelist (1 samples, 0.25%)</title>
      <rect x="42.5000%" y="421" width="0.2500%" height="15" fill="rgb(246,35,53)" fg:x="170" fg:w="1"/>
      <text x="42.7500%" y="431.50"/>
    </g>
    <g>
      <title>kernel_init_free_pages.part.0 (1 samples, 0.25%)</title>
      <rect x="42.5000%" y="405" width="0.2500%" height="15" fill="rgb(224,1,41)" fg:x="170" fg:w="1"/>
      <text x="42.7500%" y="415.50"/>
    </g>
    <g>
      <title>clear_page_erms (1 samples, 0.25%)</title>
      <rect x="42.5000%" y="389" width="0.2500%" height="15" fill="rgb(253,135,51)" fg:x="170" fg:w="1"/>
      <text x="42.7500%" y="399.50"/>
    </g>
    <g>
      <title>bzip2_rs::decoder::Decoder::write (2 samples, 0.50%)</title>
      <rect x="42.5000%" y="549" width="0.5000%" height="15" fill="rgb(230,15,23)" fg:x="170" fg:w="2"/>
      <text x="42.7500%" y="559.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (2 samples, 0.50%)</title>
      <rect x="42.5000%" y="533" width="0.5000%" height="15" fill="rgb(217,126,36)" fg:x="170" fg:w="2"/>
      <text x="42.7500%" y="543.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (2 samples, 0.50%)</title>
      <rect x="42.5000%" y="517" width="0.5000%" height="15" fill="rgb(208,26,13)" fg:x="170" fg:w="2"/>
      <text x="42.7500%" y="527.50"/>
    </g>
    <g>
      <title>exc_page_fault (2 samples, 0.50%)</title>
      <rect x="42.5000%" y="501" width="0.5000%" height="15" fill="rgb(216,51,29)" fg:x="170" fg:w="2"/>
      <text x="42.7500%" y="511.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (2 samples, 0.50%)</title>
      <rect x="42.5000%" y="485" width="0.5000%" height="15" fill="rgb(253,37,52)" fg:x="170" fg:w="2"/>
      <text x="42.7500%" y="495.50"/>
    </g>
    <g>
      <title>handle_mm_fault (2 samples, 0.50%)</title>
      <rect x="42.5000%" y="469" width="0.5000%" height="15" fill="rgb(247,31,49)" fg:x="170" fg:w="2"/>
      <text x="42.7500%" y="479.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (2 samples, 0.50%)</title>
      <rect x="42.5000%" y="453" width="0.5000%" height="15" fill="rgb(254,123,40)" fg:x="170" fg:w="2"/>
      <text x="42.7500%" y="463.50"/>
    </g>
    <g>
      <title>filemap_read (1 samples, 0.25%)</title>
      <rect x="43.0000%" y="437" width="0.2500%" height="15" fill="rgb(214,68,38)" fg:x="172" fg:w="1"/>
      <text x="43.2500%" y="447.50"/>
    </g>
    <g>
      <title>filemap_get_pages (1 samples, 0.25%)</title>
      <rect x="43.0000%" y="421" width="0.2500%" height="15" fill="rgb(242,84,29)" fg:x="172" fg:w="1"/>
      <text x="43.2500%" y="431.50"/>
    </g>
    <g>
      <title>s4lib::readers::filedecompressor::decompress_to_ntf (29 samples, 7.25%)</title>
      <rect x="36.2500%" y="581" width="7.2500%" height="15" fill="rgb(253,7,37)" fg:x="145" fg:w="29"/>
      <text x="36.5000%" y="591.50">s4lib::rea..</text>
    </g>
    <g>
      <title>&lt;bzip2_rs::decoder::reader::DecoderReader&lt;R&gt; as std::io::Read&gt;::read (4 samples, 1.00%)</title>
      <rect x="42.5000%" y="565" width="1.0000%" height="15" fill="rgb(241,41,48)" fg:x="170" fg:w="4"/>
      <text x="42.7500%" y="575.50"/>
    </g>
    <g>
      <title>&lt;std::fs::File as std::io::Read&gt;::read (2 samples, 0.50%)</title>
      <rect x="43.0000%" y="549" width="0.5000%" height="15" fill="rgb(223,30,9)" fg:x="172" fg:w="2"/>
      <text x="43.2500%" y="559.50"/>
    </g>
    <g>
      <title>read (2 samples, 0.50%)</title>
      <rect x="43.0000%" y="533" width="0.5000%" height="15" fill="rgb(209,69,29)" fg:x="172" fg:w="2"/>
      <text x="43.2500%" y="543.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (2 samples, 0.50%)</title>
      <rect x="43.0000%" y="517" width="0.5000%" height="15" fill="rgb(205,226,15)" fg:x="172" fg:w="2"/>
      <text x="43.2500%" y="527.50"/>
    </g>
    <g>
      <title>do_syscall_64 (2 samples, 0.50%)</title>
      <rect x="43.0000%" y="501" width="0.5000%" height="15" fill="rgb(220,74,14)" fg:x="172" fg:w="2"/>
      <text x="43.2500%" y="511.50"/>
    </g>
    <g>
      <title>ksys_read (2 samples, 0.50%)</title>
      <rect x="43.0000%" y="485" width="0.5000%" height="15" fill="rgb(233,96,2)" fg:x="172" fg:w="2"/>
      <text x="43.2500%" y="495.50"/>
    </g>
    <g>
      <title>vfs_read (2 samples, 0.50%)</title>
      <rect x="43.0000%" y="469" width="0.5000%" height="15" fill="rgb(232,76,33)" fg:x="172" fg:w="2"/>
      <text x="43.2500%" y="479.50"/>
    </g>
    <g>
      <title>new_sync_read (2 samples, 0.50%)</title>
      <rect x="43.0000%" y="453" width="0.5000%" height="15" fill="rgb(207,29,15)" fg:x="172" fg:w="2"/>
      <text x="43.2500%" y="463.50"/>
    </g>
    <g>
      <title>ext4_file_read_iter (1 samples, 0.25%)</title>
      <rect x="43.2500%" y="437" width="0.2500%" height="15" fill="rgb(246,166,2)" fg:x="173" fg:w="1"/>
      <text x="43.5000%" y="447.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.25%)</title>
      <rect x="43.5000%" y="533" width="0.2500%" height="15" fill="rgb(208,26,13)" fg:x="174" fg:w="1"/>
      <text x="43.7500%" y="543.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.25%)</title>
      <rect x="43.5000%" y="517" width="0.2500%" height="15" fill="rgb(216,51,29)" fg:x="174" fg:w="1"/>
      <text x="43.7500%" y="527.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.25%)</title>
      <rect x="43.5000%" y="501" width="0.2500%" height="15" fill="rgb(253,37,52)" fg:x="174" fg:w="1"/>
      <text x="43.7500%" y="511.50"/>
    </g>
    <g>
      <title>find_vma (1 samples, 0.25%)</title>
      <rect x="43.5000%" y="485" width="0.2500%" height="15" fill="rgb(227,147,34)" fg:x="174" fg:w="1"/>
      <text x="43.7500%" y="495.50"/>
    </g>
    <g>
      <title>crc32fast::Hasher::update (4 samples, 1.00%)</title>
      <rect x="43.5000%" y="565" width="1.0000%" height="15" fill="rgb(242,188,16)" fg:x="174" fg:w="4"/>
      <text x="43.7500%" y="575.50"/>
    </g>
    <g>
      <title>crc32fast::specialized::pclmulqdq::calculate (4 samples, 1.00%)</title>
      <rect x="43.5000%" y="549" width="1.0000%" height="15" fill="rgb(208,156,27)" fg:x="174" fg:w="4"/>
      <text x="43.7500%" y="559.50"/>
    </g>
    <g>
      <title>core::slice::sort::recurse (1 samples, 0.25%)</title>
      <rect x="44.5000%" y="549" width="0.2500%" height="15" fill="rgb(252,189,28)" fg:x="178" fg:w="1"/>
      <text x="44.7500%" y="559.50"/>
    </g>
    <g>
      <title>bzip2_rs::huffman::HuffmanTree::build_huffman_node (1 samples, 0.25%)</title>
      <rect x="44.7500%" y="437" width="0.2500%" height="15" fill="rgb(221,175,15)" fg:x="179" fg:w="1"/>
      <text x="45.0000%" y="447.50"/>
    </g>
    <g>
      <title>bzip2_rs::huffman::HuffmanTree::new (3 samples, 0.75%)</title>
      <rect x="44.5000%" y="565" width="0.7500%" height="15" fill="rgb(221,129,41)" fg:x="178" fg:w="3"/>
      <text x="44.7500%" y="575.50"/>
    </g>
    <g>
      <title>bzip2_rs::huffman::HuffmanTree::build_huffman_node (2 samples, 0.50%)</title>
      <rect x="44.7500%" y="549" width="0.5000%" height="15" fill="rgb(221,175,15)" fg:x="179" fg:w="2"/>
      <text x="45.0000%" y="559.50"/>
    </g>
    <g>
      <title>bzip2_rs::huffman::HuffmanTree::build_huffman_node (2 samples, 0.50%)</title>
      <rect x="44.7500%" y="533" width="0.5000%" height="15" fill="rgb(221,175,15)" fg:x="179" fg:w="2"/>
      <text x="45.0000%" y="543.50"/>
    </g>
    <g>
      <title>bzip2_rs::huffman::HuffmanTree::build_huffman_node (2 samples, 0.50%)</title>
      <rect x="44.7500%" y="517" width="0.5000%" height="15" fill="rgb(221,175,15)" fg:x="179" fg:w="2"/>
      <text x="45.0000%" y="527.50"/>
    </g>
    <g>
      <title>bzip2_rs::huffman::HuffmanTree::build_huffman_node (2 samples, 0.50%)</title>
      <rect x="44.7500%" y="501" width="0.5000%" height="15" fill="rgb(221,175,15)" fg:x="179" fg:w="2"/>
      <text x="45.0000%" y="511.50"/>
    </g>
    <g>
      <title>bzip2_rs::huffman::HuffmanTree::build_huffman_node (2 samples, 0.50%)</title>
      <rect x="44.7500%" y="485" width="0.5000%" height="15" fill="rgb(221,175,15)" fg:x="179" fg:w="2"/>
      <text x="45.0000%" y="495.50"/>
    </g>
    <g>
      <title>bzip2_rs::huffman::HuffmanTree::build_huffman_node (2 samples, 0.50%)</title>
      <rect x="44.7500%" y="469" width="0.5000%" height="15" fill="rgb(221,175,15)" fg:x="179" fg:w="2"/>
      <text x="45.0000%" y="479.50"/>
    </g>
    <g>
      <title>bzip2_rs::huffman::HuffmanTree::build_huffman_node (2 samples, 0.50%)</title>
      <rect x="44.7500%" y="453" width="0.5000%" height="15" fill="rgb(221,175,15)" fg:x="179" fg:w="2"/>
      <text x="45.0000%" y="463.50"/>
    </g>
    <g>
      <title>bzip2_rs::huffman::HuffmanTree::decode (30 samples, 7.50%)</title>
      <rect x="45.2500%" y="565" width="7.5000%" height="15" fill="rgb(211,190,0)" fg:x="181" fg:w="30"/>
      <text x="45.5000%" y="575.50">bzip2_rs::..</text>
    </g>
    <g>
      <title>bzip2_rs::block::bwt::inverse_bwt (11 samples, 2.75%)</title>
      <rect x="52.7500%" y="565" width="2.7500%" height="15" fill="rgb(217,10,9)" fg:x="211" fg:w="11"/>
      <text x="53.0000%" y="575.50">bz..</text>
    </g>
    <g>
      <title>lru_cache_add (2 samples, 0.50%)</title>
      <rect x="55.5000%" y="469" width="0.5000%" height="15" fill="rgb(205,98,13)" fg:x="222" fg:w="2"/>
      <text x="55.7500%" y="479.50"/>
    </g>
    <g>
      <title>__pagevec_lru_add (2 samples, 0.50%)</title>
      <rect x="55.5000%" y="453" width="0.5000%" height="15" fill="rgb(207,69,45)" fg:x="222" fg:w="2"/>
      <text x="55.7500%" y="463.50"/>
    </g>
    <g>
      <title>page_mapping (2 samples, 0.50%)</title>
      <rect x="55.5000%" y="437" width="0.5000%" height="15" fill="rgb(220,199,9)" fg:x="222" fg:w="2"/>
      <text x="55.7500%" y="447.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (3 samples, 0.75%)</title>
      <rect x="55.5000%" y="485" width="0.7500%" height="15" fill="rgb(254,123,40)" fg:x="222" fg:w="3"/>
      <text x="55.7500%" y="495.50"/>
    </g>
    <g>
      <title>__mem_cgroup_charge (1 samples, 0.25%)</title>
      <rect x="56.0000%" y="469" width="0.2500%" height="15" fill="rgb(222,56,28)" fg:x="224" fg:w="1"/>
      <text x="56.2500%" y="479.50"/>
    </g>
    <g>
      <title>charge_memcg (1 samples, 0.25%)</title>
      <rect x="56.0000%" y="453" width="0.2500%" height="15" fill="rgb(240,39,15)" fg:x="224" fg:w="1"/>
      <text x="56.2500%" y="463.50"/>
    </g>
    <g>
      <title>exc_page_fault (4 samples, 1.00%)</title>
      <rect x="55.5000%" y="533" width="1.0000%" height="15" fill="rgb(216,51,29)" fg:x="222" fg:w="4"/>
      <text x="55.7500%" y="543.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (4 samples, 1.00%)</title>
      <rect x="55.5000%" y="517" width="1.0000%" height="15" fill="rgb(253,37,52)" fg:x="222" fg:w="4"/>
      <text x="55.7500%" y="527.50"/>
    </g>
    <g>
      <title>handle_mm_fault (4 samples, 1.00%)</title>
      <rect x="55.5000%" y="501" width="1.0000%" height="15" fill="rgb(247,31,49)" fg:x="222" fg:w="4"/>
      <text x="55.7500%" y="511.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (6 samples, 1.50%)</title>
      <rect x="55.5000%" y="549" width="1.5000%" height="15" fill="rgb(208,26,13)" fg:x="222" fg:w="6"/>
      <text x="55.7500%" y="559.50"/>
    </g>
    <g>
      <title>alloc::vec::Vec&lt;T,A&gt;::resize (8 samples, 2.00%)</title>
      <rect x="55.5000%" y="565" width="2.0000%" height="15" fill="rgb(249,199,35)" fg:x="222" fg:w="8"/>
      <text x="55.7500%" y="575.50">a..</text>
    </g>
    <g>
      <title>__irqentry_text_end (1 samples, 0.25%)</title>
      <rect x="57.5000%" y="549" width="0.2500%" height="15" fill="rgb(229,133,45)" fg:x="230" fg:w="1"/>
      <text x="57.7500%" y="559.50"/>
    </g>
    <g>
      <title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 1.00%)</title>
      <rect x="57.5000%" y="565" width="1.0000%" height="15" fill="rgb(241,229,15)" fg:x="230" fg:w="4"/>
      <text x="57.7500%" y="575.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (37 samples, 9.25%)</title>
      <rect x="58.5000%" y="565" width="9.2500%" height="15" fill="rgb(217,126,36)" fg:x="234" fg:w="37"/>
      <text x="58.7500%" y="575.50">__memmove_avx..</text>
    </g>
    <g>
      <title>all (400 samples, 100%)</title>
      <rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="400"/>
      <text x="0.2500%" y="639.50"/>
    </g>
    <g>
      <title>RHE_91_system.j (297 samples, 74.25%)</title>
      <rect x="25.7500%" y="613" width="74.2500%" height="15" fill="rgb(216,111,28)" fg:x="103" fg:w="297"/>
      <text x="26.0000%" y="623.50">RHE_91_system.j</text>
    </g>
    <g>
      <title>[unknown] (255 samples, 63.75%)</title>
      <rect x="36.2500%" y="597" width="63.7500%" height="15" fill="rgb(227,28,50)" fg:x="145" fg:w="255"/>
      <text x="36.5000%" y="607.50">[unknown]</text>
    </g>
    <g>
      <title>bzip2_rs::block::Block::read (226 samples, 56.50%)</title>
      <rect x="43.5000%" y="581" width="56.5000%" height="15" fill="rgb(226,191,8)" fg:x="174" fg:w="226"/>
      <text x="43.7500%" y="591.50">bzip2_rs::block::Block::read</text>
    </g>
  </svg>
</svg>
