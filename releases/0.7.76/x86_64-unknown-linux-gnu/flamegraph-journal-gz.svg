<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno" version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662">
  <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
  <!--NOTES: foo&lt;br/&gt;bar&lt;br/&gt;super_speedy_syslog_searcher 0.7.76; git: 71d1a55a; -freq 8000; created 20250406T211609-0700; flamegraph-flamegraph 0.6.5; rust 1.73.0 x86_64-unknown-linux-gnu-->
  <defs>
    <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
      <stop stop-color="#eeeeee" offset="5%"/>
      <stop stop-color="#eeeeb0" offset="95%"/>
    </linearGradient>
  </defs>
  <style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames &gt; *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
  <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    "use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
  <rect x="0" y="0" width="100%" height="662" fill="url(#background)"/>
  <text id="title" style="font-size:xx-small" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph: super_speedy_syslog_searcher 0.7.76; git: 71d1a55a; -freq 8000; created 20250406T211609-0700; flamegraph-flamegraph 0.6.5; rust 1.73.0 x86_64-unknown-linux-gnu<br/>; command: s4 ./logs/programs/journal/RHE_91_system.journal.gz</text>
  <text id="details" fill="rgb(0,0,0)" x="10" y="645.00"> </text>
  <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text>
  <text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text>
  <text id="matched" fill="rgb(0,0,0)" x="1190" y="645.00"> </text>
  <svg id="frames" x="10" width="1180" total_samples="217">
    <g>
      <title>schedule_tail (21 samples, 9.68%)</title>
      <rect x="0.0000%" y="565" width="9.6774%" height="15" fill="rgb(215,144,34)" fg:x="0" fg:w="21"/>
      <text x="0.2500%" y="575.50">schedule_tail</text>
    </g>
    <g>
      <title>finish_task_switch.isra.0 (21 samples, 9.68%)</title>
      <rect x="0.0000%" y="549" width="9.6774%" height="15" fill="rgb(249,184,27)" fg:x="0" fg:w="21"/>
      <text x="0.2500%" y="559.50">finish_task_sw..</text>
    </g>
    <g>
      <title>__perf_event_task_sched_in (21 samples, 9.68%)</title>
      <rect x="0.0000%" y="533" width="9.6774%" height="15" fill="rgb(253,170,3)" fg:x="0" fg:w="21"/>
      <text x="0.2500%" y="543.50">__perf_event_t..</text>
    </g>
    <g>
      <title>ret_from_fork (22 samples, 10.14%)</title>
      <rect x="0.0000%" y="581" width="10.1382%" height="15" fill="rgb(249,149,44)" fg:x="0" fg:w="22"/>
      <text x="0.2500%" y="591.50">ret_from_fork</text>
    </g>
    <g>
      <title>calculate_sigpending (1 samples, 0.46%)</title>
      <rect x="9.6774%" y="565" width="0.4608%" height="15" fill="rgb(206,74,3)" fg:x="21" fg:w="1"/>
      <text x="9.9274%" y="575.50"/>
    </g>
    <g>
      <title>recalc_sigpending (1 samples, 0.46%)</title>
      <rect x="9.6774%" y="549" width="0.4608%" height="15" fill="rgb(244,225,27)" fg:x="21" fg:w="1"/>
      <text x="9.9274%" y="559.50"/>
    </g>
    <g>
      <title>freezing_slow_path (1 samples, 0.46%)</title>
      <rect x="9.6774%" y="533" width="0.4608%" height="15" fill="rgb(240,212,32)" fg:x="21" fg:w="1"/>
      <text x="9.9274%" y="543.50"/>
    </g>
    <g>
      <title>delete_from_page_cache_batch (2 samples, 0.92%)</title>
      <rect x="10.1382%" y="389" width="0.9217%" height="15" fill="rgb(205,34,0)" fg:x="22" fg:w="2"/>
      <text x="10.3882%" y="399.50"/>
    </g>
    <g>
      <title>xas_store (2 samples, 0.92%)</title>
      <rect x="10.1382%" y="373" width="0.9217%" height="15" fill="rgb(212,131,5)" fg:x="22" fg:w="2"/>
      <text x="10.3882%" y="383.50"/>
    </g>
    <g>
      <title>__mod_zone_page_state (1 samples, 0.46%)</title>
      <rect x="11.0599%" y="357" width="0.4608%" height="15" fill="rgb(241,16,32)" fg:x="24" fg:w="1"/>
      <text x="11.3099%" y="367.50"/>
    </g>
    <g>
      <title>truncate_inode_pages_range (4 samples, 1.84%)</title>
      <rect x="10.1382%" y="405" width="1.8433%" height="15" fill="rgb(228,2,6)" fg:x="22" fg:w="4"/>
      <text x="10.3882%" y="415.50">t..</text>
    </g>
    <g>
      <title>__pagevec_release (2 samples, 0.92%)</title>
      <rect x="11.0599%" y="389" width="0.9217%" height="15" fill="rgb(246,111,1)" fg:x="24" fg:w="2"/>
      <text x="11.3099%" y="399.50"/>
    </g>
    <g>
      <title>release_pages (2 samples, 0.92%)</title>
      <rect x="11.0599%" y="373" width="0.9217%" height="15" fill="rgb(247,202,4)" fg:x="24" fg:w="2"/>
      <text x="11.3099%" y="383.50"/>
    </g>
    <g>
      <title>task_work_run (5 samples, 2.30%)</title>
      <rect x="10.1382%" y="501" width="2.3041%" height="15" fill="rgb(206,18,50)" fg:x="22" fg:w="5"/>
      <text x="10.3882%" y="511.50">t..</text>
    </g>
    <g>
      <title>__fput (5 samples, 2.30%)</title>
      <rect x="10.1382%" y="485" width="2.3041%" height="15" fill="rgb(210,120,45)" fg:x="22" fg:w="5"/>
      <text x="10.3882%" y="495.50">_..</text>
    </g>
    <g>
      <title>dput (5 samples, 2.30%)</title>
      <rect x="10.1382%" y="469" width="2.3041%" height="15" fill="rgb(252,3,5)" fg:x="22" fg:w="5"/>
      <text x="10.3882%" y="479.50">d..</text>
    </g>
    <g>
      <title>__dentry_kill (5 samples, 2.30%)</title>
      <rect x="10.1382%" y="453" width="2.3041%" height="15" fill="rgb(216,135,0)" fg:x="22" fg:w="5"/>
      <text x="10.3882%" y="463.50">_..</text>
    </g>
    <g>
      <title>evict (5 samples, 2.30%)</title>
      <rect x="10.1382%" y="437" width="2.3041%" height="15" fill="rgb(232,48,28)" fg:x="22" fg:w="5"/>
      <text x="10.3882%" y="447.50">e..</text>
    </g>
    <g>
      <title>ext4_evict_inode (5 samples, 2.30%)</title>
      <rect x="10.1382%" y="421" width="2.3041%" height="15" fill="rgb(225,179,4)" fg:x="22" fg:w="5"/>
      <text x="10.3882%" y="431.50">e..</text>
    </g>
    <g>
      <title>ext4_free_inode (1 samples, 0.46%)</title>
      <rect x="11.9816%" y="405" width="0.4608%" height="15" fill="rgb(236,61,29)" fg:x="26" fg:w="1"/>
      <text x="12.2316%" y="415.50"/>
    </g>
    <g>
      <title>ext4_clear_inode (1 samples, 0.46%)</title>
      <rect x="11.9816%" y="389" width="0.4608%" height="15" fill="rgb(251,191,16)" fg:x="26" fg:w="1"/>
      <text x="12.2316%" y="399.50"/>
    </g>
    <g>
      <title>kmem_cache_free.part.0 (1 samples, 0.46%)</title>
      <rect x="11.9816%" y="373" width="0.4608%" height="15" fill="rgb(227,24,38)" fg:x="26" fg:w="1"/>
      <text x="12.2316%" y="383.50"/>
    </g>
    <g>
      <title>__slab_free.constprop.0 (1 samples, 0.46%)</title>
      <rect x="11.9816%" y="357" width="0.4608%" height="15" fill="rgb(225,166,35)" fg:x="26" fg:w="1"/>
      <text x="12.2316%" y="367.50"/>
    </g>
    <g>
      <title>unlock_page_memcg (1 samples, 0.46%)</title>
      <rect x="12.4424%" y="437" width="0.4608%" height="15" fill="rgb(224,114,26)" fg:x="27" fg:w="1"/>
      <text x="12.6924%" y="447.50"/>
    </g>
    <g>
      <title>__x64_sys_exit_group (7 samples, 3.23%)</title>
      <rect x="10.1382%" y="549" width="3.2258%" height="15" fill="rgb(219,187,49)" fg:x="22" fg:w="7"/>
      <text x="10.3882%" y="559.50">__x..</text>
    </g>
    <g>
      <title>do_group_exit (7 samples, 3.23%)</title>
      <rect x="10.1382%" y="533" width="3.2258%" height="15" fill="rgb(241,5,8)" fg:x="22" fg:w="7"/>
      <text x="10.3882%" y="543.50">do_..</text>
    </g>
    <g>
      <title>do_exit (7 samples, 3.23%)</title>
      <rect x="10.1382%" y="517" width="3.2258%" height="15" fill="rgb(238,144,25)" fg:x="22" fg:w="7"/>
      <text x="10.3882%" y="527.50">do_..</text>
    </g>
    <g>
      <title>mmput (2 samples, 0.92%)</title>
      <rect x="12.4424%" y="501" width="0.9217%" height="15" fill="rgb(228,125,30)" fg:x="27" fg:w="2"/>
      <text x="12.6924%" y="511.50"/>
    </g>
    <g>
      <title>exit_mmap (2 samples, 0.92%)</title>
      <rect x="12.4424%" y="485" width="0.9217%" height="15" fill="rgb(221,135,18)" fg:x="27" fg:w="2"/>
      <text x="12.6924%" y="495.50"/>
    </g>
    <g>
      <title>unmap_vmas (2 samples, 0.92%)</title>
      <rect x="12.4424%" y="469" width="0.9217%" height="15" fill="rgb(216,135,47)" fg:x="27" fg:w="2"/>
      <text x="12.6924%" y="479.50"/>
    </g>
    <g>
      <title>unmap_page_range (2 samples, 0.92%)</title>
      <rect x="12.4424%" y="453" width="0.9217%" height="15" fill="rgb(216,127,1)" fg:x="27" fg:w="2"/>
      <text x="12.6924%" y="463.50"/>
    </g>
    <g>
      <title>page_remove_rmap (1 samples, 0.46%)</title>
      <rect x="12.9032%" y="437" width="0.4608%" height="15" fill="rgb(222,17,10)" fg:x="28" fg:w="1"/>
      <text x="13.1532%" y="447.50"/>
    </g>
    <g>
      <title>vm_mmap_pgoff (1 samples, 0.46%)</title>
      <rect x="13.3641%" y="485" width="0.4608%" height="15" fill="rgb(226,196,1)" fg:x="29" fg:w="1"/>
      <text x="13.6141%" y="495.50"/>
    </g>
    <g>
      <title>do_mmap (1 samples, 0.46%)</title>
      <rect x="13.3641%" y="469" width="0.4608%" height="15" fill="rgb(228,25,27)" fg:x="29" fg:w="1"/>
      <text x="13.6141%" y="479.50"/>
    </g>
    <g>
      <title>mmap_region (1 samples, 0.46%)</title>
      <rect x="13.3641%" y="453" width="0.4608%" height="15" fill="rgb(233,57,38)" fg:x="29" fg:w="1"/>
      <text x="13.6141%" y="463.50"/>
    </g>
    <g>
      <title>perf_event_mmap (1 samples, 0.46%)</title>
      <rect x="13.3641%" y="437" width="0.4608%" height="15" fill="rgb(252,32,1)" fg:x="29" fg:w="1"/>
      <text x="13.6141%" y="447.50"/>
    </g>
    <g>
      <title>perf_iterate_sb (1 samples, 0.46%)</title>
      <rect x="13.3641%" y="421" width="0.4608%" height="15" fill="rgb(241,203,1)" fg:x="29" fg:w="1"/>
      <text x="13.6141%" y="431.50"/>
    </g>
    <g>
      <title>perf_iterate_ctx (1 samples, 0.46%)</title>
      <rect x="13.3641%" y="405" width="0.4608%" height="15" fill="rgb(227,133,21)" fg:x="29" fg:w="1"/>
      <text x="13.6141%" y="415.50"/>
    </g>
    <g>
      <title>perf_event_mmap_output (1 samples, 0.46%)</title>
      <rect x="13.3641%" y="389" width="0.4608%" height="15" fill="rgb(225,127,18)" fg:x="29" fg:w="1"/>
      <text x="13.6141%" y="399.50"/>
    </g>
    <g>
      <title>start_thread_common.constprop.0 (1 samples, 0.46%)</title>
      <rect x="13.8249%" y="485" width="0.4608%" height="15" fill="rgb(216,217,27)" fg:x="30" fg:w="1"/>
      <text x="14.0749%" y="495.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (10 samples, 4.61%)</title>
      <rect x="10.1382%" y="581" width="4.6083%" height="15" fill="rgb(205,226,15)" fg:x="22" fg:w="10"/>
      <text x="10.3882%" y="591.50">entry..</text>
    </g>
    <g>
      <title>do_syscall_64 (10 samples, 4.61%)</title>
      <rect x="10.1382%" y="565" width="4.6083%" height="15" fill="rgb(220,74,14)" fg:x="22" fg:w="10"/>
      <text x="10.3882%" y="575.50">do_sy..</text>
    </g>
    <g>
      <title>__x64_sys_execve (3 samples, 1.38%)</title>
      <rect x="13.3641%" y="549" width="1.3825%" height="15" fill="rgb(237,59,15)" fg:x="29" fg:w="3"/>
      <text x="13.6141%" y="559.50"/>
    </g>
    <g>
      <title>do_execveat_common.isra.0 (3 samples, 1.38%)</title>
      <rect x="13.3641%" y="533" width="1.3825%" height="15" fill="rgb(248,134,53)" fg:x="29" fg:w="3"/>
      <text x="13.6141%" y="543.50"/>
    </g>
    <g>
      <title>bprm_execve (3 samples, 1.38%)</title>
      <rect x="13.3641%" y="517" width="1.3825%" height="15" fill="rgb(232,147,16)" fg:x="29" fg:w="3"/>
      <text x="13.6141%" y="527.50"/>
    </g>
    <g>
      <title>load_elf_binary (3 samples, 1.38%)</title>
      <rect x="13.3641%" y="501" width="1.3825%" height="15" fill="rgb(246,102,21)" fg:x="29" fg:w="3"/>
      <text x="13.6141%" y="511.50"/>
    </g>
    <g>
      <title>begin_new_exec (1 samples, 0.46%)</title>
      <rect x="14.2857%" y="485" width="0.4608%" height="15" fill="rgb(219,195,31)" fg:x="31" fg:w="1"/>
      <text x="14.5357%" y="495.50"/>
    </g>
    <g>
      <title>perf_event_comm (1 samples, 0.46%)</title>
      <rect x="14.2857%" y="469" width="0.4608%" height="15" fill="rgb(252,106,2)" fg:x="31" fg:w="1"/>
      <text x="14.5357%" y="479.50"/>
    </g>
    <g>
      <title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.46%)</title>
      <rect x="14.7465%" y="549" width="0.4608%" height="15" fill="rgb(215,36,0)" fg:x="32" fg:w="1"/>
      <text x="14.9965%" y="559.50"/>
    </g>
    <g>
      <title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.46%)</title>
      <rect x="14.7465%" y="533" width="0.4608%" height="15" fill="rgb(237,166,40)" fg:x="32" fg:w="1"/>
      <text x="14.9965%" y="543.50"/>
    </g>
    <g>
      <title>__mmap (1 samples, 0.46%)</title>
      <rect x="14.7465%" y="517" width="0.4608%" height="15" fill="rgb(252,174,12)" fg:x="32" fg:w="1"/>
      <text x="14.9965%" y="527.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title>
      <rect x="14.7465%" y="501" width="0.4608%" height="15" fill="rgb(205,226,15)" fg:x="32" fg:w="1"/>
      <text x="14.9965%" y="511.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.46%)</title>
      <rect x="14.7465%" y="485" width="0.4608%" height="15" fill="rgb(220,74,14)" fg:x="32" fg:w="1"/>
      <text x="14.9965%" y="495.50"/>
    </g>
    <g>
      <title>vm_mmap_pgoff (1 samples, 0.46%)</title>
      <rect x="14.7465%" y="469" width="0.4608%" height="15" fill="rgb(226,196,1)" fg:x="32" fg:w="1"/>
      <text x="14.9965%" y="479.50"/>
    </g>
    <g>
      <title>do_mmap (1 samples, 0.46%)</title>
      <rect x="14.7465%" y="453" width="0.4608%" height="15" fill="rgb(228,25,27)" fg:x="32" fg:w="1"/>
      <text x="14.9965%" y="463.50"/>
    </g>
    <g>
      <title>mmap_region (1 samples, 0.46%)</title>
      <rect x="14.7465%" y="437" width="0.4608%" height="15" fill="rgb(233,57,38)" fg:x="32" fg:w="1"/>
      <text x="14.9965%" y="447.50"/>
    </g>
    <g>
      <title>__vm_enough_memory (1 samples, 0.46%)</title>
      <rect x="14.7465%" y="421" width="0.4608%" height="15" fill="rgb(210,88,7)" fg:x="32" fg:w="1"/>
      <text x="14.9965%" y="431.50"/>
    </g>
    <g>
      <title>percpu_counter_add_batch (1 samples, 0.46%)</title>
      <rect x="14.7465%" y="405" width="0.4608%" height="15" fill="rgb(219,106,45)" fg:x="32" fg:w="1"/>
      <text x="14.9965%" y="415.50"/>
    </g>
    <g>
      <title>start_thread (2 samples, 0.92%)</title>
      <rect x="14.7465%" y="565" width="0.9217%" height="15" fill="rgb(209,148,13)" fg:x="32" fg:w="2"/>
      <text x="14.9965%" y="575.50"/>
    </g>
    <g>
      <title>clone3 (3 samples, 1.38%)</title>
      <rect x="14.7465%" y="581" width="1.3825%" height="15" fill="rgb(208,138,34)" fg:x="32" fg:w="3"/>
      <text x="14.9965%" y="591.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title>
      <rect x="15.6682%" y="565" width="0.4608%" height="15" fill="rgb(205,226,15)" fg:x="34" fg:w="1"/>
      <text x="15.9182%" y="575.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.46%)</title>
      <rect x="15.6682%" y="549" width="0.4608%" height="15" fill="rgb(220,74,14)" fg:x="34" fg:w="1"/>
      <text x="15.9182%" y="559.50"/>
    </g>
    <g>
      <title>__do_sys_clone3 (1 samples, 0.46%)</title>
      <rect x="15.6682%" y="533" width="0.4608%" height="15" fill="rgb(226,75,10)" fg:x="34" fg:w="1"/>
      <text x="15.9182%" y="543.50"/>
    </g>
    <g>
      <title>kernel_clone (1 samples, 0.46%)</title>
      <rect x="15.6682%" y="517" width="0.4608%" height="15" fill="rgb(225,70,27)" fg:x="34" fg:w="1"/>
      <text x="15.9182%" y="527.50"/>
    </g>
    <g>
      <title>copy_process (1 samples, 0.46%)</title>
      <rect x="15.6682%" y="501" width="0.4608%" height="15" fill="rgb(210,101,2)" fg:x="34" fg:w="1"/>
      <text x="15.9182%" y="511.50"/>
    </g>
    <g>
      <title>proc_fork_connector (1 samples, 0.46%)</title>
      <rect x="15.6682%" y="485" width="0.4608%" height="15" fill="rgb(234,229,35)" fg:x="34" fg:w="1"/>
      <text x="15.9182%" y="495.50"/>
    </g>
    <g>
      <title>netlink_broadcast (1 samples, 0.46%)</title>
      <rect x="15.6682%" y="469" width="0.4608%" height="15" fill="rgb(219,106,34)" fg:x="34" fg:w="1"/>
      <text x="15.9182%" y="479.50"/>
    </g>
    <g>
      <title>netlink_broadcast_filtered (1 samples, 0.46%)</title>
      <rect x="15.6682%" y="453" width="0.4608%" height="15" fill="rgb(241,77,14)" fg:x="34" fg:w="1"/>
      <text x="15.9182%" y="463.50"/>
    </g>
    <g>
      <title>netlink_trim (1 samples, 0.46%)</title>
      <rect x="15.6682%" y="437" width="0.4608%" height="15" fill="rgb(215,169,45)" fg:x="34" fg:w="1"/>
      <text x="15.9182%" y="447.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 0.46%)</title>
      <rect x="15.6682%" y="421" width="0.4608%" height="15" fill="rgb(248,122,31)" fg:x="34" fg:w="1"/>
      <text x="15.9182%" y="431.50"/>
    </g>
    <g>
      <title>access (1 samples, 0.46%)</title>
      <rect x="16.1290%" y="517" width="0.4608%" height="15" fill="rgb(218,113,4)" fg:x="35" fg:w="1"/>
      <text x="16.3790%" y="527.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title>
      <rect x="16.1290%" y="501" width="0.4608%" height="15" fill="rgb(205,226,15)" fg:x="35" fg:w="1"/>
      <text x="16.3790%" y="511.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.46%)</title>
      <rect x="16.1290%" y="485" width="0.4608%" height="15" fill="rgb(220,74,14)" fg:x="35" fg:w="1"/>
      <text x="16.3790%" y="495.50"/>
    </g>
    <g>
      <title>do_faccessat (1 samples, 0.46%)</title>
      <rect x="16.1290%" y="469" width="0.4608%" height="15" fill="rgb(210,86,42)" fg:x="35" fg:w="1"/>
      <text x="16.3790%" y="479.50"/>
    </g>
    <g>
      <title>prepare_creds (1 samples, 0.46%)</title>
      <rect x="16.1290%" y="453" width="0.4608%" height="15" fill="rgb(206,68,4)" fg:x="35" fg:w="1"/>
      <text x="16.3790%" y="463.50"/>
    </g>
    <g>
      <title>__validate_process_creds (1 samples, 0.46%)</title>
      <rect x="16.1290%" y="437" width="0.4608%" height="15" fill="rgb(216,221,44)" fg:x="35" fg:w="1"/>
      <text x="16.3790%" y="447.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.46%)</title>
      <rect x="16.5899%" y="469" width="0.4608%" height="15" fill="rgb(253,37,52)" fg:x="36" fg:w="1"/>
      <text x="16.8399%" y="479.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.46%)</title>
      <rect x="16.5899%" y="453" width="0.4608%" height="15" fill="rgb(247,31,49)" fg:x="36" fg:w="1"/>
      <text x="16.8399%" y="463.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.46%)</title>
      <rect x="16.5899%" y="437" width="0.4608%" height="15" fill="rgb(254,123,40)" fg:x="36" fg:w="1"/>
      <text x="16.8399%" y="447.50"/>
    </g>
    <g>
      <title>finish_fault (1 samples, 0.46%)</title>
      <rect x="16.5899%" y="421" width="0.4608%" height="15" fill="rgb(219,25,1)" fg:x="36" fg:w="1"/>
      <text x="16.8399%" y="431.50"/>
    </g>
    <g>
      <title>_raw_spin_lock (1 samples, 0.46%)</title>
      <rect x="16.5899%" y="405" width="0.4608%" height="15" fill="rgb(225,195,37)" fg:x="36" fg:w="1"/>
      <text x="16.8399%" y="415.50"/>
    </g>
    <g>
      <title>asm_exc_page_fault (2 samples, 0.92%)</title>
      <rect x="16.5899%" y="501" width="0.9217%" height="15" fill="rgb(208,26,13)" fg:x="36" fg:w="2"/>
      <text x="16.8399%" y="511.50"/>
    </g>
    <g>
      <title>exc_page_fault (2 samples, 0.92%)</title>
      <rect x="16.5899%" y="485" width="0.9217%" height="15" fill="rgb(216,51,29)" fg:x="36" fg:w="2"/>
      <text x="16.8399%" y="495.50"/>
    </g>
    <g>
      <title>_dl_lookup_symbol_x (1 samples, 0.46%)</title>
      <rect x="17.5115%" y="501" width="0.4608%" height="15" fill="rgb(229,85,42)" fg:x="38" fg:w="1"/>
      <text x="17.7615%" y="511.50"/>
    </g>
    <g>
      <title>_dl_relocate_object (4 samples, 1.84%)</title>
      <rect x="16.5899%" y="517" width="1.8433%" height="15" fill="rgb(244,75,35)" fg:x="36" fg:w="4"/>
      <text x="16.8399%" y="527.50">_..</text>
    </g>
    <g>
      <title>_dl_start (6 samples, 2.76%)</title>
      <rect x="16.1290%" y="565" width="2.7650%" height="15" fill="rgb(214,13,30)" fg:x="35" fg:w="6"/>
      <text x="16.3790%" y="575.50">_d..</text>
    </g>
    <g>
      <title>_dl_sysdep_start (6 samples, 2.76%)</title>
      <rect x="16.1290%" y="549" width="2.7650%" height="15" fill="rgb(238,104,49)" fg:x="35" fg:w="6"/>
      <text x="16.3790%" y="559.50">_d..</text>
    </g>
    <g>
      <title>dl_main (6 samples, 2.76%)</title>
      <rect x="16.1290%" y="533" width="2.7650%" height="15" fill="rgb(253,59,10)" fg:x="35" fg:w="6"/>
      <text x="16.3790%" y="543.50">dl..</text>
    </g>
    <g>
      <title>_dl_map_object_deps (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="517" width="0.4608%" height="15" fill="rgb(208,68,2)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="527.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="501" width="0.4608%" height="15" fill="rgb(238,71,42)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="511.50"/>
    </g>
    <g>
      <title>openaux (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="485" width="0.4608%" height="15" fill="rgb(215,55,1)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="495.50"/>
    </g>
    <g>
      <title>_dl_map_object (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="469" width="0.4608%" height="15" fill="rgb(247,77,9)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="479.50"/>
    </g>
    <g>
      <title>_dl_map_object_from_fd (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="453" width="0.4608%" height="15" fill="rgb(253,121,32)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="463.50"/>
    </g>
    <g>
      <title>mmap64 (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="437" width="0.4608%" height="15" fill="rgb(246,213,14)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="447.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="421" width="0.4608%" height="15" fill="rgb(205,226,15)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="431.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="405" width="0.4608%" height="15" fill="rgb(220,74,14)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="415.50"/>
    </g>
    <g>
      <title>ksys_mmap_pgoff (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="389" width="0.4608%" height="15" fill="rgb(248,1,16)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="399.50"/>
    </g>
    <g>
      <title>vm_mmap_pgoff (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="373" width="0.4608%" height="15" fill="rgb(226,196,1)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="383.50"/>
    </g>
    <g>
      <title>do_mmap (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="357" width="0.4608%" height="15" fill="rgb(228,25,27)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="367.50"/>
    </g>
    <g>
      <title>get_unmapped_area (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="341" width="0.4608%" height="15" fill="rgb(243,176,38)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="351.50"/>
    </g>
    <g>
      <title>arch_get_unmapped_area_topdown (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="325" width="0.4608%" height="15" fill="rgb(213,22,5)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="335.50"/>
    </g>
    <g>
      <title>vm_unmapped_area (1 samples, 0.46%)</title>
      <rect x="18.4332%" y="309" width="0.4608%" height="15" fill="rgb(208,22,54)" fg:x="40" fg:w="1"/>
      <text x="18.6832%" y="319.50"/>
    </g>
    <g>
      <title>std::sys_common::once::futex::Once::call (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="501" width="0.4608%" height="15" fill="rgb(246,168,49)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="511.50"/>
    </g>
    <g>
      <title>__munmap (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="485" width="0.4608%" height="15" fill="rgb(232,183,39)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="495.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="469" width="0.4608%" height="15" fill="rgb(205,226,15)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="479.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="453" width="0.4608%" height="15" fill="rgb(220,74,14)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="463.50"/>
    </g>
    <g>
      <title>__x64_sys_munmap (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="437" width="0.4608%" height="15" fill="rgb(218,184,12)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="447.50"/>
    </g>
    <g>
      <title>__vm_munmap (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="421" width="0.4608%" height="15" fill="rgb(247,197,25)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="431.50"/>
    </g>
    <g>
      <title>__do_munmap (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="405" width="0.4608%" height="15" fill="rgb(225,34,24)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="415.50"/>
    </g>
    <g>
      <title>unmap_region (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="389" width="0.4608%" height="15" fill="rgb(215,221,10)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="399.50"/>
    </g>
    <g>
      <title>free_pgtables (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="373" width="0.4608%" height="15" fill="rgb(248,44,31)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="383.50"/>
    </g>
    <g>
      <title>unlink_anon_vmas (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="357" width="0.4608%" height="15" fill="rgb(236,222,22)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="367.50"/>
    </g>
    <g>
      <title>kmem_cache_free.part.0 (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="341" width="0.4608%" height="15" fill="rgb(227,24,38)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="351.50"/>
    </g>
    <g>
      <title>__slab_free.constprop.0 (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="325" width="0.4608%" height="15" fill="rgb(225,166,35)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="335.50"/>
    </g>
    <g>
      <title>__list_add_valid (1 samples, 0.46%)</title>
      <rect x="18.8940%" y="309" width="0.4608%" height="15" fill="rgb(206,79,8)" fg:x="41" fg:w="1"/>
      <text x="19.1440%" y="319.50"/>
    </g>
    <g>
      <title>lockref_get_not_zero (1 samples, 0.46%)</title>
      <rect x="19.3548%" y="245" width="0.4608%" height="15" fill="rgb(249,177,1)" fg:x="42" fg:w="1"/>
      <text x="19.6048%" y="255.50"/>
    </g>
    <g>
      <title>vfs_write (2 samples, 0.92%)</title>
      <rect x="19.3548%" y="293" width="0.9217%" height="15" fill="rgb(216,184,13)" fg:x="42" fg:w="2"/>
      <text x="19.6048%" y="303.50"/>
    </g>
    <g>
      <title>__fsnotify_parent (2 samples, 0.92%)</title>
      <rect x="19.3548%" y="277" width="0.9217%" height="15" fill="rgb(232,3,50)" fg:x="42" fg:w="2"/>
      <text x="19.6048%" y="287.50"/>
    </g>
    <g>
      <title>dget_parent (2 samples, 0.92%)</title>
      <rect x="19.3548%" y="261" width="0.9217%" height="15" fill="rgb(239,199,25)" fg:x="42" fg:w="2"/>
      <text x="19.6048%" y="271.50"/>
    </g>
    <g>
      <title>__fdget_pos (1 samples, 0.46%)</title>
      <rect x="20.2765%" y="293" width="0.4608%" height="15" fill="rgb(205,61,45)" fg:x="44" fg:w="1"/>
      <text x="20.5265%" y="303.50"/>
    </g>
    <g>
      <title>__fget_light (1 samples, 0.46%)</title>
      <rect x="20.2765%" y="277" width="0.4608%" height="15" fill="rgb(243,103,32)" fg:x="44" fg:w="1"/>
      <text x="20.5265%" y="287.50"/>
    </g>
    <g>
      <title>__fget_files (1 samples, 0.46%)</title>
      <rect x="20.2765%" y="261" width="0.4608%" height="15" fill="rgb(209,124,29)" fg:x="44" fg:w="1"/>
      <text x="20.5265%" y="271.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (5 samples, 2.30%)</title>
      <rect x="19.3548%" y="341" width="2.3041%" height="15" fill="rgb(205,226,15)" fg:x="42" fg:w="5"/>
      <text x="19.6048%" y="351.50">e..</text>
    </g>
    <g>
      <title>do_syscall_64 (5 samples, 2.30%)</title>
      <rect x="19.3548%" y="325" width="2.3041%" height="15" fill="rgb(220,74,14)" fg:x="42" fg:w="5"/>
      <text x="19.6048%" y="335.50">d..</text>
    </g>
    <g>
      <title>ksys_write (5 samples, 2.30%)</title>
      <rect x="19.3548%" y="309" width="2.3041%" height="15" fill="rgb(223,155,43)" fg:x="42" fg:w="5"/>
      <text x="19.6048%" y="319.50">k..</text>
    </g>
    <g>
      <title>std::io::Write::write_all (6 samples, 2.76%)</title>
      <rect x="19.3548%" y="421" width="2.7650%" height="15" fill="rgb(251,145,9)" fg:x="42" fg:w="6"/>
      <text x="19.6048%" y="431.50">st..</text>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (6 samples, 2.76%)</title>
      <rect x="19.3548%" y="405" width="2.7650%" height="15" fill="rgb(215,142,33)" fg:x="42" fg:w="6"/>
      <text x="19.6048%" y="415.50">&lt;s..</text>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (6 samples, 2.76%)</title>
      <rect x="19.3548%" y="389" width="2.7650%" height="15" fill="rgb(232,39,45)" fg:x="42" fg:w="6"/>
      <text x="19.6048%" y="399.50">&lt;&amp;..</text>
    </g>
    <g>
      <title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (6 samples, 2.76%)</title>
      <rect x="19.3548%" y="373" width="2.7650%" height="15" fill="rgb(216,85,2)" fg:x="42" fg:w="6"/>
      <text x="19.6048%" y="383.50">&lt;s..</text>
    </g>
    <g>
      <title>__GI___libc_write (6 samples, 2.76%)</title>
      <rect x="19.3548%" y="357" width="2.7650%" height="15" fill="rgb(232,197,30)" fg:x="42" fg:w="6"/>
      <text x="19.6048%" y="367.50">__..</text>
    </g>
    <g>
      <title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.46%)</title>
      <rect x="22.1198%" y="421" width="0.4608%" height="15" fill="rgb(243,52,34)" fg:x="48" fg:w="1"/>
      <text x="22.3698%" y="431.50"/>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (1 samples, 0.46%)</title>
      <rect x="22.1198%" y="405" width="0.4608%" height="15" fill="rgb(217,126,36)" fg:x="48" fg:w="1"/>
      <text x="22.3698%" y="415.50"/>
    </g>
    <g>
      <title>__memrchr_evex (2 samples, 0.92%)</title>
      <rect x="22.5806%" y="325" width="0.9217%" height="15" fill="rgb(249,31,17)" fg:x="49" fg:w="2"/>
      <text x="22.8306%" y="335.50"/>
    </g>
    <g>
      <title>std::io::Write::write_all (3 samples, 1.38%)</title>
      <rect x="22.5806%" y="389" width="1.3825%" height="15" fill="rgb(251,145,9)" fg:x="49" fg:w="3"/>
      <text x="22.8306%" y="399.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (3 samples, 1.38%)</title>
      <rect x="22.5806%" y="373" width="1.3825%" height="15" fill="rgb(215,142,33)" fg:x="49" fg:w="3"/>
      <text x="22.8306%" y="383.50"/>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (3 samples, 1.38%)</title>
      <rect x="22.5806%" y="357" width="1.3825%" height="15" fill="rgb(232,39,45)" fg:x="49" fg:w="3"/>
      <text x="22.8306%" y="367.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (3 samples, 1.38%)</title>
      <rect x="22.5806%" y="341" width="1.3825%" height="15" fill="rgb(216,85,2)" fg:x="49" fg:w="3"/>
      <text x="22.8306%" y="351.50"/>
    </g>
    <g>
      <title>termcolor::Ansi&lt;W&gt;::write_color (4 samples, 1.84%)</title>
      <rect x="22.5806%" y="405" width="1.8433%" height="15" fill="rgb(250,61,20)" fg:x="49" fg:w="4"/>
      <text x="22.8306%" y="415.50">t..</text>
    </g>
    <g>
      <title>std::io::Write::write_all (1 samples, 0.46%)</title>
      <rect x="24.4240%" y="405" width="0.4608%" height="15" fill="rgb(251,145,9)" fg:x="53" fg:w="1"/>
      <text x="24.6740%" y="415.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.46%)</title>
      <rect x="24.4240%" y="389" width="0.4608%" height="15" fill="rgb(215,142,33)" fg:x="53" fg:w="1"/>
      <text x="24.6740%" y="399.50"/>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.46%)</title>
      <rect x="24.4240%" y="373" width="0.4608%" height="15" fill="rgb(232,39,45)" fg:x="53" fg:w="1"/>
      <text x="24.6740%" y="383.50"/>
    </g>
    <g>
      <title>&lt;termcolor::WriterInner&lt;W&gt; as termcolor::WriteColor&gt;::set_color (6 samples, 2.76%)</title>
      <rect x="22.5806%" y="421" width="2.7650%" height="15" fill="rgb(234,182,7)" fg:x="49" fg:w="6"/>
      <text x="22.8306%" y="431.50">&lt;t..</text>
    </g>
    <g>
      <title>&lt;termcolor::ColorSpec as core::cmp::PartialEq&gt;::eq (1 samples, 0.46%)</title>
      <rect x="25.3456%" y="421" width="0.4608%" height="15" fill="rgb(241,123,18)" fg:x="55" fg:w="1"/>
      <text x="25.5956%" y="431.50"/>
    </g>
    <g>
      <title>syscall_exit_to_user_mode (1 samples, 0.46%)</title>
      <rect x="25.8065%" y="325" width="0.4608%" height="15" fill="rgb(215,101,28)" fg:x="56" fg:w="1"/>
      <text x="26.0565%" y="335.50"/>
    </g>
    <g>
      <title>write_null (1 samples, 0.46%)</title>
      <rect x="26.2673%" y="293" width="0.4608%" height="15" fill="rgb(223,225,28)" fg:x="57" fg:w="1"/>
      <text x="26.5173%" y="303.50"/>
    </g>
    <g>
      <title>dput (1 samples, 0.46%)</title>
      <rect x="26.7281%" y="277" width="0.4608%" height="15" fill="rgb(252,3,5)" fg:x="58" fg:w="1"/>
      <text x="26.9781%" y="287.50"/>
    </g>
    <g>
      <title>__fsnotify_parent (2 samples, 0.92%)</title>
      <rect x="26.7281%" y="293" width="0.9217%" height="15" fill="rgb(232,3,50)" fg:x="58" fg:w="2"/>
      <text x="26.9781%" y="303.50"/>
    </g>
    <g>
      <title>dget_parent (1 samples, 0.46%)</title>
      <rect x="27.1889%" y="277" width="0.4608%" height="15" fill="rgb(239,199,25)" fg:x="59" fg:w="1"/>
      <text x="27.4389%" y="287.50"/>
    </g>
    <g>
      <title>vfs_write (5 samples, 2.30%)</title>
      <rect x="26.2673%" y="309" width="2.3041%" height="15" fill="rgb(216,184,13)" fg:x="57" fg:w="5"/>
      <text x="26.5173%" y="319.50">v..</text>
    </g>
    <g>
      <title>srso_alias_return_thunk (1 samples, 0.46%)</title>
      <rect x="28.5714%" y="309" width="0.4608%" height="15" fill="rgb(245,80,51)" fg:x="62" fg:w="1"/>
      <text x="28.8214%" y="319.50"/>
    </g>
    <g>
      <title>srso_alias_safe_ret (1 samples, 0.46%)</title>
      <rect x="28.5714%" y="293" width="0.4608%" height="15" fill="rgb(248,122,31)" fg:x="62" fg:w="1"/>
      <text x="28.8214%" y="303.50"/>
    </g>
    <g>
      <title>fput_many (1 samples, 0.46%)</title>
      <rect x="29.0323%" y="309" width="0.4608%" height="15" fill="rgb(223,66,3)" fg:x="63" fg:w="1"/>
      <text x="29.2823%" y="319.50"/>
    </g>
    <g>
      <title>__fget_files (1 samples, 0.46%)</title>
      <rect x="29.4931%" y="277" width="0.4608%" height="15" fill="rgb(209,124,29)" fg:x="64" fg:w="1"/>
      <text x="29.7431%" y="287.50"/>
    </g>
    <g>
      <title>__fget_light (2 samples, 0.92%)</title>
      <rect x="29.4931%" y="293" width="0.9217%" height="15" fill="rgb(243,103,32)" fg:x="64" fg:w="2"/>
      <text x="29.7431%" y="303.50"/>
    </g>
    <g>
      <title>__fdget_pos (3 samples, 1.38%)</title>
      <rect x="29.4931%" y="309" width="1.3825%" height="15" fill="rgb(205,61,45)" fg:x="64" fg:w="3"/>
      <text x="29.7431%" y="319.50"/>
    </g>
    <g>
      <title>do_syscall_64 (13 samples, 5.99%)</title>
      <rect x="25.8065%" y="341" width="5.9908%" height="15" fill="rgb(220,74,14)" fg:x="56" fg:w="13"/>
      <text x="26.0565%" y="351.50">do_sysca..</text>
    </g>
    <g>
      <title>ksys_write (12 samples, 5.53%)</title>
      <rect x="26.2673%" y="325" width="5.5300%" height="15" fill="rgb(223,155,43)" fg:x="57" fg:w="12"/>
      <text x="26.5173%" y="335.50">ksys_wr..</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (14 samples, 6.45%)</title>
      <rect x="25.8065%" y="357" width="6.4516%" height="15" fill="rgb(205,226,15)" fg:x="56" fg:w="14"/>
      <text x="26.0565%" y="367.50">entry_SY..</text>
    </g>
    <g>
      <title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write (1 samples, 0.46%)</title>
      <rect x="32.2581%" y="357" width="0.4608%" height="15" fill="rgb(216,85,2)" fg:x="70" fg:w="1"/>
      <text x="32.5081%" y="367.50"/>
    </g>
    <g>
      <title>__GI___libc_write (1 samples, 0.46%)</title>
      <rect x="32.2581%" y="341" width="0.4608%" height="15" fill="rgb(232,197,30)" fg:x="70" fg:w="1"/>
      <text x="32.5081%" y="351.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64 (1 samples, 0.46%)</title>
      <rect x="32.2581%" y="325" width="0.4608%" height="15" fill="rgb(234,224,53)" fg:x="70" fg:w="1"/>
      <text x="32.5081%" y="335.50"/>
    </g>
    <g>
      <title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::flush (17 samples, 7.83%)</title>
      <rect x="25.8065%" y="421" width="7.8341%" height="15" fill="rgb(244,108,51)" fg:x="56" fg:w="17"/>
      <text x="26.0565%" y="431.50">&lt;std::io::s..</text>
    </g>
    <g>
      <title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::flush (17 samples, 7.83%)</title>
      <rect x="25.8065%" y="405" width="7.8341%" height="15" fill="rgb(224,207,51)" fg:x="56" fg:w="17"/>
      <text x="26.0565%" y="415.50">&lt;&amp;std::io::..</text>
    </g>
    <g>
      <title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (17 samples, 7.83%)</title>
      <rect x="25.8065%" y="389" width="7.8341%" height="15" fill="rgb(240,178,54)" fg:x="56" fg:w="17"/>
      <text x="26.0565%" y="399.50">std::io::bu..</text>
    </g>
    <g>
      <title>__GI___libc_write (17 samples, 7.83%)</title>
      <rect x="25.8065%" y="373" width="7.8341%" height="15" fill="rgb(232,197,30)" fg:x="56" fg:w="17"/>
      <text x="26.0565%" y="383.50">__GI___libc..</text>
    </g>
    <g>
      <title>s4lib::printer::printers::PrinterLogMessage::print_journalentry_color (32 samples, 14.75%)</title>
      <rect x="19.3548%" y="437" width="14.7465%" height="15" fill="rgb(248,209,52)" fg:x="42" fg:w="32"/>
      <text x="19.6048%" y="447.50">s4lib::printer::printe..</text>
    </g>
    <g>
      <title>_dl_relocate_object (1 samples, 0.46%)</title>
      <rect x="34.1014%" y="245" width="0.4608%" height="15" fill="rgb(244,75,35)" fg:x="74" fg:w="1"/>
      <text x="34.3514%" y="255.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="229" width="0.4608%" height="15" fill="rgb(238,71,42)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="239.50"/>
    </g>
    <g>
      <title>openaux (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="213" width="0.4608%" height="15" fill="rgb(215,55,1)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="223.50"/>
    </g>
    <g>
      <title>_dl_map_object (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="197" width="0.4608%" height="15" fill="rgb(247,77,9)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="207.50"/>
    </g>
    <g>
      <title>_dl_map_object_from_fd (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="181" width="0.4608%" height="15" fill="rgb(253,121,32)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="191.50"/>
    </g>
    <g>
      <title>mmap64 (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="165" width="0.4608%" height="15" fill="rgb(246,213,14)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="175.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="149" width="0.4608%" height="15" fill="rgb(205,226,15)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="159.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="133" width="0.4608%" height="15" fill="rgb(220,74,14)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="143.50"/>
    </g>
    <g>
      <title>ksys_mmap_pgoff (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="117" width="0.4608%" height="15" fill="rgb(248,1,16)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="127.50"/>
    </g>
    <g>
      <title>vm_mmap_pgoff (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="101" width="0.4608%" height="15" fill="rgb(226,196,1)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="111.50"/>
    </g>
    <g>
      <title>do_mmap (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="85" width="0.4608%" height="15" fill="rgb(228,25,27)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="95.50"/>
    </g>
    <g>
      <title>mmap_region (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="69" width="0.4608%" height="15" fill="rgb(233,57,38)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="79.50"/>
    </g>
    <g>
      <title>perf_event_mmap (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="53" width="0.4608%" height="15" fill="rgb(252,32,1)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="63.50"/>
    </g>
    <g>
      <title>perf_iterate_ctx (1 samples, 0.46%)</title>
      <rect x="34.5622%" y="37" width="0.4608%" height="15" fill="rgb(227,133,21)" fg:x="75" fg:w="1"/>
      <text x="34.8122%" y="47.50"/>
    </g>
    <g>
      <title>s4lib::libload::systemd_dlopen2::load_library_systemd (3 samples, 1.38%)</title>
      <rect x="34.1014%" y="437" width="1.3825%" height="15" fill="rgb(209,147,6)" fg:x="74" fg:w="3"/>
      <text x="34.3514%" y="447.50"/>
    </g>
    <g>
      <title>dlopen2::raw::common::Library::open (3 samples, 1.38%)</title>
      <rect x="34.1014%" y="421" width="1.3825%" height="15" fill="rgb(215,66,11)" fg:x="74" fg:w="3"/>
      <text x="34.3514%" y="431.50"/>
    </g>
    <g>
      <title>dlopen@GLIBC_2.2.5 (3 samples, 1.38%)</title>
      <rect x="34.1014%" y="405" width="1.3825%" height="15" fill="rgb(248,147,24)" fg:x="74" fg:w="3"/>
      <text x="34.3514%" y="415.50"/>
    </g>
    <g>
      <title>_dlerror_run (3 samples, 1.38%)</title>
      <rect x="34.1014%" y="389" width="1.3825%" height="15" fill="rgb(208,58,37)" fg:x="74" fg:w="3"/>
      <text x="34.3514%" y="399.50"/>
    </g>
    <g>
      <title>_dl_catch_error (3 samples, 1.38%)</title>
      <rect x="34.1014%" y="373" width="1.3825%" height="15" fill="rgb(251,190,30)" fg:x="74" fg:w="3"/>
      <text x="34.3514%" y="383.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (3 samples, 1.38%)</title>
      <rect x="34.1014%" y="357" width="1.3825%" height="15" fill="rgb(238,71,42)" fg:x="74" fg:w="3"/>
      <text x="34.3514%" y="367.50"/>
    </g>
    <g>
      <title>dlopen_doit (3 samples, 1.38%)</title>
      <rect x="34.1014%" y="341" width="1.3825%" height="15" fill="rgb(227,103,25)" fg:x="74" fg:w="3"/>
      <text x="34.3514%" y="351.50"/>
    </g>
    <g>
      <title>_dl_open (3 samples, 1.38%)</title>
      <rect x="34.1014%" y="325" width="1.3825%" height="15" fill="rgb(246,203,24)" fg:x="74" fg:w="3"/>
      <text x="34.3514%" y="335.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (3 samples, 1.38%)</title>
      <rect x="34.1014%" y="309" width="1.3825%" height="15" fill="rgb(238,71,42)" fg:x="74" fg:w="3"/>
      <text x="34.3514%" y="319.50"/>
    </g>
    <g>
      <title>dl_open_worker (3 samples, 1.38%)</title>
      <rect x="34.1014%" y="293" width="1.3825%" height="15" fill="rgb(248,64,50)" fg:x="74" fg:w="3"/>
      <text x="34.3514%" y="303.50"/>
    </g>
    <g>
      <title>_dl_catch_exception (3 samples, 1.38%)</title>
      <rect x="34.1014%" y="277" width="1.3825%" height="15" fill="rgb(238,71,42)" fg:x="74" fg:w="3"/>
      <text x="34.3514%" y="287.50"/>
    </g>
    <g>
      <title>dl_open_worker_begin (3 samples, 1.38%)</title>
      <rect x="34.1014%" y="261" width="1.3825%" height="15" fill="rgb(243,153,31)" fg:x="74" fg:w="3"/>
      <text x="34.3514%" y="271.50"/>
    </g>
    <g>
      <title>_dl_map_object_deps (2 samples, 0.92%)</title>
      <rect x="34.5622%" y="245" width="0.9217%" height="15" fill="rgb(208,68,2)" fg:x="75" fg:w="2"/>
      <text x="34.8122%" y="255.50"/>
    </g>
    <g>
      <title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::start_recv (1 samples, 0.46%)</title>
      <rect x="35.4839%" y="405" width="0.4608%" height="15" fill="rgb(249,64,9)" fg:x="77" fg:w="1"/>
      <text x="35.7339%" y="415.50"/>
    </g>
    <g>
      <title>futex_wait_setup (1 samples, 0.46%)</title>
      <rect x="35.9447%" y="277" width="0.4608%" height="15" fill="rgb(219,66,52)" fg:x="78" fg:w="1"/>
      <text x="36.1947%" y="287.50"/>
    </g>
    <g>
      <title>_raw_spin_lock (1 samples, 0.46%)</title>
      <rect x="35.9447%" y="261" width="0.4608%" height="15" fill="rgb(225,195,37)" fg:x="78" fg:w="1"/>
      <text x="36.1947%" y="271.50"/>
    </g>
    <g>
      <title>syscall (2 samples, 0.92%)</title>
      <rect x="35.9447%" y="373" width="0.9217%" height="15" fill="rgb(207,84,5)" fg:x="78" fg:w="2"/>
      <text x="36.1947%" y="383.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (2 samples, 0.92%)</title>
      <rect x="35.9447%" y="357" width="0.9217%" height="15" fill="rgb(205,226,15)" fg:x="78" fg:w="2"/>
      <text x="36.1947%" y="367.50"/>
    </g>
    <g>
      <title>do_syscall_64 (2 samples, 0.92%)</title>
      <rect x="35.9447%" y="341" width="0.9217%" height="15" fill="rgb(220,74,14)" fg:x="78" fg:w="2"/>
      <text x="36.1947%" y="351.50"/>
    </g>
    <g>
      <title>__x64_sys_futex (2 samples, 0.92%)</title>
      <rect x="35.9447%" y="325" width="0.9217%" height="15" fill="rgb(238,204,33)" fg:x="78" fg:w="2"/>
      <text x="36.1947%" y="335.50"/>
    </g>
    <g>
      <title>do_futex (2 samples, 0.92%)</title>
      <rect x="35.9447%" y="309" width="0.9217%" height="15" fill="rgb(249,126,29)" fg:x="78" fg:w="2"/>
      <text x="36.1947%" y="319.50"/>
    </g>
    <g>
      <title>futex_wait (2 samples, 0.92%)</title>
      <rect x="35.9447%" y="293" width="0.9217%" height="15" fill="rgb(242,80,18)" fg:x="78" fg:w="2"/>
      <text x="36.1947%" y="303.50"/>
    </g>
    <g>
      <title>futex_wait_queue_me (1 samples, 0.46%)</title>
      <rect x="36.4055%" y="277" width="0.4608%" height="15" fill="rgb(227,18,39)" fg:x="79" fg:w="1"/>
      <text x="36.6555%" y="287.50"/>
    </g>
    <g>
      <title>schedule (1 samples, 0.46%)</title>
      <rect x="36.4055%" y="261" width="0.4608%" height="15" fill="rgb(213,215,35)" fg:x="79" fg:w="1"/>
      <text x="36.6555%" y="271.50"/>
    </g>
    <g>
      <title>__schedule (1 samples, 0.46%)</title>
      <rect x="36.4055%" y="245" width="0.4608%" height="15" fill="rgb(207,40,26)" fg:x="79" fg:w="1"/>
      <text x="36.6555%" y="255.50"/>
    </g>
    <g>
      <title>__perf_event_task_sched_out (1 samples, 0.46%)</title>
      <rect x="36.4055%" y="229" width="0.4608%" height="15" fill="rgb(206,30,45)" fg:x="79" fg:w="1"/>
      <text x="36.6555%" y="239.50"/>
    </g>
    <g>
      <title>amd_pmu_disable_all (1 samples, 0.46%)</title>
      <rect x="36.4055%" y="213" width="0.4608%" height="15" fill="rgb(224,0,7)" fg:x="79" fg:w="1"/>
      <text x="36.6555%" y="223.50"/>
    </g>
    <g>
      <title>x86_pmu_disable_all (1 samples, 0.46%)</title>
      <rect x="36.4055%" y="197" width="0.4608%" height="15" fill="rgb(235,111,43)" fg:x="79" fg:w="1"/>
      <text x="36.6555%" y="207.50"/>
    </g>
    <g>
      <title>crossbeam_channel::select::Select::select (4 samples, 1.84%)</title>
      <rect x="35.4839%" y="437" width="1.8433%" height="15" fill="rgb(218,151,27)" fg:x="77" fg:w="4"/>
      <text x="35.7339%" y="447.50">c..</text>
    </g>
    <g>
      <title>crossbeam_channel::select::run_select (4 samples, 1.84%)</title>
      <rect x="35.4839%" y="421" width="1.8433%" height="15" fill="rgb(238,41,29)" fg:x="77" fg:w="4"/>
      <text x="35.7339%" y="431.50">c..</text>
    </g>
    <g>
      <title>crossbeam_channel::context::Context::with::{{closure}} (3 samples, 1.38%)</title>
      <rect x="35.9447%" y="405" width="1.3825%" height="15" fill="rgb(251,136,16)" fg:x="78" fg:w="3"/>
      <text x="36.1947%" y="415.50"/>
    </g>
    <g>
      <title>std::thread::park (3 samples, 1.38%)</title>
      <rect x="35.9447%" y="389" width="1.3825%" height="15" fill="rgb(253,209,8)" fg:x="78" fg:w="3"/>
      <text x="36.1947%" y="399.50"/>
    </g>
    <g>
      <title>std::sys_common::thread_info::current_thread (1 samples, 0.46%)</title>
      <rect x="36.8664%" y="373" width="0.4608%" height="15" fill="rgb(214,32,19)" fg:x="80" fg:w="1"/>
      <text x="37.1164%" y="383.50"/>
    </g>
    <g>
      <title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::remove (2 samples, 0.92%)</title>
      <rect x="37.3272%" y="437" width="0.9217%" height="15" fill="rgb(224,108,5)" fg:x="81" fg:w="2"/>
      <text x="37.5772%" y="447.50"/>
    </g>
    <g>
      <title>alloc::collections::btree::map::entry::OccupiedEntry&lt;K,V,A&gt;::remove_kv (2 samples, 0.92%)</title>
      <rect x="37.3272%" y="421" width="0.9217%" height="15" fill="rgb(211,181,27)" fg:x="81" fg:w="2"/>
      <text x="37.5772%" y="431.50"/>
    </g>
    <g>
      <title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_kv_tracking (2 samples, 0.92%)</title>
      <rect x="37.3272%" y="405" width="0.9217%" height="15" fill="rgb(223,155,52)" fg:x="81" fg:w="2"/>
      <text x="37.5772%" y="415.50"/>
    </g>
    <g>
      <title>alloc::collections::btree::remove::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::remove_leaf_kv (2 samples, 0.92%)</title>
      <rect x="37.3272%" y="389" width="0.9217%" height="15" fill="rgb(212,166,45)" fg:x="81" fg:w="2"/>
      <text x="37.5772%" y="399.50"/>
    </g>
    <g>
      <title>__rdl_dealloc (1 samples, 0.46%)</title>
      <rect x="38.2488%" y="437" width="0.4608%" height="15" fill="rgb(243,203,32)" fg:x="83" fg:w="1"/>
      <text x="38.4988%" y="447.50"/>
    </g>
    <g>
      <title>s4::processing_loop (43 samples, 19.82%)</title>
      <rect x="19.3548%" y="453" width="19.8157%" height="15" fill="rgb(233,182,14)" fg:x="42" fg:w="43"/>
      <text x="19.6048%" y="463.50">s4::processing_loop</text>
    </g>
    <g>
      <title>clap_builder::builder::command::Command::get_matches_from (1 samples, 0.46%)</title>
      <rect x="39.1705%" y="437" width="0.4608%" height="15" fill="rgb(236,115,49)" fg:x="85" fg:w="1"/>
      <text x="39.4205%" y="447.50"/>
    </g>
    <g>
      <title>core::ptr::drop_in_place&lt;clap_builder::builder::command::Command&gt; (1 samples, 0.46%)</title>
      <rect x="39.1705%" y="421" width="0.4608%" height="15" fill="rgb(241,171,24)" fg:x="85" fg:w="1"/>
      <text x="39.4205%" y="431.50"/>
    </g>
    <g>
      <title>cfree@GLIBC_2.2.5 (1 samples, 0.46%)</title>
      <rect x="39.1705%" y="405" width="0.4608%" height="15" fill="rgb(240,159,37)" fg:x="85" fg:w="1"/>
      <text x="39.4205%" y="415.50"/>
    </g>
    <g>
      <title>_int_free (1 samples, 0.46%)</title>
      <rect x="39.1705%" y="389" width="0.4608%" height="15" fill="rgb(221,113,48)" fg:x="85" fg:w="1"/>
      <text x="39.4205%" y="399.50"/>
    </g>
    <g>
      <title>std::rt::lang_start::_{{closure}} (45 samples, 20.74%)</title>
      <rect x="19.3548%" y="501" width="20.7373%" height="15" fill="rgb(225,45,7)" fg:x="42" fg:w="45"/>
      <text x="19.6048%" y="511.50">std::rt::lang_start::_{{closure}}</text>
    </g>
    <g>
      <title>std::sys_common::backtrace::__rust_begin_short_backtrace (45 samples, 20.74%)</title>
      <rect x="19.3548%" y="485" width="20.7373%" height="15" fill="rgb(210,88,34)" fg:x="42" fg:w="45"/>
      <text x="19.6048%" y="495.50">std::sys_common::backtrace::__rus..</text>
    </g>
    <g>
      <title>s4::main (45 samples, 20.74%)</title>
      <rect x="19.3548%" y="469" width="20.7373%" height="15" fill="rgb(221,151,31)" fg:x="42" fg:w="45"/>
      <text x="19.6048%" y="479.50">s4::main</text>
    </g>
    <g>
      <title>s4::cli_process_args (2 samples, 0.92%)</title>
      <rect x="39.1705%" y="453" width="0.9217%" height="15" fill="rgb(217,50,44)" fg:x="85" fg:w="2"/>
      <text x="39.4205%" y="463.50"/>
    </g>
    <g>
      <title>&lt;s4::CLI_Args as clap_builder::derive::Args&gt;::augment_args (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="437" width="0.4608%" height="15" fill="rgb(230,145,47)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="447.50"/>
    </g>
    <g>
      <title>once_cell::imp::OnceCell&lt;T&gt;::initialize (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="421" width="0.4608%" height="15" fill="rgb(216,218,52)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="431.50"/>
    </g>
    <g>
      <title>once_cell::imp::initialize_or_wait (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="405" width="0.4608%" height="15" fill="rgb(247,128,5)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="415.50"/>
    </g>
    <g>
      <title>once_cell::imp::OnceCell&lt;T&gt;::initialize::_{{closure}} (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="389" width="0.4608%" height="15" fill="rgb(247,216,6)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="399.50"/>
    </g>
    <g>
      <title>core::ops::function::FnOnce::call_once (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="373" width="0.4608%" height="15" fill="rgb(210,80,10)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="383.50"/>
    </g>
    <g>
      <title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="357" width="0.4608%" height="15" fill="rgb(207,166,7)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="367.50"/>
    </g>
    <g>
      <title>std::sys::common::thread_local::fast_local::Key&lt;T&gt;::try_initialize (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="341" width="0.4608%" height="15" fill="rgb(207,166,7)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="351.50"/>
    </g>
    <g>
      <title>&lt;chrono::offset::local::Local as chrono::offset::TimeZone&gt;::offset_from_utc_datetime (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="325" width="0.4608%" height="15" fill="rgb(250,102,39)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="335.50"/>
    </g>
    <g>
      <title>chrono::offset::local::inner::offset (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="309" width="0.4608%" height="15" fill="rgb(209,2,12)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="319.50"/>
    </g>
    <g>
      <title>&lt;chrono::offset::local::inner::Cache as core::default::Default&gt;::default (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="293" width="0.4608%" height="15" fill="rgb(206,98,42)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="303.50"/>
    </g>
    <g>
      <title>chrono::offset::local::inner::current_zone (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="277" width="0.4608%" height="15" fill="rgb(249,132,40)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="287.50"/>
    </g>
    <g>
      <title>chrono::offset::local::tz_info::timezone::TimeZone::from_posix_tz (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="261" width="0.4608%" height="15" fill="rgb(223,0,42)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="271.50"/>
    </g>
    <g>
      <title>std::fs::read::inner (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="245" width="0.4608%" height="15" fill="rgb(209,156,5)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="255.50"/>
    </g>
    <g>
      <title>std::io::default_read_to_end (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="229" width="0.4608%" height="15" fill="rgb(213,103,49)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="239.50"/>
    </g>
    <g>
      <title>read (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="213" width="0.4608%" height="15" fill="rgb(209,69,29)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="223.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="197" width="0.4608%" height="15" fill="rgb(205,226,15)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="207.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="181" width="0.4608%" height="15" fill="rgb(220,74,14)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="191.50"/>
    </g>
    <g>
      <title>ksys_read (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="165" width="0.4608%" height="15" fill="rgb(233,96,2)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="175.50"/>
    </g>
    <g>
      <title>vfs_read (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="149" width="0.4608%" height="15" fill="rgb(232,76,33)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="159.50"/>
    </g>
    <g>
      <title>new_sync_read (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="133" width="0.4608%" height="15" fill="rgb(207,29,15)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="143.50"/>
    </g>
    <g>
      <title>filemap_read (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="117" width="0.4608%" height="15" fill="rgb(214,68,38)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="127.50"/>
    </g>
    <g>
      <title>copy_page_to_iter (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="101" width="0.4608%" height="15" fill="rgb(229,55,41)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="111.50"/>
    </g>
    <g>
      <title>copy_user_enhanced_fast_string (1 samples, 0.46%)</title>
      <rect x="39.6313%" y="85" width="0.4608%" height="15" fill="rgb(254,4,9)" fg:x="86" fg:w="1"/>
      <text x="39.8813%" y="95.50"/>
    </g>
    <g>
      <title>_start (53 samples, 24.42%)</title>
      <rect x="16.1290%" y="581" width="24.4240%" height="15" fill="rgb(210,219,27)" fg:x="35" fg:w="53"/>
      <text x="16.3790%" y="591.50">_start</text>
    </g>
    <g>
      <title>__libc_start_main@@GLIBC_2.34 (47 samples, 21.66%)</title>
      <rect x="18.8940%" y="565" width="21.6590%" height="15" fill="rgb(217,176,50)" fg:x="41" fg:w="47"/>
      <text x="19.1440%" y="575.50">__libc_start_main@@GLIBC_2.34</text>
    </g>
    <g>
      <title>__libc_start_call_main (47 samples, 21.66%)</title>
      <rect x="18.8940%" y="549" width="21.6590%" height="15" fill="rgb(249,173,1)" fg:x="41" fg:w="47"/>
      <text x="19.1440%" y="559.50">__libc_start_call_main</text>
    </g>
    <g>
      <title>main (47 samples, 21.66%)</title>
      <rect x="18.8940%" y="533" width="21.6590%" height="15" fill="rgb(238,28,47)" fg:x="41" fg:w="47"/>
      <text x="19.1440%" y="543.50">main</text>
    </g>
    <g>
      <title>std::rt::lang_start_internal (47 samples, 21.66%)</title>
      <rect x="18.8940%" y="517" width="21.6590%" height="15" fill="rgb(240,177,54)" fg:x="41" fg:w="47"/>
      <text x="19.1440%" y="527.50">std::rt::lang_start_internal</text>
    </g>
    <g>
      <title>pthread_getattr_np@@GLIBC_2.32 (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="501" width="0.4608%" height="15" fill="rgb(219,192,28)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="511.50"/>
    </g>
    <g>
      <title>__getdelim (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="485" width="0.4608%" height="15" fill="rgb(216,153,9)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="495.50"/>
    </g>
    <g>
      <title>_IO_file_underflow@@GLIBC_2.2.5 (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="469" width="0.4608%" height="15" fill="rgb(208,164,16)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="479.50"/>
    </g>
    <g>
      <title>__read_nocancel (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="453" width="0.4608%" height="15" fill="rgb(249,111,7)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="463.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="437" width="0.4608%" height="15" fill="rgb(205,226,15)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="447.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="421" width="0.4608%" height="15" fill="rgb(220,74,14)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="431.50"/>
    </g>
    <g>
      <title>ksys_read (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="405" width="0.4608%" height="15" fill="rgb(233,96,2)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="415.50"/>
    </g>
    <g>
      <title>vfs_read (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="389" width="0.4608%" height="15" fill="rgb(232,76,33)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="399.50"/>
    </g>
    <g>
      <title>seq_read (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="373" width="0.4608%" height="15" fill="rgb(230,146,54)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="383.50"/>
    </g>
    <g>
      <title>seq_read_iter (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="357" width="0.4608%" height="15" fill="rgb(230,110,51)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="367.50"/>
    </g>
    <g>
      <title>show_map (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="341" width="0.4608%" height="15" fill="rgb(234,116,41)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="351.50"/>
    </g>
    <g>
      <title>show_map_vma (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="325" width="0.4608%" height="15" fill="rgb(237,17,11)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="335.50"/>
    </g>
    <g>
      <title>seq_path (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="309" width="0.4608%" height="15" fill="rgb(212,173,8)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="319.50"/>
    </g>
    <g>
      <title>mangle_path (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="293" width="0.4608%" height="15" fill="rgb(234,54,32)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="303.50"/>
    </g>
    <g>
      <title>strchr (1 samples, 0.46%)</title>
      <rect x="40.0922%" y="277" width="0.4608%" height="15" fill="rgb(222,54,47)" fg:x="87" fg:w="1"/>
      <text x="40.3422%" y="287.50"/>
    </g>
    <g>
      <title>[unknown] (1 samples, 0.46%)</title>
      <rect x="40.5530%" y="581" width="0.4608%" height="15" fill="rgb(227,28,50)" fg:x="88" fg:w="1"/>
      <text x="40.8030%" y="591.50"/>
    </g>
    <g>
      <title>__GI___libc_write (1 samples, 0.46%)</title>
      <rect x="40.5530%" y="565" width="0.4608%" height="15" fill="rgb(232,197,30)" fg:x="88" fg:w="1"/>
      <text x="40.8030%" y="575.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64 (1 samples, 0.46%)</title>
      <rect x="40.5530%" y="549" width="0.4608%" height="15" fill="rgb(234,224,53)" fg:x="88" fg:w="1"/>
      <text x="40.8030%" y="559.50"/>
    </g>
    <g>
      <title>s4 (90 samples, 41.47%)</title>
      <rect x="0.0000%" y="597" width="41.4747%" height="15" fill="rgb(230,7,27)" fg:x="0" fg:w="90"/>
      <text x="0.2500%" y="607.50">s4</text>
    </g>
    <g>
      <title>[[heap]] (1 samples, 0.46%)</title>
      <rect x="41.0138%" y="581" width="0.4608%" height="15" fill="rgb(221,205,47)" fg:x="89" fg:w="1"/>
      <text x="41.2638%" y="591.50"/>
    </g>
    <g>
      <title>__GI___libc_write (1 samples, 0.46%)</title>
      <rect x="41.0138%" y="565" width="0.4608%" height="15" fill="rgb(232,197,30)" fg:x="89" fg:w="1"/>
      <text x="41.2638%" y="575.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64 (1 samples, 0.46%)</title>
      <rect x="41.0138%" y="549" width="0.4608%" height="15" fill="rgb(234,224,53)" fg:x="89" fg:w="1"/>
      <text x="41.2638%" y="559.50"/>
    </g>
    <g>
      <title>perf-exec (14 samples, 6.45%)</title>
      <rect x="41.4747%" y="597" width="6.4516%" height="15" fill="rgb(250,111,27)" fg:x="90" fg:w="14"/>
      <text x="41.7247%" y="607.50">perf-exec</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (14 samples, 6.45%)</title>
      <rect x="41.4747%" y="581" width="6.4516%" height="15" fill="rgb(205,226,15)" fg:x="90" fg:w="14"/>
      <text x="41.7247%" y="591.50">entry_SY..</text>
    </g>
    <g>
      <title>do_syscall_64 (14 samples, 6.45%)</title>
      <rect x="41.4747%" y="565" width="6.4516%" height="15" fill="rgb(220,74,14)" fg:x="90" fg:w="14"/>
      <text x="41.7247%" y="575.50">do_sysca..</text>
    </g>
    <g>
      <title>__x64_sys_execve (14 samples, 6.45%)</title>
      <rect x="41.4747%" y="549" width="6.4516%" height="15" fill="rgb(237,59,15)" fg:x="90" fg:w="14"/>
      <text x="41.7247%" y="559.50">__x64_sy..</text>
    </g>
    <g>
      <title>do_execveat_common.isra.0 (14 samples, 6.45%)</title>
      <rect x="41.4747%" y="533" width="6.4516%" height="15" fill="rgb(248,134,53)" fg:x="90" fg:w="14"/>
      <text x="41.7247%" y="543.50">do_execv..</text>
    </g>
    <g>
      <title>bprm_execve (14 samples, 6.45%)</title>
      <rect x="41.4747%" y="517" width="6.4516%" height="15" fill="rgb(232,147,16)" fg:x="90" fg:w="14"/>
      <text x="41.7247%" y="527.50">bprm_exe..</text>
    </g>
    <g>
      <title>load_elf_binary (14 samples, 6.45%)</title>
      <rect x="41.4747%" y="501" width="6.4516%" height="15" fill="rgb(246,102,21)" fg:x="90" fg:w="14"/>
      <text x="41.7247%" y="511.50">load_elf..</text>
    </g>
    <g>
      <title>begin_new_exec (14 samples, 6.45%)</title>
      <rect x="41.4747%" y="485" width="6.4516%" height="15" fill="rgb(219,195,31)" fg:x="90" fg:w="14"/>
      <text x="41.7247%" y="495.50">begin_ne..</text>
    </g>
    <g>
      <title>perf_event_exec (14 samples, 6.45%)</title>
      <rect x="41.4747%" y="469" width="6.4516%" height="15" fill="rgb(225,89,21)" fg:x="90" fg:w="14"/>
      <text x="41.7247%" y="479.50">perf_eve..</text>
    </g>
    <g>
      <title>ctrl-c (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="597" width="0.4608%" height="15" fill="rgb(217,0,15)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="607.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="581" width="0.4608%" height="15" fill="rgb(205,226,15)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="591.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="565" width="0.4608%" height="15" fill="rgb(220,74,14)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="575.50"/>
    </g>
    <g>
      <title>syscall_exit_to_user_mode (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="549" width="0.4608%" height="15" fill="rgb(215,101,28)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="559.50"/>
    </g>
    <g>
      <title>exit_to_user_mode_prepare (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="533" width="0.4608%" height="15" fill="rgb(240,77,26)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="543.50"/>
    </g>
    <g>
      <title>arch_do_signal_or_restart (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="517" width="0.4608%" height="15" fill="rgb(236,153,36)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="527.50"/>
    </g>
    <g>
      <title>get_signal (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="501" width="0.4608%" height="15" fill="rgb(219,222,19)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="511.50"/>
    </g>
    <g>
      <title>do_group_exit (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="485" width="0.4608%" height="15" fill="rgb(241,5,8)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="495.50"/>
    </g>
    <g>
      <title>do_exit (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="469" width="0.4608%" height="15" fill="rgb(238,144,25)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="479.50"/>
    </g>
    <g>
      <title>acct_process (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="453" width="0.4608%" height="15" fill="rgb(244,20,44)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="463.50"/>
    </g>
    <g>
      <title>do_acct_process (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="437" width="0.4608%" height="15" fill="rgb(208,39,41)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="447.50"/>
    </g>
    <g>
      <title>__kernel_write (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="421" width="0.4608%" height="15" fill="rgb(230,121,9)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="431.50"/>
    </g>
    <g>
      <title>ext4_buffered_write_iter (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="405" width="0.4608%" height="15" fill="rgb(214,47,26)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="415.50"/>
    </g>
    <g>
      <title>file_update_time (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="389" width="0.4608%" height="15" fill="rgb(237,12,27)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="399.50"/>
    </g>
    <g>
      <title>generic_update_time (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="373" width="0.4608%" height="15" fill="rgb(212,0,0)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="383.50"/>
    </g>
    <g>
      <title>__mark_inode_dirty (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="357" width="0.4608%" height="15" fill="rgb(212,91,54)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="367.50"/>
    </g>
    <g>
      <title>ext4_dirty_inode (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="341" width="0.4608%" height="15" fill="rgb(235,194,15)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="351.50"/>
    </g>
    <g>
      <title>__ext4_journal_start_sb (1 samples, 0.46%)</title>
      <rect x="47.9263%" y="325" width="0.4608%" height="15" fill="rgb(251,66,45)" fg:x="104" fg:w="1"/>
      <text x="48.1763%" y="335.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (2 samples, 0.92%)</title>
      <rect x="48.3871%" y="405" width="0.9217%" height="15" fill="rgb(211,164,11)" fg:x="105" fg:w="2"/>
      <text x="48.6371%" y="415.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (5 samples, 2.30%)</title>
      <rect x="48.3871%" y="421" width="2.3041%" height="15" fill="rgb(211,164,11)" fg:x="105" fg:w="5"/>
      <text x="48.6371%" y="431.50">[..</text>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (12 samples, 5.53%)</title>
      <rect x="48.3871%" y="437" width="5.5300%" height="15" fill="rgb(211,164,11)" fg:x="105" fg:w="12"/>
      <text x="48.6371%" y="447.50">[libsys..</text>
    </g>
    <g>
      <title>sd_journal_enumerate_available_data (13 samples, 5.99%)</title>
      <rect x="48.3871%" y="469" width="5.9908%" height="15" fill="rgb(233,38,20)" fg:x="105" fg:w="13"/>
      <text x="48.6371%" y="479.50">sd_journ..</text>
    </g>
    <g>
      <title>sd_journal_enumerate_data (13 samples, 5.99%)</title>
      <rect x="48.3871%" y="453" width="5.9908%" height="15" fill="rgb(253,48,41)" fg:x="105" fg:w="13"/>
      <text x="48.6371%" y="463.50">sd_journ..</text>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.46%)</title>
      <rect x="54.3779%" y="437" width="0.4608%" height="15" fill="rgb(208,26,13)" fg:x="118" fg:w="1"/>
      <text x="54.6279%" y="447.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.46%)</title>
      <rect x="54.3779%" y="421" width="0.4608%" height="15" fill="rgb(216,51,29)" fg:x="118" fg:w="1"/>
      <text x="54.6279%" y="431.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.46%)</title>
      <rect x="54.3779%" y="405" width="0.4608%" height="15" fill="rgb(253,37,52)" fg:x="118" fg:w="1"/>
      <text x="54.6279%" y="415.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.46%)</title>
      <rect x="54.3779%" y="389" width="0.4608%" height="15" fill="rgb(247,31,49)" fg:x="118" fg:w="1"/>
      <text x="54.6279%" y="399.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.46%)</title>
      <rect x="54.3779%" y="373" width="0.4608%" height="15" fill="rgb(254,123,40)" fg:x="118" fg:w="1"/>
      <text x="54.6279%" y="383.50"/>
    </g>
    <g>
      <title>filemap_map_pages (1 samples, 0.46%)</title>
      <rect x="54.3779%" y="357" width="0.4608%" height="15" fill="rgb(240,96,12)" fg:x="118" fg:w="1"/>
      <text x="54.6279%" y="367.50"/>
    </g>
    <g>
      <title>next_uptodate_page (1 samples, 0.46%)</title>
      <rect x="54.3779%" y="341" width="0.4608%" height="15" fill="rgb(231,221,15)" fg:x="118" fg:w="1"/>
      <text x="54.6279%" y="351.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (5 samples, 2.30%)</title>
      <rect x="54.8387%" y="421" width="2.3041%" height="15" fill="rgb(211,164,11)" fg:x="119" fg:w="5"/>
      <text x="55.0887%" y="431.50">[..</text>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (5 samples, 2.30%)</title>
      <rect x="54.8387%" y="405" width="2.3041%" height="15" fill="rgb(211,164,11)" fg:x="119" fg:w="5"/>
      <text x="55.0887%" y="415.50">[..</text>
    </g>
    <g>
      <title>sd_journal_get_data (7 samples, 3.23%)</title>
      <rect x="54.3779%" y="453" width="3.2258%" height="15" fill="rgb(223,156,7)" fg:x="118" fg:w="7"/>
      <text x="54.6279%" y="463.50">sd_..</text>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (6 samples, 2.76%)</title>
      <rect x="54.8387%" y="437" width="2.7650%" height="15" fill="rgb(211,164,11)" fg:x="119" fg:w="6"/>
      <text x="55.0887%" y="447.50">[l..</text>
    </g>
    <g>
      <title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (1 samples, 0.46%)</title>
      <rect x="57.6037%" y="405" width="0.4608%" height="15" fill="rgb(247,117,39)" fg:x="125" fg:w="1"/>
      <text x="57.8537%" y="415.50"/>
    </g>
    <g>
      <title>core::fmt::Formatter::pad_integral (1 samples, 0.46%)</title>
      <rect x="57.6037%" y="389" width="0.4608%" height="15" fill="rgb(249,31,39)" fg:x="125" fg:w="1"/>
      <text x="57.8537%" y="399.50"/>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::Error_from_Errno (3 samples, 1.38%)</title>
      <rect x="57.6037%" y="453" width="1.3825%" height="15" fill="rgb(229,197,29)" fg:x="125" fg:w="3"/>
      <text x="57.8537%" y="463.50"/>
    </g>
    <g>
      <title>alloc::fmt::format::format_inner (3 samples, 1.38%)</title>
      <rect x="57.6037%" y="437" width="1.3825%" height="15" fill="rgb(225,219,39)" fg:x="125" fg:w="3"/>
      <text x="57.8537%" y="447.50"/>
    </g>
    <g>
      <title>core::fmt::write (3 samples, 1.38%)</title>
      <rect x="57.6037%" y="421" width="1.3825%" height="15" fill="rgb(248,210,20)" fg:x="125" fg:w="3"/>
      <text x="57.8537%" y="431.50"/>
    </g>
    <g>
      <title>&lt;str as core::fmt::Debug&gt;::fmt (2 samples, 0.92%)</title>
      <rect x="58.0645%" y="405" width="0.9217%" height="15" fill="rgb(215,221,20)" fg:x="126" fg:w="2"/>
      <text x="58.3145%" y="415.50"/>
    </g>
    <g>
      <title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (2 samples, 0.92%)</title>
      <rect x="58.0645%" y="389" width="0.9217%" height="15" fill="rgb(208,192,15)" fg:x="126" fg:w="2"/>
      <text x="58.3145%" y="399.50"/>
    </g>
    <g>
      <title>core::unicode::unicode_data::grapheme_extend::lookup (2 samples, 0.92%)</title>
      <rect x="58.0645%" y="373" width="0.9217%" height="15" fill="rgb(252,148,43)" fg:x="126" fg:w="2"/>
      <text x="58.3145%" y="383.50"/>
    </g>
    <g>
      <title>memchr::arch::x86_64::memchr::memchr_raw::find_avx2 (1 samples, 0.46%)</title>
      <rect x="58.9862%" y="453" width="0.4608%" height="15" fill="rgb(242,174,18)" fg:x="128" fg:w="1"/>
      <text x="59.2362%" y="463.50"/>
    </g>
    <g>
      <title>memchr::arch::x86_64::avx2::memchr::One::find_raw (1 samples, 0.46%)</title>
      <rect x="58.9862%" y="437" width="0.4608%" height="15" fill="rgb(232,209,29)" fg:x="128" fg:w="1"/>
      <text x="59.2362%" y="447.50"/>
    </g>
    <g>
      <title>memchr::arch::x86_64::avx2::memchr::One::find_raw_avx2 (1 samples, 0.46%)</title>
      <rect x="58.9862%" y="421" width="0.4608%" height="15" fill="rgb(221,60,13)" fg:x="128" fg:w="1"/>
      <text x="59.2362%" y="431.50"/>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::next_common (13 samples, 5.99%)</title>
      <rect x="54.3779%" y="469" width="5.9908%" height="15" fill="rgb(253,190,43)" fg:x="118" fg:w="13"/>
      <text x="54.6279%" y="479.50">s4lib::r..</text>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (2 samples, 0.92%)</title>
      <rect x="59.4470%" y="453" width="0.9217%" height="15" fill="rgb(211,164,11)" fg:x="129" fg:w="2"/>
      <text x="59.6970%" y="463.50"/>
    </g>
    <g>
      <title>[libsystemd.so.0.32.0] (2 samples, 0.92%)</title>
      <rect x="59.4470%" y="437" width="0.9217%" height="15" fill="rgb(211,164,11)" fg:x="129" fg:w="2"/>
      <text x="59.6970%" y="447.50"/>
    </g>
    <g>
      <title>memchr::arch::x86_64::avx2::memchr::One::find_raw_avx2 (2 samples, 0.92%)</title>
      <rect x="60.3687%" y="437" width="0.9217%" height="15" fill="rgb(221,60,13)" fg:x="131" fg:w="2"/>
      <text x="60.6187%" y="447.50"/>
    </g>
    <g>
      <title>memchr::arch::x86_64::memchr::memchr_raw::find_avx2 (4 samples, 1.84%)</title>
      <rect x="60.3687%" y="469" width="1.8433%" height="15" fill="rgb(242,174,18)" fg:x="131" fg:w="4"/>
      <text x="60.6187%" y="479.50">m..</text>
    </g>
    <g>
      <title>memchr::arch::x86_64::avx2::memchr::One::find_raw (4 samples, 1.84%)</title>
      <rect x="60.3687%" y="453" width="1.8433%" height="15" fill="rgb(232,209,29)" fg:x="131" fg:w="4"/>
      <text x="60.6187%" y="463.50">m..</text>
    </g>
    <g>
      <title>_int_malloc (1 samples, 0.46%)</title>
      <rect x="62.2120%" y="453" width="0.4608%" height="15" fill="rgb(222,219,51)" fg:x="135" fg:w="1"/>
      <text x="62.4620%" y="463.50"/>
    </g>
    <g>
      <title>malloc (2 samples, 0.92%)</title>
      <rect x="62.2120%" y="469" width="0.9217%" height="15" fill="rgb(250,195,53)" fg:x="135" fg:w="2"/>
      <text x="62.4620%" y="479.50"/>
    </g>
    <g>
      <title>__lll_lock_wake_private (1 samples, 0.46%)</title>
      <rect x="62.6728%" y="453" width="0.4608%" height="15" fill="rgb(224,56,33)" fg:x="136" fg:w="1"/>
      <text x="62.9228%" y="463.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title>
      <rect x="62.6728%" y="437" width="0.4608%" height="15" fill="rgb(205,226,15)" fg:x="136" fg:w="1"/>
      <text x="62.9228%" y="447.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.46%)</title>
      <rect x="62.6728%" y="421" width="0.4608%" height="15" fill="rgb(220,74,14)" fg:x="136" fg:w="1"/>
      <text x="62.9228%" y="431.50"/>
    </g>
    <g>
      <title>__x64_sys_futex (1 samples, 0.46%)</title>
      <rect x="62.6728%" y="405" width="0.4608%" height="15" fill="rgb(238,204,33)" fg:x="136" fg:w="1"/>
      <text x="62.9228%" y="415.50"/>
    </g>
    <g>
      <title>do_futex (1 samples, 0.46%)</title>
      <rect x="62.6728%" y="389" width="0.4608%" height="15" fill="rgb(249,126,29)" fg:x="136" fg:w="1"/>
      <text x="62.9228%" y="399.50"/>
    </g>
    <g>
      <title>futex_wake (1 samples, 0.46%)</title>
      <rect x="62.6728%" y="373" width="0.4608%" height="15" fill="rgb(247,80,14)" fg:x="136" fg:w="1"/>
      <text x="62.9228%" y="383.50"/>
    </g>
    <g>
      <title>hash_futex (1 samples, 0.46%)</title>
      <rect x="62.6728%" y="357" width="0.4608%" height="15" fill="rgb(247,37,43)" fg:x="136" fg:w="1"/>
      <text x="62.9228%" y="367.50"/>
    </g>
    <g>
      <title>s4lib::readers::journalreader::JournalReader::next_short (36 samples, 16.59%)</title>
      <rect x="48.3871%" y="485" width="16.5899%" height="15" fill="rgb(239,51,26)" fg:x="105" fg:w="36"/>
      <text x="48.6371%" y="495.50">s4lib::readers::journalrea..</text>
    </g>
    <g>
      <title>&lt;chrono::format::formatting::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (4 samples, 1.84%)</title>
      <rect x="63.1336%" y="469" width="1.8433%" height="15" fill="rgb(231,60,11)" fg:x="137" fg:w="4"/>
      <text x="63.3836%" y="479.50">&lt;..</text>
    </g>
    <g>
      <title>chrono::format::formatting::DelayedFormat&lt;I&gt;::write_to (4 samples, 1.84%)</title>
      <rect x="63.1336%" y="453" width="1.8433%" height="15" fill="rgb(223,78,1)" fg:x="137" fg:w="4"/>
      <text x="63.3836%" y="463.50">c..</text>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (2 samples, 0.92%)</title>
      <rect x="64.9770%" y="453" width="0.9217%" height="15" fill="rgb(217,126,36)" fg:x="141" fg:w="2"/>
      <text x="65.2270%" y="463.50"/>
    </g>
    <g>
      <title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::send (5 samples, 2.30%)</title>
      <rect x="64.9770%" y="469" width="2.3041%" height="15" fill="rgb(239,129,18)" fg:x="141" fg:w="5"/>
      <text x="65.2270%" y="479.50">c..</text>
    </g>
    <g>
      <title>crossbeam_channel::channel::Sender&lt;T&gt;::send (6 samples, 2.76%)</title>
      <rect x="64.9770%" y="485" width="2.7650%" height="15" fill="rgb(211,156,23)" fg:x="141" fg:w="6"/>
      <text x="65.2270%" y="495.50">cr..</text>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (1 samples, 0.46%)</title>
      <rect x="67.2811%" y="469" width="0.4608%" height="15" fill="rgb(217,126,36)" fg:x="146" fg:w="1"/>
      <text x="67.5311%" y="479.50"/>
    </g>
    <g>
      <title>clone3 (43 samples, 19.82%)</title>
      <rect x="48.3871%" y="581" width="19.8157%" height="15" fill="rgb(208,138,34)" fg:x="105" fg:w="43"/>
      <text x="48.6371%" y="591.50">clone3</text>
    </g>
    <g>
      <title>start_thread (43 samples, 19.82%)</title>
      <rect x="48.3871%" y="565" width="19.8157%" height="15" fill="rgb(209,148,13)" fg:x="105" fg:w="43"/>
      <text x="48.6371%" y="575.50">start_thread</text>
    </g>
    <g>
      <title>std::sys::unix::thread::Thread::new::thread_start (43 samples, 19.82%)</title>
      <rect x="48.3871%" y="549" width="19.8157%" height="15" fill="rgb(215,36,0)" fg:x="105" fg:w="43"/>
      <text x="48.6371%" y="559.50">std::sys::unix::thread::Thread:..</text>
    </g>
    <g>
      <title>core::ops::function::FnOnce::call_once{{vtable.shim}} (43 samples, 19.82%)</title>
      <rect x="48.3871%" y="533" width="19.8157%" height="15" fill="rgb(218,104,40)" fg:x="105" fg:w="43"/>
      <text x="48.6371%" y="543.50">core::ops::function::FnOnce::ca..</text>
    </g>
    <g>
      <title>std::sys_common::backtrace::__rust_begin_short_backtrace (43 samples, 19.82%)</title>
      <rect x="48.3871%" y="517" width="19.8157%" height="15" fill="rgb(210,88,34)" fg:x="105" fg:w="43"/>
      <text x="48.6371%" y="527.50">std::sys_common::backtrace::__r..</text>
    </g>
    <g>
      <title>s4::exec_fileprocessor_thread (43 samples, 19.82%)</title>
      <rect x="48.3871%" y="501" width="19.8157%" height="15" fill="rgb(245,49,27)" fg:x="105" fg:w="43"/>
      <text x="48.6371%" y="511.50">s4::exec_fileprocessor_thread</text>
    </g>
    <g>
      <title>asm_exc_page_fault (1 samples, 0.46%)</title>
      <rect x="68.2028%" y="581" width="0.4608%" height="15" fill="rgb(208,26,13)" fg:x="148" fg:w="1"/>
      <text x="68.4528%" y="591.50"/>
    </g>
    <g>
      <title>exc_page_fault (1 samples, 0.46%)</title>
      <rect x="68.2028%" y="565" width="0.4608%" height="15" fill="rgb(216,51,29)" fg:x="148" fg:w="1"/>
      <text x="68.4528%" y="575.50"/>
    </g>
    <g>
      <title>do_user_addr_fault (1 samples, 0.46%)</title>
      <rect x="68.2028%" y="549" width="0.4608%" height="15" fill="rgb(253,37,52)" fg:x="148" fg:w="1"/>
      <text x="68.4528%" y="559.50"/>
    </g>
    <g>
      <title>handle_mm_fault (1 samples, 0.46%)</title>
      <rect x="68.2028%" y="533" width="0.4608%" height="15" fill="rgb(247,31,49)" fg:x="148" fg:w="1"/>
      <text x="68.4528%" y="543.50"/>
    </g>
    <g>
      <title>__handle_mm_fault (1 samples, 0.46%)</title>
      <rect x="68.2028%" y="517" width="0.4608%" height="15" fill="rgb(254,123,40)" fg:x="148" fg:w="1"/>
      <text x="68.4528%" y="527.50"/>
    </g>
    <g>
      <title>__alloc_pages (1 samples, 0.46%)</title>
      <rect x="68.2028%" y="501" width="0.4608%" height="15" fill="rgb(244,104,38)" fg:x="148" fg:w="1"/>
      <text x="68.4528%" y="511.50"/>
    </g>
    <g>
      <title>get_page_from_freelist (1 samples, 0.46%)</title>
      <rect x="68.2028%" y="485" width="0.4608%" height="15" fill="rgb(246,35,53)" fg:x="148" fg:w="1"/>
      <text x="68.4528%" y="495.50"/>
    </g>
    <g>
      <title>kernel_init_free_pages.part.0 (1 samples, 0.46%)</title>
      <rect x="68.2028%" y="469" width="0.4608%" height="15" fill="rgb(224,1,41)" fg:x="148" fg:w="1"/>
      <text x="68.4528%" y="479.50"/>
    </g>
    <g>
      <title>clear_page_erms (1 samples, 0.46%)</title>
      <rect x="68.2028%" y="453" width="0.4608%" height="15" fill="rgb(253,135,51)" fg:x="148" fg:w="1"/>
      <text x="68.4528%" y="463.50"/>
    </g>
    <g>
      <title>ext4_reserve_inode_write (1 samples, 0.46%)</title>
      <rect x="68.6636%" y="309" width="0.4608%" height="15" fill="rgb(232,18,0)" fg:x="149" fg:w="1"/>
      <text x="68.9136%" y="319.50"/>
    </g>
    <g>
      <title>__ext4_journal_get_write_access (1 samples, 0.46%)</title>
      <rect x="68.6636%" y="293" width="0.4608%" height="15" fill="rgb(219,28,3)" fg:x="149" fg:w="1"/>
      <text x="68.9136%" y="303.50"/>
    </g>
    <g>
      <title>jbd2_journal_get_write_access (1 samples, 0.46%)</title>
      <rect x="68.6636%" y="277" width="0.4608%" height="15" fill="rgb(238,71,44)" fg:x="149" fg:w="1"/>
      <text x="68.9136%" y="287.50"/>
    </g>
    <g>
      <title>jbd2_write_access_granted.part.0 (1 samples, 0.46%)</title>
      <rect x="68.6636%" y="261" width="0.4608%" height="15" fill="rgb(250,139,4)" fg:x="149" fg:w="1"/>
      <text x="68.9136%" y="271.50"/>
    </g>
    <g>
      <title>map_id_up (1 samples, 0.46%)</title>
      <rect x="69.1244%" y="293" width="0.4608%" height="15" fill="rgb(217,119,10)" fg:x="150" fg:w="1"/>
      <text x="69.3744%" y="303.50"/>
    </g>
    <g>
      <title>ext4_inode_csum_set (3 samples, 1.38%)</title>
      <rect x="69.5853%" y="293" width="1.3825%" height="15" fill="rgb(229,207,44)" fg:x="151" fg:w="3"/>
      <text x="69.8353%" y="303.50"/>
    </g>
    <g>
      <title>ext4_inode_csum (3 samples, 1.38%)</title>
      <rect x="69.5853%" y="277" width="1.3825%" height="15" fill="rgb(246,100,22)" fg:x="151" fg:w="3"/>
      <text x="69.8353%" y="287.50"/>
    </g>
    <g>
      <title>chksum_update (3 samples, 1.38%)</title>
      <rect x="69.5853%" y="261" width="1.3825%" height="15" fill="rgb(244,9,51)" fg:x="151" fg:w="3"/>
      <text x="69.8353%" y="271.50"/>
    </g>
    <g>
      <title>_raw_spin_lock (1 samples, 0.46%)</title>
      <rect x="70.9677%" y="293" width="0.4608%" height="15" fill="rgb(225,195,37)" fg:x="154" fg:w="1"/>
      <text x="71.2177%" y="303.50"/>
    </g>
    <g>
      <title>ext4_mark_iloc_dirty (7 samples, 3.23%)</title>
      <rect x="69.1244%" y="309" width="3.2258%" height="15" fill="rgb(236,133,21)" fg:x="150" fg:w="7"/>
      <text x="69.3744%" y="319.50">ext..</text>
    </g>
    <g>
      <title>__ext4_handle_dirty_metadata (2 samples, 0.92%)</title>
      <rect x="71.4286%" y="293" width="0.9217%" height="15" fill="rgb(236,9,12)" fg:x="155" fg:w="2"/>
      <text x="71.6786%" y="303.50"/>
    </g>
    <g>
      <title>ext4_dirty_inode (9 samples, 4.15%)</title>
      <rect x="68.6636%" y="341" width="4.1475%" height="15" fill="rgb(235,194,15)" fg:x="149" fg:w="9"/>
      <text x="68.9136%" y="351.50">ext4_..</text>
    </g>
    <g>
      <title>__ext4_mark_inode_dirty (9 samples, 4.15%)</title>
      <rect x="68.6636%" y="325" width="4.1475%" height="15" fill="rgb(250,159,10)" fg:x="149" fg:w="9"/>
      <text x="68.9136%" y="335.50">__ext..</text>
    </g>
    <g>
      <title>stop_this_handle (1 samples, 0.46%)</title>
      <rect x="72.8111%" y="309" width="0.4608%" height="15" fill="rgb(240,3,51)" fg:x="158" fg:w="1"/>
      <text x="73.0611%" y="319.50"/>
    </g>
    <g>
      <title>__wake_up_common_lock (1 samples, 0.46%)</title>
      <rect x="72.8111%" y="293" width="0.4608%" height="15" fill="rgb(248,80,4)" fg:x="158" fg:w="1"/>
      <text x="73.0611%" y="303.50"/>
    </g>
    <g>
      <title>__lock_text_start (1 samples, 0.46%)</title>
      <rect x="72.8111%" y="277" width="0.4608%" height="15" fill="rgb(212,146,38)" fg:x="158" fg:w="1"/>
      <text x="73.0611%" y="287.50"/>
    </g>
    <g>
      <title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.46%)</title>
      <rect x="72.8111%" y="261" width="0.4608%" height="15" fill="rgb(236,100,45)" fg:x="158" fg:w="1"/>
      <text x="73.0611%" y="271.50"/>
    </g>
    <g>
      <title>__mark_inode_dirty (11 samples, 5.07%)</title>
      <rect x="68.6636%" y="357" width="5.0691%" height="15" fill="rgb(212,91,54)" fg:x="149" fg:w="11"/>
      <text x="68.9136%" y="367.50">__mark..</text>
    </g>
    <g>
      <title>__ext4_journal_stop (2 samples, 0.92%)</title>
      <rect x="72.8111%" y="341" width="0.9217%" height="15" fill="rgb(225,40,54)" fg:x="158" fg:w="2"/>
      <text x="73.0611%" y="351.50"/>
    </g>
    <g>
      <title>jbd2_journal_stop (2 samples, 0.92%)</title>
      <rect x="72.8111%" y="325" width="0.9217%" height="15" fill="rgb(229,91,7)" fg:x="158" fg:w="2"/>
      <text x="73.0611%" y="335.50"/>
    </g>
    <g>
      <title>_raw_spin_lock_irqsave (1 samples, 0.46%)</title>
      <rect x="73.7327%" y="309" width="0.4608%" height="15" fill="rgb(206,213,41)" fg:x="160" fg:w="1"/>
      <text x="73.9827%" y="319.50"/>
    </g>
    <g>
      <title>__xa_set_mark (1 samples, 0.46%)</title>
      <rect x="74.1935%" y="309" width="0.4608%" height="15" fill="rgb(239,212,30)" fg:x="161" fg:w="1"/>
      <text x="74.4435%" y="319.50"/>
    </g>
    <g>
      <title>xas_set_mark (1 samples, 0.46%)</title>
      <rect x="74.1935%" y="293" width="0.4608%" height="15" fill="rgb(232,122,5)" fg:x="161" fg:w="1"/>
      <text x="74.4435%" y="303.50"/>
    </g>
    <g>
      <title>__inc_node_page_state (1 samples, 0.46%)</title>
      <rect x="74.6544%" y="309" width="0.4608%" height="15" fill="rgb(225,82,16)" fg:x="162" fg:w="1"/>
      <text x="74.9044%" y="319.50"/>
    </g>
    <g>
      <title>generic_write_end (15 samples, 6.91%)</title>
      <rect x="68.6636%" y="373" width="6.9124%" height="15" fill="rgb(207,107,21)" fg:x="149" fg:w="15"/>
      <text x="68.9136%" y="383.50">generic_w..</text>
    </g>
    <g>
      <title>__block_commit_write.constprop.0.isra.0 (4 samples, 1.84%)</title>
      <rect x="73.7327%" y="357" width="1.8433%" height="15" fill="rgb(249,65,48)" fg:x="160" fg:w="4"/>
      <text x="73.9827%" y="367.50">_..</text>
    </g>
    <g>
      <title>mark_buffer_dirty (4 samples, 1.84%)</title>
      <rect x="73.7327%" y="341" width="1.8433%" height="15" fill="rgb(238,162,48)" fg:x="160" fg:w="4"/>
      <text x="73.9827%" y="351.50">m..</text>
    </g>
    <g>
      <title>__set_page_dirty (4 samples, 1.84%)</title>
      <rect x="73.7327%" y="325" width="1.8433%" height="15" fill="rgb(221,172,50)" fg:x="160" fg:w="4"/>
      <text x="73.9827%" y="335.50">_..</text>
    </g>
    <g>
      <title>__mod_lruvec_page_state (1 samples, 0.46%)</title>
      <rect x="75.5760%" y="293" width="0.4608%" height="15" fill="rgb(231,38,23)" fg:x="164" fg:w="1"/>
      <text x="75.8260%" y="303.50"/>
    </g>
    <g>
      <title>__add_to_page_cache_locked (2 samples, 0.92%)</title>
      <rect x="75.5760%" y="309" width="0.9217%" height="15" fill="rgb(229,179,48)" fg:x="164" fg:w="2"/>
      <text x="75.8260%" y="319.50"/>
    </g>
    <g>
      <title>add_to_page_cache_lru (3 samples, 1.38%)</title>
      <rect x="75.5760%" y="325" width="1.3825%" height="15" fill="rgb(223,55,45)" fg:x="164" fg:w="3"/>
      <text x="75.8260%" y="335.50"/>
    </g>
    <g>
      <title>rmqueue_bulk (2 samples, 0.92%)</title>
      <rect x="76.9585%" y="293" width="0.9217%" height="15" fill="rgb(251,33,45)" fg:x="167" fg:w="2"/>
      <text x="77.2085%" y="303.50"/>
    </g>
    <g>
      <title>__list_del_entry_valid (2 samples, 0.92%)</title>
      <rect x="76.9585%" y="277" width="0.9217%" height="15" fill="rgb(224,110,12)" fg:x="167" fg:w="2"/>
      <text x="77.2085%" y="287.50"/>
    </g>
    <g>
      <title>grab_cache_page_write_begin (6 samples, 2.76%)</title>
      <rect x="75.5760%" y="357" width="2.7650%" height="15" fill="rgb(221,143,40)" fg:x="164" fg:w="6"/>
      <text x="75.8260%" y="367.50">gr..</text>
    </g>
    <g>
      <title>pagecache_get_page (6 samples, 2.76%)</title>
      <rect x="75.5760%" y="341" width="2.7650%" height="15" fill="rgb(254,146,25)" fg:x="164" fg:w="6"/>
      <text x="75.8260%" y="351.50">pa..</text>
    </g>
    <g>
      <title>__alloc_pages (3 samples, 1.38%)</title>
      <rect x="76.9585%" y="325" width="1.3825%" height="15" fill="rgb(244,104,38)" fg:x="167" fg:w="3"/>
      <text x="77.2085%" y="335.50"/>
    </g>
    <g>
      <title>get_page_from_freelist (3 samples, 1.38%)</title>
      <rect x="76.9585%" y="309" width="1.3825%" height="15" fill="rgb(246,35,53)" fg:x="167" fg:w="3"/>
      <text x="77.2085%" y="319.50"/>
    </g>
    <g>
      <title>node_dirty_ok (1 samples, 0.46%)</title>
      <rect x="77.8802%" y="293" width="0.4608%" height="15" fill="rgb(238,125,45)" fg:x="169" fg:w="1"/>
      <text x="78.1302%" y="303.50"/>
    </g>
    <g>
      <title>ext4_es_insert_delayed_block (1 samples, 0.46%)</title>
      <rect x="78.3410%" y="325" width="0.4608%" height="15" fill="rgb(214,51,42)" fg:x="170" fg:w="1"/>
      <text x="78.5910%" y="335.50"/>
    </g>
    <g>
      <title>__es_insert_extent (1 samples, 0.46%)</title>
      <rect x="78.3410%" y="309" width="0.4608%" height="15" fill="rgb(219,216,0)" fg:x="170" fg:w="1"/>
      <text x="78.5910%" y="319.50"/>
    </g>
    <g>
      <title>__block_write_begin_int (2 samples, 0.92%)</title>
      <rect x="78.3410%" y="357" width="0.9217%" height="15" fill="rgb(211,15,34)" fg:x="170" fg:w="2"/>
      <text x="78.5910%" y="367.50"/>
    </g>
    <g>
      <title>ext4_da_get_block_prep (2 samples, 0.92%)</title>
      <rect x="78.3410%" y="341" width="0.9217%" height="15" fill="rgb(235,98,3)" fg:x="170" fg:w="2"/>
      <text x="78.5910%" y="351.50"/>
    </g>
    <g>
      <title>ext4_da_reserve_space (1 samples, 0.46%)</title>
      <rect x="78.8018%" y="325" width="0.4608%" height="15" fill="rgb(253,48,44)" fg:x="171" fg:w="1"/>
      <text x="79.0518%" y="335.50"/>
    </g>
    <g>
      <title>__dquot_alloc_space (1 samples, 0.46%)</title>
      <rect x="78.8018%" y="309" width="0.4608%" height="15" fill="rgb(217,146,30)" fg:x="171" fg:w="1"/>
      <text x="79.0518%" y="319.50"/>
    </g>
    <g>
      <title>ext4_da_write_begin (9 samples, 4.15%)</title>
      <rect x="75.5760%" y="373" width="4.1475%" height="15" fill="rgb(235,31,43)" fg:x="164" fg:w="9"/>
      <text x="75.8260%" y="383.50">ext4_..</text>
    </g>
    <g>
      <title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_all_cold (30 samples, 13.82%)</title>
      <rect x="68.6636%" y="549" width="13.8249%" height="15" fill="rgb(219,202,23)" fg:x="149" fg:w="30"/>
      <text x="68.9136%" y="559.50">std::io::buffered::bu..</text>
    </g>
    <g>
      <title>std::io::Write::write_all (30 samples, 13.82%)</title>
      <rect x="68.6636%" y="533" width="13.8249%" height="15" fill="rgb(251,145,9)" fg:x="149" fg:w="30"/>
      <text x="68.9136%" y="543.50">std::io::Write::write..</text>
    </g>
    <g>
      <title>&lt;std::os::unix::net::stream::UnixStream as std::io::Write&gt;::write (30 samples, 13.82%)</title>
      <rect x="68.6636%" y="517" width="13.8249%" height="15" fill="rgb(239,91,52)" fg:x="149" fg:w="30"/>
      <text x="68.9136%" y="527.50">&lt;std::os::unix::net::..</text>
    </g>
    <g>
      <title>__GI___libc_write (30 samples, 13.82%)</title>
      <rect x="68.6636%" y="501" width="13.8249%" height="15" fill="rgb(232,197,30)" fg:x="149" fg:w="30"/>
      <text x="68.9136%" y="511.50">__GI___libc_write</text>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (30 samples, 13.82%)</title>
      <rect x="68.6636%" y="485" width="13.8249%" height="15" fill="rgb(205,226,15)" fg:x="149" fg:w="30"/>
      <text x="68.9136%" y="495.50">entry_SYSCALL_64_afte..</text>
    </g>
    <g>
      <title>do_syscall_64 (30 samples, 13.82%)</title>
      <rect x="68.6636%" y="469" width="13.8249%" height="15" fill="rgb(220,74,14)" fg:x="149" fg:w="30"/>
      <text x="68.9136%" y="479.50">do_syscall_64</text>
    </g>
    <g>
      <title>ksys_write (30 samples, 13.82%)</title>
      <rect x="68.6636%" y="453" width="13.8249%" height="15" fill="rgb(223,155,43)" fg:x="149" fg:w="30"/>
      <text x="68.9136%" y="463.50">ksys_write</text>
    </g>
    <g>
      <title>vfs_write (30 samples, 13.82%)</title>
      <rect x="68.6636%" y="437" width="13.8249%" height="15" fill="rgb(216,184,13)" fg:x="149" fg:w="30"/>
      <text x="68.9136%" y="447.50">vfs_write</text>
    </g>
    <g>
      <title>new_sync_write (30 samples, 13.82%)</title>
      <rect x="68.6636%" y="421" width="13.8249%" height="15" fill="rgb(220,167,51)" fg:x="149" fg:w="30"/>
      <text x="68.9136%" y="431.50">new_sync_write</text>
    </g>
    <g>
      <title>ext4_buffered_write_iter (30 samples, 13.82%)</title>
      <rect x="68.6636%" y="405" width="13.8249%" height="15" fill="rgb(214,47,26)" fg:x="149" fg:w="30"/>
      <text x="68.9136%" y="415.50">ext4_buffered_write_i..</text>
    </g>
    <g>
      <title>generic_perform_write (30 samples, 13.82%)</title>
      <rect x="68.6636%" y="389" width="13.8249%" height="15" fill="rgb(218,161,27)" fg:x="149" fg:w="30"/>
      <text x="68.9136%" y="399.50">generic_perform_write</text>
    </g>
    <g>
      <title>copy_page_from_iter_atomic (6 samples, 2.76%)</title>
      <rect x="79.7235%" y="373" width="2.7650%" height="15" fill="rgb(247,27,48)" fg:x="173" fg:w="6"/>
      <text x="79.9735%" y="383.50">co..</text>
    </g>
    <g>
      <title>copy_user_enhanced_fast_string (6 samples, 2.76%)</title>
      <rect x="79.7235%" y="357" width="2.7650%" height="15" fill="rgb(254,4,9)" fg:x="173" fg:w="6"/>
      <text x="79.9735%" y="367.50">co..</text>
    </g>
    <g>
      <title>flate2::gz::bufread::GzDecoder&lt;R&gt;::new (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="549" width="0.4608%" height="15" fill="rgb(235,95,31)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="559.50"/>
    </g>
    <g>
      <title>flate2::gz::GzHeaderParser::parse (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="533" width="0.4608%" height="15" fill="rgb(210,56,8)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="543.50"/>
    </g>
    <g>
      <title>flate2::gz::read_into (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="517" width="0.4608%" height="15" fill="rgb(245,75,48)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="527.50"/>
    </g>
    <g>
      <title>&lt;flate2::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="501" width="0.4608%" height="15" fill="rgb(206,216,24)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="511.50"/>
    </g>
    <g>
      <title>&lt;std::fs::File as std::io::Read&gt;::read (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="485" width="0.4608%" height="15" fill="rgb(223,30,9)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="495.50"/>
    </g>
    <g>
      <title>read (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="469" width="0.4608%" height="15" fill="rgb(209,69,29)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="479.50"/>
    </g>
    <g>
      <title>entry_SYSCALL_64_after_hwframe (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="453" width="0.4608%" height="15" fill="rgb(205,226,15)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="463.50"/>
    </g>
    <g>
      <title>do_syscall_64 (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="437" width="0.4608%" height="15" fill="rgb(220,74,14)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="447.50"/>
    </g>
    <g>
      <title>ksys_read (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="421" width="0.4608%" height="15" fill="rgb(233,96,2)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="431.50"/>
    </g>
    <g>
      <title>vfs_read (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="405" width="0.4608%" height="15" fill="rgb(232,76,33)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="415.50"/>
    </g>
    <g>
      <title>new_sync_read (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="389" width="0.4608%" height="15" fill="rgb(207,29,15)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="399.50"/>
    </g>
    <g>
      <title>filemap_read (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="373" width="0.4608%" height="15" fill="rgb(214,68,38)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="383.50"/>
    </g>
    <g>
      <title>filemap_get_pages (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="357" width="0.4608%" height="15" fill="rgb(242,84,29)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="367.50"/>
    </g>
    <g>
      <title>page_cache_ra_unbounded (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="341" width="0.4608%" height="15" fill="rgb(243,13,49)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="351.50"/>
    </g>
    <g>
      <title>read_pages (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="325" width="0.4608%" height="15" fill="rgb(250,131,52)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="335.50"/>
    </g>
    <g>
      <title>ext4_mpage_readpages (1 samples, 0.46%)</title>
      <rect x="82.4885%" y="309" width="0.4608%" height="15" fill="rgb(248,196,25)" fg:x="179" fg:w="1"/>
      <text x="82.7385%" y="319.50"/>
    </g>
    <g>
      <title>miniz_oxide::inflate::core::transfer (17 samples, 7.83%)</title>
      <rect x="82.9493%" y="453" width="7.8341%" height="15" fill="rgb(245,196,31)" fg:x="180" fg:w="17"/>
      <text x="83.1993%" y="463.50">miniz_oxide..</text>
    </g>
    <g>
      <title>miniz_oxide::inflate::core::init_tree (4 samples, 1.84%)</title>
      <rect x="90.7834%" y="453" width="1.8433%" height="15" fill="rgb(245,66,0)" fg:x="197" fg:w="4"/>
      <text x="91.0334%" y="463.50">m..</text>
    </g>
    <g>
      <title>__memmove_avx512_unaligned_erms (2 samples, 0.92%)</title>
      <rect x="92.6267%" y="453" width="0.9217%" height="15" fill="rgb(217,126,36)" fg:x="201" fg:w="2"/>
      <text x="92.8767%" y="463.50"/>
    </g>
    <g>
      <title>flate2::zio::read (36 samples, 16.59%)</title>
      <rect x="82.9493%" y="533" width="16.5899%" height="15" fill="rgb(223,11,11)" fg:x="180" fg:w="36"/>
      <text x="83.1993%" y="543.50">flate2::zio::read</text>
    </g>
    <g>
      <title>&lt;flate2::ffi::rust::Inflate as flate2::ffi::InflateBackend&gt;::decompress (36 samples, 16.59%)</title>
      <rect x="82.9493%" y="517" width="16.5899%" height="15" fill="rgb(229,135,15)" fg:x="180" fg:w="36"/>
      <text x="83.1993%" y="527.50">&lt;flate2::ffi::rust::Inflat..</text>
    </g>
    <g>
      <title>miniz_oxide::inflate::stream::inflate (36 samples, 16.59%)</title>
      <rect x="82.9493%" y="501" width="16.5899%" height="15" fill="rgb(251,102,38)" fg:x="180" fg:w="36"/>
      <text x="83.1993%" y="511.50">miniz_oxide::inflate::stre..</text>
    </g>
    <g>
      <title>miniz_oxide::inflate::stream::inflate_loop (36 samples, 16.59%)</title>
      <rect x="82.9493%" y="485" width="16.5899%" height="15" fill="rgb(248,182,40)" fg:x="180" fg:w="36"/>
      <text x="83.1993%" y="495.50">miniz_oxide::inflate::stre..</text>
    </g>
    <g>
      <title>miniz_oxide::inflate::core::decompress (36 samples, 16.59%)</title>
      <rect x="82.9493%" y="469" width="16.5899%" height="15" fill="rgb(248,154,7)" fg:x="180" fg:w="36"/>
      <text x="83.1993%" y="479.50">miniz_oxide::inflate::core..</text>
    </g>
    <g>
      <title>all (217 samples, 100%)</title>
      <rect x="0.0000%" y="613" width="100.0000%" height="15" fill="rgb(206,183,37)" fg:x="0" fg:w="217"/>
      <text x="0.2500%" y="623.50"/>
    </g>
    <g>
      <title>RHE_91_system.j (112 samples, 51.61%)</title>
      <rect x="48.3871%" y="597" width="51.6129%" height="15" fill="rgb(216,111,28)" fg:x="105" fg:w="112"/>
      <text x="48.6371%" y="607.50">RHE_91_system.j</text>
    </g>
    <g>
      <title>[unknown] (68 samples, 31.34%)</title>
      <rect x="68.6636%" y="581" width="31.3364%" height="15" fill="rgb(227,28,50)" fg:x="149" fg:w="68"/>
      <text x="68.9136%" y="591.50">[unknown]</text>
    </g>
    <g>
      <title>s4lib::readers::filedecompressor::decompress_to_ntf (68 samples, 31.34%)</title>
      <rect x="68.6636%" y="565" width="31.3364%" height="15" fill="rgb(253,7,37)" fg:x="149" fg:w="68"/>
      <text x="68.9136%" y="575.50">s4lib::readers::filedecompressor::decompress_to_ntf</text>
    </g>
    <g>
      <title>&lt;flate2::gz::bufread::GzDecoder&lt;R&gt; as std::io::Read&gt;::read (37 samples, 17.05%)</title>
      <rect x="82.9493%" y="549" width="17.0507%" height="15" fill="rgb(225,64,27)" fg:x="180" fg:w="37"/>
      <text x="83.1993%" y="559.50">&lt;flate2::gz::bufread::GzDe..</text>
    </g>
    <g>
      <title>crc32fast::Hasher::update (1 samples, 0.46%)</title>
      <rect x="99.5392%" y="533" width="0.4608%" height="15" fill="rgb(242,188,16)" fg:x="216" fg:w="1"/>
      <text x="99.7892%" y="543.50"/>
    </g>
    <g>
      <title>crc32fast::specialized::pclmulqdq::calculate (1 samples, 0.46%)</title>
      <rect x="99.5392%" y="517" width="0.4608%" height="15" fill="rgb(208,156,27)" fg:x="216" fg:w="1"/>
      <text x="99.7892%" y="527.50"/>
    </g>
  </svg>
</svg>
